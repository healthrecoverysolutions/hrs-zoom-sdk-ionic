{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login.module.ts","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-content class=\\\"login-page c_splash--page\\\"\\n             scroll=\\\"false\\\">\\n    <div class=\\\"c_splash--wrapper\\\">\\n\\n        <div class=\\\"c_splash--logo_container\\\" (click)=\\\"openAdmin()\\\">\\n            <div class=\\\"c_splash--logo_bg\\\"></div>\\n            <div class=\\\"c_splash--logo\\\"></div>\\n        </div>\\n        <div class=\\\"c_splash--card_container is-login\\\">\\n            <div class=\\\"c_splash--card_bg\\\"></div>\\n            <main class=\\\"c_splash--card\\\">\\n                <header class=\\\"c_splash--card_header c_card--header\\\">\\n                    <div class=\\\"c_splash--header_bg\\\"></div>\\n                    <ion-button class=\\\"c_splash--back_btn\\\"\\n                                [routerLink]=\\\"['/welcome']\\\"\\n                                routerDirection=\\\"back\\\"></ion-button>\\n                    <span class=\\\"c_splash--title_text\\\">\\n                        {{ 'SIGNIN' | translate }}\\n                    </span>\\n                </header>\\n                <div class=\\\"c_splash--card_content c_card--content\\\">\\n                    <form id=\\\"loginForm\\\"\\n                          class=\\\"c_splash--form\\\"\\n                          [formGroup]=\\\"account\\\">\\n                        <ion-list class=\\\"c_splash--input_wrapper\\\">\\n                            <ion-item class=\\\"c_splash--input\\\">\\n                                <ion-label class=\\\"c_splash--input_label\\\"\\n                                           position=\\\"floating\\\">\\n                                    {{ 'USERNAME' | translate }}\\n                                </ion-label>\\n                                <ion-input class=\\\"c_splash--input_field\\\"\\n                                           autocapitalize=\\\"none\\\"\\n                                           type=\\\"username\\\"\\n                                           formControlName=\\\"user\\\"></ion-input>\\n                            </ion-item>\\n\\n                            <ion-item class=\\\"c_splash--input\\\">\\n                                <ion-label class=\\\"c_splash--input_label\\\"\\n                                           position=\\\"floating\\\">\\n                                    {{ 'PASSWORD' | translate }}\\n                                </ion-label>\\n                                <ion-input class=\\\"c_splash--input_field\\\"\\n                                           type=\\\"password\\\"\\n                                           autocapitalize=\\\"none\\\"\\n                                           formControlName=\\\"pass\\\"></ion-input>\\n                            </ion-item>\\n                        </ion-list>\\n                    </form>\\n                </div>\\n                <footer class=\\\"c_splash--card_footer c_card--buttons\\\">\\n                    <div class=\\\"c_splash--footer_bg\\\"></div>\\n                    <ion-button class=\\\"c_button login\\\"\\n                                (click)=\\\"account.valid && doLogin()\\\"\\n                                type=\\\"submit\\\"\\n                                [disabled]=\\\"!account.valid || loggingIn\\\">\\n                        {{ 'LOGIN_BUTTON' | translate }}\\n                    </ion-button>\\n                </footer>\\n            </main>\\n        </div>\\n    </div>\\n</ion-content>\\n\"","import {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {CookieService} from 'ngx-cookie-service';\nimport {NGXLogger} from 'ngx-logger';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {LoginPage} from './login.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: LoginPage\n            }\n        ]),\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [LoginPage],\n    schemas: [NO_ERRORS_SCHEMA],\n    providers: [\n        CookieService,\n        NGXLogger,\n        FormsModule\n    ]\n})\nexport class LoginPageModule {}\n","import {Component} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NavController, ToastController, MenuController, NavParams} from '@ionic/angular';\nimport {Validators, FormControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {NGXLogger} from 'ngx-logger';\nimport {User} from '../services/user/user';\nimport {Router} from '@angular/router';\nimport {AdminService} from '@clinician/providers';\n\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.page.html',\n    providers: [NGXLogger]\n})\nexport class LoginPage {\n    data: any;\n    loggingIn: boolean;\n    // Our translated text strings\n    private loginErrorString: string;\n    private loginSuccessString: string;\n    private account: FormGroup;\n\n    constructor(\n        private navCtrl: NavController,\n        private toastCtrl: ToastController,\n        private translateService: TranslateService,\n        private menuCtrl: MenuController,\n        private user: User,\n        private logger: NGXLogger,\n        private formBuilder: FormBuilder,\n        private router: Router,\n        private adminService: AdminService\n    ) {\n        this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n            this.loginErrorString = value;\n        });\n\n        this.translateService.get('LOGIN_SUCCESS').subscribe((value) => {\n            this.loginSuccessString = value;\n        });\n    }\n\n    ngOnInit(): void {\n        this.menuCtrl.enable(false);\n        // The account fields for the login form.\n        this.account = this.formBuilder.group({\n            user: new FormControl('', Validators.required),\n            pass: new FormControl('', Validators.required),\n            type: new FormControl('clinician', null)\n        });\n    }\n\n    ionViewDidLeave() {\n        this.menuCtrl.enable(true);\n    }\n\n    // Attempt to login in through our User service\n\n    async doLogin(): Promise<any> {\n        this.loggingIn = true;\n        this.user.login(this.account.value).subscribe(\n            {\n                next: (resp) => {\n                    this.loggingIn = false;\n                    this.data = resp;\n                    let toastMessage = this.loginSuccessString;\n                    if (this.user.data.type !== 'clinician') {\n                        toastMessage = this.loginErrorString;\n                    } else {\n                        this.router.navigateByUrl('/patient-list');\n                    }\n                    this.loginToast(toastMessage);\n                    return this.data;\n                },\n                error: (err) => {\n                    // Unable to log in\n                    let toastFailMessage = this.loginErrorString;\n                    this.loggingIn = false;\n                    this.loginToast(toastFailMessage);\n                }\n            }\n        ).add(() => this.account.reset());\n    }\n\n    async loginToast(toastMessage: string) {\n        let loginToast = await this.toastCtrl.create({\n            message: toastMessage,\n            duration: 3000,\n            position: 'top'\n        });\n        return await loginToast.present();\n    }\n\n    public openAdmin(): void {\n        this.adminService.openAdmin();\n    }\n}\n"],"sourceRoot":""}