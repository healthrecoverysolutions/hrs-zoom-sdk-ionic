{"version":3,"sources":["/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/classes/all-metrics.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/environments/environment","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/gateway/gateway-resource.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/gateway/gateway.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/gateway/index.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/gateway/resources/index.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/gateway/resources/patient-settings-apiv2-response.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/gateway/resources/token-meta.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/models/daily-survey-details.model.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/models/metric-entry.model.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/models/model-with-events.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/models/models.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/models/patient.model.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/models/survey-entry.model.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/models/survey-group.model.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/HRSLoggerMonitor.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/api/api-interceptor.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/api/gateway-api.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/broadcastService.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/communication/communication.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/event-manager.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/globalSettingsService/globalSettings.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/modalService/modal.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/providers.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/survey-details/survey-details.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/survey-details/survey-score-type.enum.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/providers/token/token.service.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/BuildUtility.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/CollectionUtility.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ConvertGlucose.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ConvertHeartRate.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ConvertRatio.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ConvertString.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ConvertTemperature.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ConvertTime.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ConvertWeight.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/LocalUpdateInterval.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/ObjectUtility.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/libs/utility/index.ts","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/node_modules/moment/locale sync ^\\.\\/.*$","./$_lazy_route_resource lazy namespace object","./firebase/firebase-account-info.ts","./node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/admin/admin-access/admin-access.component.html","./src/app/admin/admin.page.html","./src/app/admin/domain-settings/domain-settings.component.html","./src/app/app.component.html","./src/app/communication/chat/chat.page.html","./src/app/communication/video/video.page.html","./src/app/communication/voice/voice.page.html","./src/app/organizational-login/organizational-login.page.html","./src/app/patient/careplan/careplan.page.html","./src/app/patient/careplan/edit-careplan/edit-careplan.page.html","./src/app/patient/device/add-device.page.html","./src/app/patient/patient-status-change/patient-status-change.html","./src/app/patient/reset-metrics/reset-metrics.page.html","./src/app/admin/admin-access/admin-access.component.scss","./src/app/admin/admin-access/admin-access.component.ts","./src/app/admin/admin.module.ts","./src/app/admin/admin.page.scss","./src/app/admin/admin.page.ts","./src/app/admin/domain-settings/domain-settings.component.scss","./src/app/admin/domain-settings/domain-settings.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/communication/chat/chat.module.ts","./src/app/communication/chat/chat.page.ts","./src/app/communication/video/video.module.ts","./src/app/communication/video/video.page.ts","./src/app/communication/voice/voice.module.ts","./src/app/communication/voice/voice.page.ts","./src/app/enums/activation-status.enum.ts","./src/app/enums/admin-settings.enum.ts","./src/app/enums/index.ts","./src/app/organizational-login/organizational-login.page.ts","./src/app/patient/careplan/careplan.module.ts","./src/app/patient/careplan/careplan.page.scss","./src/app/patient/careplan/careplan.page.ts","./src/app/patient/careplan/edit-careplan/edit-careplan.module.ts","./src/app/patient/careplan/edit-careplan/edit-careplan.page.scss","./src/app/patient/careplan/edit-careplan/edit-careplan.page.ts","./src/app/patient/device/add-device.module.ts","./src/app/patient/device/add-device.page.scss","./src/app/patient/device/add-device.page.ts","./src/app/patient/patient-status-change/patient-status-change.module.ts","./src/app/patient/patient-status-change/patient-status-change.scss","./src/app/patient/patient-status-change/patient-status-change.ts","./src/app/patient/reset-metrics/reset-metrics.module.ts","./src/app/patient/reset-metrics/reset-metrics.page.scss","./src/app/patient/reset-metrics/reset-metrics.page.ts","./src/app/services/admin/admin.service.ts","./src/app/services/data-exchange/data-exchange.service.ts","./src/app/services/environment/environment.ts","./src/app/services/firebase/firebase.ts","./src/app/services/historical-data/historical-data.service.ts","./src/app/services/patientList/patientList.service.ts","./src/app/services/patientProfile/careplan/careplan.service.ts","./src/app/services/patientProfile/patientDevice.service.ts","./src/app/services/patientProfile/patientProfile.service.ts","./src/app/services/providers.ts","./src/app/services/reviewed-status/reviewed-status.service.ts","./src/app/services/settings/settings.ts","./src/app/services/user-agent/user-agent.ts","./src/app/services/user/user.ts","./src/app/services/zoom/zoom.service.ts","./src/common/models/daily-metrics.model.ts","./src/common/models/metric-models/activity-entry.model.ts","./src/common/models/metric-models/blood-pressure-entry.model.ts","./src/common/models/metric-models/glucose-entry.model.ts","./src/common/models/metric-models/medication-entry.model.ts","./src/common/models/metric-models/pulse-ox-entry.model.ts","./src/common/models/metric-models/steps-entry.model.ts","./src/common/models/metric-models/stethoscope-entry.model.ts","./src/common/models/metric-models/temperature-entry.model.ts","./src/common/models/metric-models/weight-entry.model.ts","./src/common/models/metric-models/wound-image-entry.model.ts","./src/common/models/models.ts","./src/common/models/patient-settings-response.ts","./src/common/models/patient.ts","./src/main.ts","./src/pipes/display-gender.pipe.ts","./src/pipes/pipes.module.ts"],"names":[],"mappings":"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KAC1F;IACD,IAAI,EAAE;QACF,gBAAgB,EAAE,cAAc;QAChC,cAAc,EAAE,2CAA2C;QAC3D,YAAY,EAAE,oBAAoB;QAClC,gBAAgB,EAAE,gCAAgC;QAClD,QAAQ,EAAE,yCAAyC;QACnD,SAAS,EAAE,yCAAyC;QACpD,cAAc,EAAE,gCAAgC;QAChD,WAAW,EAAE,0EAA0E;KAC1F;CACJ,CAAC;;;;;;;;;;;;AC/BF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"main-es2015.js","sourcesContent":["export class AllMetrics {\n    static activity: MetricIdentifiers = {\n        key: 'activity', name: 'Activity',\n        shortname: 'Activity', metricdetails: ['duration'],\n        risklabels: {medrisk: 'riskMedActivity', highrisk: 'riskHighActivity'}\n    };\n    static bloodpressure: MetricIdentifiers = {\n        key: 'bloodpressure', name: 'Blood Pressure',\n        shortname: 'BP', metricdetails: ['systolic', 'diastolic', 'heartrate'],\n        risklabels: {medrisk: 'riskMedBloodPressure', highrisk: 'riskHighBloodPressure'}\n    };\n    static glucose: MetricIdentifiers = {\n        key: 'glucose', name: 'Glucose',\n        shortname: 'Glucose', metricdetails: ['glucose'],\n        risklabels: {medrisk: 'riskMedGlucose', highrisk: 'riskHighGlucose'}\n    };\n    static survey: MetricIdentifiers = {\n        key: 'survey', name: 'Survey',\n        shortname: 'Survey', metricdetails: [],\n        risklabels: {medrisk: 'riskMedSurvey', highrisk: 'riskHighSurvey'}\n    };\n    static medication: MetricIdentifiers = {\n        key: 'medication', name: 'Medication',\n        shortname: 'Medication', metricdetails: [],\n        risklabels: {medrisk: 'riskMedMedication', highrisk: 'riskHighMedication'}\n    };\n    static pulseox: MetricIdentifiers = {\n        key: 'pulseox', name: 'Pulse Ox',\n        shortname: 'Pulse Ox', metricdetails: ['spo2', 'heartrate'],\n        risklabels: {medrisk: 'riskMedPulseox', highrisk: 'riskHighPulseox'}\n    };\n    static temperature: MetricIdentifiers = {\n        key: 'temperature', name: 'Temperature',\n        shortname: 'Temperature', metricdetails: ['temperature', 'unit'],\n        risklabels: {medrisk: 'riskMedTemperature', highrisk: 'riskHighTemperature'}\n    };\n    static weight: MetricIdentifiers = {\n        key: 'weight', name: 'Weight',\n        shortname: 'Weight', metricdetails: ['weight'],\n        risklabels: {medrisk: 'riskMedWeight', highrisk: 'riskHighWeight'}\n    };\n    static steps: MetricIdentifiers = {\n        key: 'steps', name: 'Steps',\n        shortname: 'Steps', metricdetails: ['steps']\n    };\n    static patientconnectvoice: MetricIdentifiers = {\n        key: 'patientconnectvoice', name: 'PatientConnect Voice',\n        shortname: 'PatientConnect Voice', metricdetails: ['patientconnectvoice'],\n        risklabels: {medrisk: 'riskMedPCVoice', highrisk: 'riskHighPCVoice'}\n    };\n}\n\nexport interface MetricIdentifiers {\n    key: string;\n    name: string;\n    shortname: string;\n    metricdetails: string[];\n    risklabels?: { [medrisk: string]: string };\n}\n","export const environment = {\n    production: true,\n    current_environment: 'prod',\n    HRS_DOMAIN: 'healthrecoverysolutions.com',\n    API_GATEWAY_URL: 'https://gateway.healthrecoverysolutions.com',\n    USE_ANALYTICS: true,\n    ANALYTICS_INFO: {\n        url: 'https://analytics.healthrecoverysolutions.com/js/container_LpTpOOUg.js'\n    },\n    DEBUG: false,\n    HRSTAB: 'HRSTAB_value',\n    LEGACYDESIGN: 'LEGACYDESIGN_value',\n    UPDATEINTERVAL: 3600000\n};\n","import {HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {GatewayService} from './gateway.service';\nimport {GatewayResponse} from './gateway-response';\nimport {GatewayRequest} from './gateway-request';\nimport {GatewaySelectRequest} from './gateway-select-request';\nimport {GatewayUpdateRequest} from './gateway-update-request';\nimport {TokenRequest, TokenResponse} from './resources';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {TokenService} from '@hrs/providers';\n\n/**\n * This is the service to use for interacting with Gateway endpoints that deal with RESTful resources and follow our newer API standard formats.\n * If instead you need to call Gateway endpoints that don't work with these standards, then you can use the more general GatewayService instead.\n *\n * Some reasons to use this:\n * - strict typing of parameters for enforcing consistency\n * - outbound data transformation of the resource you submit if it implements a toJSON function\n * - inbound data transformation of the response if you provide a factory function\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class GatewayResourceService {\n    constructor(\n        private gateway: GatewayService,\n        private tokenService: TokenService\n    ) {}\n\n    get token(): string {\n        return this.tokenService.token;\n    }\n\n    set token(token: string) {\n        this.tokenService.token = token;\n    }\n\n    public login(credentials: TokenRequest): Observable<GatewayResponse<TokenResponse>> {\n        return this.post<any, TokenResponse>({endpoint: 'v1/tokens'}, credentials).pipe(\n            tap((res: GatewayResponse<TokenResponse>) => {\n                this.token = res.data.attributes.token;\n            })\n        );\n    }\n\n    public isLoggedIn(): boolean {\n        return this.gateway.isLoggedIn();\n    }\n\n    public logout(): void {\n        this.gateway.logout();\n    }\n\n    public get<T>(options: GatewaySelectRequest, factory?: (data) => T): Observable<GatewayResponse<T|T[]>> {\n        return this.sendRequest<undefined, T>('GET', options, undefined, factory);\n    }\n\n    public post<T, U>(options: GatewayRequest, resource: T, factory?: (data) => U): Observable<GatewayResponse<U|U[]>> {\n        return this.sendRequest<T, U>('POST', options, resource, factory);\n    }\n\n    public put<T, U>(options: GatewayUpdateRequest, resource: T, factory?: (data) => U): Observable<GatewayResponse<U|U[]>> {\n        return this.sendRequest<T, U>('PUT', options, resource, factory);\n    }\n\n    public patch<T, U>(options: GatewayUpdateRequest, resource: T, factory?: (data) => U): Observable<GatewayResponse<U|U[]>> {\n        return this.sendRequest<T, U>('PATCH', options, resource, factory);\n    }\n\n    public delete<T>(options: GatewayUpdateRequest): Observable<GatewayResponse<T|T[]>> {\n        return this.sendRequest<undefined, T>('DELETE', options);\n    }\n\n    private sendRequest<T, U>(method: string, options: GatewayRequest, resource?: T, factory?: (data) => U): Observable<GatewayResponse<U|U[]>> {\n        const query = {};\n        if (options['filter']) {\n            query['filter'] = options['filter'];\n        }\n\n        return this.gateway[method.toLowerCase()]({\n            path: options.endpoint + (options['id'] ? '/' + options['id'] : ''),\n            query: query,\n            body: resource ? {\n                data: typeof resource['toJSON'] === 'function' ? (resource as any).toJSON() : resource\n            } : undefined\n        }).pipe(tap((res: HttpResponse<U>) => {\n            this.parseResponse<U>(res, factory);\n        }));\n    }\n\n    private parseResponse<T>(res: HttpResponse<T|T[]>, factory?: (data) => T): GatewayResponse<T|T[]> {\n        const result = {};\n        if (res) {\n            if (res.status) result['status'] = res.status;\n            if (res.body) {\n                if (res.body['data']) {\n                    const data = res.body['data'];\n                    if (Array.isArray(data)) {\n                        result['data'] = data.map((x) => factory ? factory(x) : x);\n                    } else {\n                        result['data'] = factory ? factory(data) : data;\n                    }\n                }\n                result['meta'] = res.body['meta'];\n            }\n        }\n        return result;\n    }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {environment} from '@app/env';\nimport {GatewayHttpOptions} from './gateway-http-options';\nimport {Observable} from 'rxjs';\nimport {TokenService} from '@hrs/providers';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class GatewayService {\n    public language: string = 'en';\n\n    private _hrsUserAgentHeader: string;\n\n    constructor(\n        private http: HttpClient,\n        private tokenService: TokenService\n    ) {}\n\n    set hrsUserAgentHeader(hrsUserAgentHeader: string) {\n        this._hrsUserAgentHeader = hrsUserAgentHeader;\n    }\n\n    get hrsUserAgentHeader(): string {\n        return this._hrsUserAgentHeader;\n    }\n\n    public isLoggedIn(): boolean {\n        return this.tokenService.token !== null;\n    }\n\n    public logout(): void {\n        this.tokenService.token = null;\n    }\n\n    public get<T>(options: GatewayHttpOptions): Observable<T> {\n        return this.sendRequest('GET', options);\n    }\n\n    public post<T>(options: GatewayHttpOptions): Observable<T> {\n        return this.sendRequest('POST', options);\n    }\n\n    public put<T>(options: GatewayHttpOptions): Observable<T> {\n        return this.sendRequest('PUT', options);\n    }\n\n    public patch<T>(options: GatewayHttpOptions): Observable<T> {\n        return this.sendRequest('PATCH', options);\n    }\n\n    public delete<T>(options: GatewayHttpOptions): Observable<T> {\n        return this.sendRequest('DELETE', options);\n    }\n\n    private sendRequest<T>(method: string, options: GatewayHttpOptions): Observable<T> {\n        let reqOptions = {\n            headers: options.headers || {}\n        };\n\n        reqOptions.headers['Content-Type'] = options.contentType ? options.contentType : 'application/json';\n\n        reqOptions.headers['Accept-Language'] = this.language;\n\n        if (this._hrsUserAgentHeader) {\n            reqOptions.headers['hrs-user-agent'] = this._hrsUserAgentHeader;\n        }\n        if (options.responseType) {\n            reqOptions['responseType'] = options.responseType;\n        }\n        if (this.tokenService.token) {\n            reqOptions.headers['Authorization'] = 'Bearer ' + this.tokenService.token;\n        }\n\n        let queryString = '';\n        if (options.query) {\n            queryString = Object.keys(options.query)\n                .map((key) => {\n                    let value = options.query[key];\n\n                    if (value && typeof value === 'object') {\n                        return Object.keys(value)\n                            .map((nestedKey) => `${key}[${nestedKey}]=${value[nestedKey]}`)\n                            .join('&');\n                    } else {\n                        return `${key}=${value}`;\n                    }\n                })\n                .join('&');\n        }\n\n        const url = environment.API_GATEWAY_URL + '/' + options.path + (queryString ? '?' + queryString : '');\n        method = method.toLowerCase();\n        if (method === 'get' || method === 'delete') {\n            return this.http[method]<T>(\n                url,\n                reqOptions\n            );\n        } else {\n            return this.http[method]<T>(\n                url,\n                options.body,\n                reqOptions\n            );\n        }\n    }\n}\n","export * from './gateway.service';\nexport * from './gateway-resource.service';\n\nexport * from './gateway-http-options';\nexport * from './gateway-request';\nexport * from './gateway-response';\nexport * from './gateway-select-request';\nexport * from './gateway-update-request';\n\nexport * from './resources';\n","export * from './add-patient.response';\nexport * from './cgc-patient-apiv2-response';\nexport * from './clinician-session-response';\nexport * from './clinician-settings-response';\nexport * from './patient-link-creation-request';\nexport * from './patient-links-request';\nexport * from './patient-settings-apiv2-request';\nexport * from './patient-settings-apiv2-response';\nexport * from './token-meta';\nexport * from './token-request';\nexport * from './token-response';\nexport * from './video-secrets-response';\n","import * as moment from 'moment';\n\n/**\n * @route GET /patient/{hrsid}/profile/v2\n */\n\nexport class PatientSettingsResponse {\n    public gender: string;\n    public dob: string;\n    public PATIENTINFO_CUSTOMATTRIBUTES: {[key: string]: any}[];\n    public alternaterelationship: string;\n    public alternatetelephone: string;\n    public alternatelastname: string;\n    public alternatemiddlename: string;\n    public alternatefirstname: string;\n    public audioreminders: boolean;\n    public volume: number;\n    public language: string;\n    public lasthospitalization: string | Date;\n    public testpatient: any | string;\n    public subgroup: any | ((pn: string) => string) | string;\n    public phone: string;\n    public name: {first: string, middle: string, last: string};\n    public pid: string;\n    public timezone: string;\n\n    constructor(response) {\n        this.pid = response.data.pid;\n        this.name = response.data.name;\n        this.gender = response.data.gender;\n        this.dob = (response.data.dob ? moment(response.data.dob, 'MM-DD-YYYY').format('MM/DD/YYYY') : null);\n        this.phone = response.data.phone;\n        this.subgroup = response.data.subgroup;\n        this.testpatient = response.data.testpatient ? 'Yes' : 'No';\n        this.language = response.data.language;\n        this.volume = response.data.volume;\n        this.audioreminders = response.data.audioreminders;\n        this.alternatefirstname = response.data.alternatefirstname;\n        this.alternatemiddlename = response.data.alternatemiddlename;\n        this.alternatelastname = response.data.alternatelastname;\n        this.alternatetelephone = response.data.alternatetelephone;\n        this.alternaterelationship = response.data.alternaterelationship;\n        this.PATIENTINFO_CUSTOMATTRIBUTES = response.data.PATIENTINFO_CUSTOMATTRIBUTES;\n        this.lasthospitalization = this.formatLastHospitalization(response);\n        this.timezone = response.data.timezone;\n    }\n\n    formatLastHospitalization(response): string {\n        // Last Hospitalization timestamp varies between milliseconds and seconds creating issues\n        // Convert all TimeStamp values to milliseconds\n        let lastHospitalization = response.data.lasthospitalization < 10000000000 &&\n        typeof response.data.lasthospitalization === 'number' ?\n            response.data.lasthospitalization * 1000 :\n            response.data.lasthospitalization;\n\n        return response.data.lasthospitalization = lastHospitalization ?\n            moment(new Date(lastHospitalization)).format('MM/DD/YYYY') : null;\n    }\n}\n","import * as moment from 'moment-timezone';\n\n/**\n * @route GET|POST /token-metas\n */\nexport class TokenMeta {\n    id: string;\n    created: moment.Moment;\n    lastUsed: moment.Moment;\n    source: string;\n\n    static fromJSON(data: any): TokenMeta {\n        const token = new TokenMeta();\n        token.id = data.id;\n        // These timestamps were received with offset +00:00 but that's incorrect, their actual timezone is Eastern\n        if (data.created) {\n            token.created = moment.tz(data.created, 'America/New_York');\n        }\n        if (data.lastUsed) {\n            token.lastUsed = moment.tz(data.lastUsed, 'America/New_York');\n        }\n        token.source = data.source;\n        return token;\n    }\n\n    toJSON(): any {\n        return {\n            id: this.id,\n            created: this.created.format(),\n            lastUsed: this.lastUsed.format(),\n            source: this.source\n        };\n    }\n}\n","import { Moment } from 'moment';\nimport { SurveyEntry, SurveyGroupModel } from './models';\n\nexport class DailySurveyDetailsModel {\n    public grouped: SurveyGroupModel[];\n    public ungrouped: SurveyEntry[];\n    public date: Moment;\n    public answeredCount: number;\n}\n","import * as moment from 'moment';\nimport { Moment } from 'moment';\n\nexport class MetricEntry {\n    public date: Moment;\n    public manual: boolean = false;\n    public deleted: boolean = false;\n    public id: string;\n    constructor(\n        timestamp: number,\n        id: string\n    ) {\n        this.date = moment.unix(timestamp / 1000);\n        this.id = id;\n    }\n}\n","/**\n * Base class that can be extended by models\n *\n * Provides an implementation of publish-subscribe messaging pattern, but with short-circuiting in case an event has\n * already completed so that subscribers get an immediate response.\n * Unsubscribe also happens automatically on publish unless setFlag optional parameter 'closed' is set to false.\n */\nexport abstract class ModelWithEvents {\n    // Override this in child classes to provide a list of the event names\n    public events: {\n        [event: string]: string\n    } = {};\n\n    private flags: {\n        [event: string]: boolean\n    } = {};\n\n    private subscribers: {\n        [event: string]: ((model: ModelWithEvents) => void)[]\n    } = {};\n\n    public getFlag(event: string): boolean {\n        return !!this.flags[event];\n    }\n\n    public setFlag(event: string, value: boolean = true, closed?: boolean): void {\n        if (!this.hasEvent(event)) return;\n\n        this.flags[event] = value;\n        if (value) {\n            this.publish(event, closed);\n        }\n    }\n\n    public subscribe(event: string, callback: (model: ModelWithEvents) => void): () => void {\n        if (!this.hasEvent(event)) return () => {};\n\n        if (this.getFlag(event)) {\n            // The event had already completed, so we can callback immediately and return a dummy unsubscriber function\n            callback(this);\n            return () => {};\n        } else {\n            if (!this.subscribers[event]) {\n                this.subscribers[event] = [];\n            }\n            const callbacks = this.subscribers[event];\n            const index = callbacks.length;\n            callbacks.push(callback);\n            return () => {\n                delete callbacks[index];\n            };\n        }\n    }\n\n    private publish(event: string, closed: boolean = true): void {\n        const callbacks = this.subscribers[event];\n        if (!callbacks) return;\n\n        for (let i = 0; i < callbacks.length; i++) {\n            let callback = callbacks[i];\n            if (callback) {\n                callback(this);\n                if (closed) delete callbacks[i];\n            }\n        }\n    }\n\n    private hasEvent(event: string) {\n        return this.events.hasOwnProperty(event);\n    }\n}\n","import {DailySurveyDetailsModel} from './daily-survey-details.model';\nimport {MetricEntry} from './metric-entry.model';\nimport {SurveyEntry} from './survey-entry.model';\nimport {SurveyGroupModel} from './survey-group.model';\nimport {PatientModel} from './patient.model';\n\nexport {\n    DailySurveyDetailsModel,\n    MetricEntry,\n    PatientModel,\n    SurveyEntry,\n    SurveyGroupModel\n};\n","import {PatientResponseDataInterfaces} from '../interfaces/patient-response-data.interface';\nimport {PatientProfile} from '../interfaces/patient-profile.interface';\nimport * as moment from 'moment';\nimport {RecentMetricEntries} from '../interfaces/metrics-entries/recent-metrics.interface';\nimport {StartingWeight} from '../interfaces/metrics-entries/starting-weight.interface';\nimport {AllMetrics} from '../classes/all-metrics';\nimport {ModelWithEvents} from './model-with-events';\n\nexport class PatientModel extends ModelWithEvents {\n    public events: {[name: string]: string} = {\n        patientLoaded: 'patientLoaded',\n        overviewDataLoaded: 'overviewDataLoaded',\n        startingWeightLoaded: 'startingWeightLoaded',\n        trendsDataLoaded: 'trendsDataLoaded',\n        historicalDataLoaded: 'historicalDataLoaded',\n        updatedRecentMetrics: 'updatedRecentMetrics',\n    };\n\n    public hrsid: string;\n    public profile: PatientProfile;\n    public data: PatientResponseDataInterfaces;\n    public historical: PatientResponseDataInterfaces[] = [];\n    public overview: PatientResponseDataInterfaces[] = [];\n    public recentMetrics: RecentMetricEntries = {};\n    public lastDateRequested: moment.Moment;\n    public stillLoading = true;\n    public startingWeight: StartingWeight = {weightFirst: '', weightFirstTime: ''};\n    public modules: string[];\n\n    get patientLoaded() {\n        return this.getFlag(this.events.patientLoaded);\n    }\n\n    set patientLoaded(value: boolean) {\n        this.setFlag(this.events.patientLoaded, value);\n    }\n\n    get overviewDataLoaded() {\n        return this.getFlag(this.events.overviewDataLoaded);\n    }\n\n    set overviewDataLoaded(value: boolean) {\n        this.setFlag(this.events.overviewDataLoaded, value);\n    }\n\n    get startingWeightLoaded() {\n        return this.getFlag(this.events.startingWeightLoaded);\n    }\n\n    set startingWeightLoaded(value: boolean) {\n        this.setFlag(this.events.startingWeightLoaded, value);\n    }\n\n    get trendsDataLoaded() {\n        return this.getFlag(this.events.trendsDataLoaded);\n    }\n\n    set trendsDataLoaded(value: boolean) {\n        this.setFlag(this.events.trendsDataLoaded, value);\n    }\n\n    get historicalDataLoaded() {\n        return this.getFlag(this.events.historicalDataLoaded);\n    }\n\n    set historicalDataLoaded(value: boolean) {\n        this.setFlag(this.events.historicalDataLoaded, value);\n    }\n\n    get updatedRecentMetrics() {\n        return this.getFlag(this.events.updatedRecentMetrics);\n    }\n\n    set updatedRecentMetrics(value: boolean) {\n        this.setFlag(this.events.updatedRecentMetrics, value, false);\n    }\n\n    get all() {\n        return this.overview.concat(this.historical);\n    }\n\n    initializeWithData(data: PatientResponseDataInterfaces): void {\n        if (!this.patientLoaded) {\n            this.data = data;\n            this.overview[0] = data;\n            this.profile = data.profile;\n            this.setRecentMetrics();\n            this.getLatestRiskLevels();\n            this.patientLoaded = true;\n\n            // account for difference in unreviewed patients' responses between patient list (returns []) and\n            // patient profile data (omits the 'reviewed' property) that causes a flicker between the 'Reviewed' and 'Non-reviewed' buttons\n            if (this.profile.reviewed && (typeof this.profile.reviewed !== 'boolean') && (this.profile.reviewed.length == 0)) {\n                this.profile.reviewed = undefined;\n            }\n        }\n    }\n\n    public setRecentMetrics(data?: PatientResponseDataInterfaces[]): void {\n        if (!!data) this.updatedRecentMetrics = false;\n        if (!data) this.recentMetrics = {};\n\n        const metrics = Object.keys(this.data.metrics);\n        let entries = !data ? this.all : data;\n        for (let metric of metrics) {\n            if (RegExp(metric).test('survey woundimaging medication')) continue;\n            Object.assign(this.recentMetrics, this.getLatestReadingsForMetric(entries, metric));\n        }\n\n        // trigger trends charts if patient is newer than 15 days\n        if (this.data.day <= 15) {\n            let recordedDays = this.all.filter((day) => day['day'] > 0);\n            // because the data will loaded in batches even for a small range patient - be sure that all the data days are loaded before flagging\n            if (recordedDays.length === this.data.day) {\n                this.updatedRecentMetrics = true;\n                this.trendsDataLoaded = true;\n            }\n        }\n\n        if (!!data) {\n            this.updatedRecentMetrics = true;\n        } else {\n            this.getLatestRiskLevels();\n        }\n    }\n\n    private getLatestReadingsForMetric(data: PatientResponseDataInterfaces[], metric: string): RecentMetricEntries {\n        let readings = {};\n        for (let day of data) {\n            let entries = day.metrics[metric];\n\n            if ((this.recentMetrics[metric + 'Today'] && this.recentMetrics[metric + 'Last']) ||\n                (readings[metric + 'Today'] && readings[metric + 'Last'])) {\n                return readings;\n            }\n            if (entries && entries.data) {\n                entries = entries.data.filter((entry) => !entry.deleted && entry.status !== 'removed');\n                entries = entries.sort((entry1, entry2) => entry2.ts - entry1.ts);\n                if (!entries.length) continue;\n                if (!this.recentMetrics[metric + 'Today'] && !readings[metric + 'Today'] && moment().startOf('day') <= entries[0].ts) {\n                    readings[metric + 'Today'] = {};\n                    Object.assign(readings[metric + 'Today'], entries[0]);\n                    if (entries.length > 1) {\n                        readings[metric + 'Last'] = {};\n                        Object.assign(readings[metric + 'Last'], entries[1]);\n                    }\n                } else if (!this.recentMetrics[metric + 'Last'] && !readings[metric + 'Last']) {\n                    readings[metric + 'Last'] = {};\n                    Object.assign(readings[metric + 'Last'], entries[0]);\n                    if (!this.recentMetrics[metric + 'Today']) {\n                        readings[metric + 'Today'] = readings[metric + 'Today'] || {};\n                    }\n                }\n            }\n        }\n        return readings;\n    }\n\n    private getLatestRiskLevels(): void {\n        if (this.data.risk.length && this.data.risk[0].details) {\n            const riskDetails = this.data.risk[0].details;\n            if (riskDetails) {\n                for (let riskDetail of riskDetails) {\n                    if (!riskDetail.metrics) continue;\n                    for (let metric of riskDetail.metrics) {\n                        let riskFlag = AllMetrics[metric].risklabels[riskDetail.type];\n                        this.recentMetrics[riskFlag] = true;\n                    }\n                }\n            }\n        }\n    }\n}\n","import {MetricEntry} from './metric-entry.model';\n\nexport class SurveyEntry extends MetricEntry {\n    public question: string;\n    public answer: string[];\n    public schedule: {type: string, schedule?: string};\n    public points: number;\n    public isGrouped: boolean = false;\n    constructor(entry) {\n        super(parseInt(entry.answered), entry.id);\n        this.question = entry.question;\n        this.schedule = entry.schedule;\n        this.answer = entry.answer;\n        this.points = parseInt(entry.points);\n    }\n}\n","import {SurveyEntry} from './models';\n\nexport class SurveyGroupModel {\n    public answerCount: number;\n    public averageScore: string;\n    public scoreTotal: number;\n    public scoreType: string;\n    public scoreMessage: string;\n    public questions: SurveyEntry[];\n    public name: string;\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {\n    NGXLoggerMonitor,\n    NgxLoggerLevel,\n    NGXLogInterface\n} from 'ngx-logger';\nimport {GlobalSettingsService} from '@hrs/providers';\nimport {GatewayService} from '@hrs/gateway';\nimport {environment} from '@app/env';\n\n/**\n * Hook into ngx-logger services:\n * allows custom treatment for log messaging on top of the base service's console logging support\n */\n\n @Injectable({\n    providedIn: 'root',\n})\n\nexport class HRSLoggerMonitor implements NGXLoggerMonitor {\n    private static LOG_URL_KEY: string = 'loggingURL';\n    private static LOG_LEVEL_KEY: string = 'loggingLevel';\n\n    private loggingURL: string = '';    // server URL\n    private loggingLevel: string = '';  // restriction level for server logging\n    private ngxLoggingLevel: NgxLoggerLevel;    // restriction level converted to match NGXLoggerLevels\n    private applicationName: string = '';\n\n    private stringToLevel: {[key: string]: NgxLoggerLevel} = {\n        'trace':   NgxLoggerLevel.TRACE,    // 0\n        'debug':   NgxLoggerLevel.DEBUG,    // 1\n        'info':    NgxLoggerLevel.INFO,     // 2\n        'log':     NgxLoggerLevel.LOG,      // 3\n        'warn':    NgxLoggerLevel.WARN,     // 4\n        'error':   NgxLoggerLevel.ERROR,    // 5\n        'fatal':   NgxLoggerLevel.FATAL,    // 6\n        'off':     NgxLoggerLevel.OFF       // 7\n    }\n\n    private levelToString: {[key: string]: string} = {\n        [NgxLoggerLevel.TRACE]:  'trace',     // 0\n        [NgxLoggerLevel.DEBUG]:  'debug',     // 1\n        [NgxLoggerLevel.INFO]:   'info',      // 2\n        [NgxLoggerLevel.LOG]:    'log',       // 3\n        [NgxLoggerLevel.WARN]:   'warn',      // 4\n        [NgxLoggerLevel.ERROR]:  'error',     // 5\n        [NgxLoggerLevel.FATAL]:  'fatal',     // 6\n        [NgxLoggerLevel.OFF]:    'off'        // 7\n    }\n\n    constructor(\n        private globalSettingsService: GlobalSettingsService,\n        private gatewayService: GatewayService,\n        private http: HttpClient\n    ) {\n        this.loggingURL = localStorage.getItem(HRSLoggerMonitor.LOG_URL_KEY);\n        this.loggingLevel = localStorage.getItem(HRSLoggerMonitor.LOG_LEVEL_KEY);\n        this.ngxLoggingLevel = this.stringToLevel[this.loggingLevel];\n    }\n\n    public init(app: string): void {\n        this.applicationName = app;\n\n        this.globalSettingsService.globalSettingsLoading.then(() => {\n            let globalAttributes = this.globalSettingsService.getGlobalAttributes();\n            this.loggingURL = globalAttributes['LOG_URL'];\n            this.loggingLevel = globalAttributes['LOG_LEVEL'];\n            this.ngxLoggingLevel = this.stringToLevel[this.loggingLevel];\n            this.updateStorage();\n        });\n    };\n\n    private updateStorage(): void {\n        if (this.loggingURL) {\n            localStorage.setItem(HRSLoggerMonitor.LOG_URL_KEY, this.loggingURL);\n        } else {\n            localStorage.removeItem(HRSLoggerMonitor.LOG_URL_KEY);\n        }\n        if (this.loggingLevel) {\n            localStorage.setItem(HRSLoggerMonitor.LOG_LEVEL_KEY, this.loggingLevel);\n        } else {\n            localStorage.removeItem(HRSLoggerMonitor.LOG_LEVEL_KEY);\n        }\n    };\n\n    onLog(log: NGXLogInterface): void {\n        if (!this.loggingURL) return;\n        if (log.level < this.ngxLoggingLevel) return;\n\n        let logInfo: {[key: string]: any} = {\n            message: log.message,\n            meta: {\n                environment: environment.current_environment,\n                app: this.applicationName,\n                userAgent: navigator.userAgent,\n                hrsUserAgent: this.gatewayService.hrsUserAgentHeader,\n                timestamp: log.timestamp,\n                fileName: log.fileName,\n                lineNumber: log.lineNumber,\n                logLevel: this.levelToString[log.level]\n            }\n        }\n\n        // add any additional info to the message\n        log.additional.forEach((entry) => {\n            if (entry) {\n                if (typeof entry === 'string') {\n                    logInfo.message += ` ${entry}`\n                } else {\n                    logInfo.message += ` ${JSON.stringify(entry)}`;\n                }\n            }\n        });\n\n        let headers = new HttpHeaders().append('Content-Type', 'application/json');\n        let options = {headers}\n\n        this.http.post(this.loggingURL, JSON.stringify(logInfo), options).subscribe(\n            () => {},\n            (err) => console.error(err)\n        );\n    }\n}\n","import {HttpEvent, HttpEventType, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {TokenService} from '../token/token.service';\nimport {Subject, Observable, of} from 'rxjs';\nimport {catchError, map, switchMap} from 'rxjs/operators';\nimport {GatewayResponse} from '@hrs/gateway';\nimport {environment} from '../../environments/environment';\nimport {BroadcastService} from '../broadcastService';\nimport {NGXLogger} from 'ngx-logger';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ApiInterceptor implements HttpInterceptor {\n    private _refreshing: boolean = false;\n    private _refreshTokenSubject: Subject<any> = new Subject<any>();\n    private authErrorStartTime: number;\n\n    constructor(\n        public broadcastService: BroadcastService,\n        private logger: NGXLogger,\n        private tokenService: TokenService\n    ) {\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const isGatewayRequest = request.url.indexOf(environment.API_GATEWAY_URL) > -1;\n        const isTokenRequest = isGatewayRequest && request.url.indexOf('/tokens') > -1;\n\n        const verboseLogging = isTokenRequest;\n        const shouldIntercept = isGatewayRequest && request.headers.get('Authorization') && !isTokenRequest;\n\n        // Create a local copy of sessionId so that we can check it upon response/error and avoid broadcasting to logout if the app has already logged out or in while this request was pending.\n        const sessionId = this.tokenService.sessionId;\n\n        if (verboseLogging) {\n            this.log('Intercepted request', {request: request});\n        }\n\n        if (shouldIntercept) {\n            // Giving a 45 second window for interceptor expiration\n            let expiration = this.tokenService.getExp();\n            let now = Math.floor(Date.now() / 1000);\n            if ((expiration - 45) < now) {\n                if (this.tokenService.refresh) {\n                    this.log('Token has expired', {request: request, expiration: expiration, now: now});\n                    return this.handleOldToken(request, next, verboseLogging, sessionId);\n                } else {\n                    this.log('Token has expired but there is no refresh code', {request: request, expiration: expiration, now: now}, true);\n                }\n            }\n        }\n\n        return next.handle(request)\n            .pipe(\n                catchError(\n                    (error: HttpResponse<any>, caught: Observable<HttpEvent<any>>) => {\n                        if (verboseLogging) {\n                            this.log('Intercepted error', {request: request, error: error}, true);\n                        }\n\n                        if (error.status === 406 || error.status === 402 || error.status === 403) {\n                            this.log('Error code: ' + error.status, {request: request, error: error}, true);\n                            if (shouldIntercept && !this.tokenService.isRetryingToken && this.tokenService.sessionId === sessionId) {\n                                this.handleMiscAuthError(error);\n                            }\n                        }\n\n                        if (error.status === 401 && shouldIntercept && !this.tokenService.isRetryingToken) {\n                            this.log('Got unauthorized error', {request: request, error: error}, true);\n                            if (this.tokenService.sessionId === sessionId) {\n                                this.handleAuthError(error);\n                            }\n                            return of(error);\n                        }\n                        throw error;\n                    }\n                ),\n                map((response: HttpResponse<any>) => {\n                    if (response.type === HttpEventType.Response) {\n                        if (shouldIntercept) {\n                            this.authErrorStartTime = null;\n                        }\n                        if (verboseLogging) {\n                            this.log('Intercepted response', {request: request, response: response});\n                        }\n                    }\n                    return response;\n                })\n            );\n    }\n\n    private handleOldToken(request: HttpRequest<any>, next: HttpHandler, verboseLogging: boolean, sessionId: number): any {\n        const doRequest = (req: HttpRequest<any>): Observable<HttpEvent<any>> => {\n            this.log('Resumed request after token refresh', {request: request});\n\n            return next.handle(req)\n                .pipe(\n                    catchError(\n                        (error: any, caught: Observable<HttpEvent<any>>) => {\n                            if (verboseLogging) {\n                                this.log('Intercepted error from queued request', {request: request, error: error}, true);\n                            }\n\n                            if (error.status === 406 || error.status === 402 || error.status === 403) {\n                                this.log('Error code from queued request: ' + error.status, {request: request, error: error}, true);\n                                if (!this.tokenService.isRetryingToken && this.tokenService.sessionId === sessionId) {\n                                    this.handleMiscAuthError(error);\n                                }\n                            }\n\n                            if (error.status === 401 && !this.tokenService.isRetryingToken) {\n                                this.log(`Got unauthorized error from queued request`, {request: request, error: error}, true);\n                                if (this.tokenService.sessionId === sessionId) {\n                                    this.handleAuthError(error);\n                                }\n                                return of(error);\n                            }\n                            throw error;\n                        }\n                    ),\n                    map((response: HttpResponse<any>) => {\n                        if (response.type === HttpEventType.Response) {\n                            this.authErrorStartTime = null;\n                            if (verboseLogging) {\n                                this.log('Intercepted response from queued request', {request: request, response: response});\n                            }\n                        }\n                        return response;\n                    })\n                );\n        };\n\n        if (!this._refreshing) {\n            this._refreshing = true;\n            this.log('Refreshing token', {request: request});\n\n            return this.tokenService.refreshToken().pipe(\n                catchError((error: any, caught: Observable<HttpEvent<any>>) => {\n                    this.log('Token refresh failed', {request: request, error: error}, true);\n                    // If the refresh failed, just return the token we already had. We'll probably end up unauthorized with our API, but at least the frontend logic doesn't have to account for a missing token or anything.\n                    return of({\n                        data: {\n                            attributes: {\n                                token: this.tokenService.token,\n                                refresh: this.tokenService.refresh\n                            }\n                        }\n                    });\n                }),\n                switchMap((tokens: any) => {\n                    this.log('Token refresh completed', {request: request});\n                    this._refreshing = false;\n\n                    // Make the original request now that we refreshed our token\n                    let result = doRequest(this.addNewTokenData(request, tokens));\n\n                    // Also make any other requests that were waiting for us to refresh our token\n                    this._refreshTokenSubject.next(tokens);\n\n                    return result;\n                }));\n        } else {\n            // Another call happened around the same time as this one and already started refreshing our token, so we just have to wait for that one to get the new token.\n            this.log('Pausing request while token refresh in progress', {request: request});\n            return this._refreshTokenSubject.pipe(\n                switchMap((tokens: any) => {\n                    return doRequest(this.addNewTokenData(request, tokens));\n                }));\n        }\n    }\n\n    private addNewTokenData(request: HttpRequest<any>, tokens: any): HttpRequest<any> {\n        let jwt = tokens.data.attributes.token;\n\n        return request.clone({\n            setHeaders: {\n                Authorization: `Bearer ${jwt}`,\n            }\n        });\n    }\n\n    private handleMiscAuthError(rejection: GatewayResponse<any>) {\n        const currentTime = new Date().getTime();\n        if (!this.authErrorStartTime) {\n            this.authErrorStartTime = currentTime;\n        } else {\n            const atLeast5MinutesWithoutSuccess = currentTime - this.authErrorStartTime >= 5 * 60 * 1000;\n            if (atLeast5MinutesWithoutSuccess) {\n                this.broadcastService.miscAuthError.next(rejection);\n            }\n        }\n    }\n\n    private handleAuthError(rejection: GatewayResponse<any>) {\n        // Kick the user out to the login page since their session is no longer valid\n        // Passing in the rejection object to display information to the user about what happened\n        this.broadcastService.interceptorLogout.next(rejection);\n    }\n\n    private log(message: any, context: any, error = false) {\n        let contextCopy = JSON.parse(JSON.stringify(context));\n        if (contextCopy && contextCopy.request && contextCopy.request.body && contextCopy.request.body.data && contextCopy.request.body.data.password) {\n            contextCopy.request.body.data.password = 'REDACTED';\n        }\n        if (error) {\n            this.logger.error(message, contextCopy);\n            return;\n        }\n        this.logger.debug(message, contextCopy);\n    }\n}\n\n","import {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {tap} from 'rxjs/operators';\nimport {TokenService} from '../token/token.service';\nimport {Observable} from 'rxjs';\n\n/**\n * GatewayApi is a generic REST Api handler and Gateway for dev/prod has been added in.\n *\n * @todo we should phase this class out in the mobile apps and replace it with GatewayService and/or GatewayResourceService\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class GatewayApi {\n    url: string = environment.API_GATEWAY_URL;\n    language: string = 'en';\n    private _hrsUserAgentHeader: string;\n\n    set hrsUserAgentHeader(hrsUserAgentHeader: string) {\n        this._hrsUserAgentHeader = hrsUserAgentHeader;\n    }\n\n    constructor(public http: HttpClient, private tokenService: TokenService) {}\n\n    login(credentials) {\n        let reqOpts = {Observe: 'response'};\n\n        if (this._hrsUserAgentHeader) reqOpts['headers'] = {'hrs-user-agent': this._hrsUserAgentHeader};\n\n        const data = this.post('v1/tokens', credentials, reqOpts);\n        return data.pipe(tap((res: any) => {\n            this.tokenService.token = res.data.attributes.token;\n            this.tokenService.refresh = res.data.attributes.refresh;\n        }));\n    }\n\n    isLoggedIn() {\n        return (\n            this.tokenService.token !== null\n        );\n    }\n\n    public async logout(): Promise<any> {\n        await this.deleteBackendToken();\n        this.tokenService.removeTokens();\n        this.tokenService.token = null;\n    }\n\n    get<T>(endpoint: string, params?: any): Observable<any> {\n        const reqOpts: any = this.getReqOpts();\n        // Support easy query params for GET requests\n        if (params) {\n            reqOpts.params = new HttpParams();\n            for (let k in params) {\n                reqOpts.params = reqOpts.params.set(k, params[k]);\n            }\n        }\n\n        return this.http.get<T>(this.url + '/' + endpoint, reqOpts);\n    }\n\n    post<T>(endpoint: string, body: any, reqOpts?: any): Observable<any> {\n        // reqOpts will only be passed in when we are creating a gatewayToken\n        if (!reqOpts) {\n            reqOpts = this.getReqOpts();\n        }\n\n        return this.http.post<T>(this.url + '/' + endpoint, body, reqOpts);\n    }\n\n    put<T>(endpoint: string, body: any): Observable<any> {\n        const reqOpts = this.getReqOpts();\n        return this.http.put<T>(this.url + '/' + endpoint, body, reqOpts);\n    }\n\n    delete<T>(endpoint: string, params?: any): Observable<any> {\n        const reqOpts = this.getReqOpts();\n        return this.http.delete<T>(this.url + '/' + endpoint, reqOpts);\n    }\n\n    patch<T>(endpoint: string, body: any): Observable<any> {\n        const reqOpts = this.getReqOpts();\n        return this.http.patch<T>(this.url + '/' + endpoint, body, reqOpts);\n    }\n\n    getReqOpts() {\n        let headers = new HttpHeaders()\n            .append('Content-Type', 'application/json')\n            .append('Accept-Language', this.language);\n\n        if (this.tokenService.token) headers = headers.append('Authorization', 'Bearer ' + this.tokenService.token);\n\n        if (this._hrsUserAgentHeader) headers = headers.append('hrs-user-agent', this._hrsUserAgentHeader);\n\n        return {\n            Observe: 'response',\n            headers: headers\n        };\n    }\n\n    // move to gateway.service when change over happens\n    private async deleteBackendToken(): Promise<any> {\n        if (!this.tokenService.token) return;\n        const encodedToken = this.tokenService.token.split('.')[1];\n        const decodedToken = JSON.parse(atob(encodedToken));\n        await this.delete(`tokens/${decodedToken.jti}`).subscribe();\n    }\n}\n","import {GatewayResponse} from '@hrs/gateway';\nimport {BehaviorSubject} from 'rxjs';\n\n/**\n * This is to handle the circular dependency of the ApiInterceptor/ App Component / User\n */\n\nexport class BroadcastService {\n    public interceptorLogout: BehaviorSubject<GatewayResponse<any>>;\n    public miscAuthError: BehaviorSubject<GatewayResponse<any>>;\n\n    constructor() {\n        // initialize it by setting the rejection error object to null\n        this.interceptorLogout = new BehaviorSubject<GatewayResponse<any>>(null);\n        this.miscAuthError = new BehaviorSubject<GatewayResponse<any>>(null);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {GatewayApi} from '../api/gateway-api';\nimport {map} from 'rxjs/operators';\nimport {Observable, Subject, take} from 'rxjs';\n\ndeclare function escape(s: string): string;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CommunicationService {\n    public videoParticipantId;\n\n    public endVideoCall = new Subject();\n    public endVoiceCall = new Subject();\n    public callerLeft = new Subject();\n    public exitVideoCallEnterNew = new Subject();\n    public exitVoiceCallEnterNew = new Subject();\n    public exitChatOpenNew = new Subject();\n    public getChatNewMessage = new Subject();\n    public incomingVideoCall = new Subject();\n    public incomingVoiceCall = new Subject();\n    public newChatMessage = new Subject();\n    public endVideoCall$: Observable<any>;\n    public endVoiceCall$: Observable<any>;\n    public callerLeft$: Observable<any>;\n    public exitVideoCallEnterNew$: Observable<any>;\n    public exitVoiceCallEnterNew$: Observable<any>;\n    public exitChatOpenNew$: Observable<any>;\n    public getChatNewMessage$: Observable<any>;\n    public incomingVideoCall$: Observable<any>;\n    public incomingVoiceCall$: Observable<any>;\n    public newChatMessage$: Observable<any>;\n\n    constructor(\n        public gatewayApi: GatewayApi\n    ) {\n        this.exitVideoCallEnterNew$ = this.exitVideoCallEnterNew.asObservable();\n        this.exitVoiceCallEnterNew$ = this.exitVoiceCallEnterNew.asObservable();\n        this.exitChatOpenNew$ = this.exitChatOpenNew.asObservable();\n        this.getChatNewMessage$ = this.getChatNewMessage.asObservable();\n        this.newChatMessage$ = this.newChatMessage.asObservable();\n        this.incomingVideoCall$ = this.incomingVideoCall.asObservable();\n        this.incomingVoiceCall$ = this.incomingVoiceCall.asObservable();\n        this.endVideoCall$ = this.endVideoCall.asObservable();\n        this.endVoiceCall$ = this.endVoiceCall.asObservable();\n        this.callerLeft$ = this.callerLeft.asObservable();\n    }\n\n    /**\n     * Send a GET request to get the chat message history\n     */\n    getTextMessages(hrsid?: string, targetHrsid?: string, chatroomId?: number): Observable<any> {\n        let request;\n        if (chatroomId) {\n            // caregiver\n            request = this.gatewayApi.get(\n                'chat-messages?filter[chatroomId]=' + chatroomId\n            );\n        } else if (hrsid) {\n            // clinician app\n            request = this.gatewayApi.get('apiv2/chat/patient/' + hrsid, {});\n        } else {\n            // patient app\n            request = this.gatewayApi.get(\n                'apiv2/chat/clinician',\n                {}\n            ).pipe(\n                map((res: any) => {\n                    res.chatdata = res.chatdata.map((message) => {\n                        try {\n                            message.text = atob(message.text.replace(/-/g, '+').replace(/_/g, '/').replace(/,/g, '='));\n                        } catch (e) {\n                            // this.logger.error('Error decoding message', e);\n                        }\n\n                        return message;\n                    });\n                    return res;\n                })\n            );\n        }\n\n        return request.pipe(map((res: any) => {\n            const messages = [];\n            const mychats = chatroomId ? res.data : res.chatdata;\n\n            for (const key in mychats) {\n                if (mychats.hasOwnProperty(key)) {\n                    mychats[key].text = this.decodeMessage(mychats[key].text);\n                    messages.push(mychats[key]);\n                }\n            }\n            return messages;\n        }));\n    }\n\n    // decodes special characters\n    decodeMessage(message) {\n        try {\n            return decodeURIComponent(escape(message));\n        } catch (e) {\n            return '[Cannot display message]';\n        }\n    }\n\n    /**\n     * Send a POST request to send a chat message\n     */\n    sendTextMessage(text: string, hrsid?: string, targetHrsId?: string, chatroomId?: number): Observable<any> {\n        let url;\n        let message;\n        if (targetHrsId || chatroomId) {\n            // cgc\n            url = 'chat-messages/';\n            message = {\n                data: {\n                    chatroomId: chatroomId,\n                    targetHrsid: targetHrsId,\n                    message: text,\n                    hrsid: hrsid\n                }\n            };\n        } else if (hrsid) {\n            // cc\n            url = 'apiv2/chat/patient/' + hrsid;\n            message = {msg: text};\n        } else {\n            // pc\n            url = 'apiv2/chat/clinician';\n            message = {msg: btoa(text)};\n        }\n\n        return this.gatewayApi.post(url, message);\n    }\n\n    /**\n     * Send a GET request for list of chatrooms that match the participant(s)\n     */\n    getChatrooms(participants: string[]): Observable<any> {\n        let url = 'chatrooms';\n        participants.forEach((participant, i) => {\n            url += i === 0 ? '?' : '&';\n            url += 'filter[participants][]=' + participant;\n        });\n\n        return this.gatewayApi.get(url);\n    }\n\n    /**\n     * Send a post request to the gateway to start a video call\n     */\n    getVideoCallId(callerHrsID: string, calleeHrsID?: string) {\n        let participantData;\n        if (calleeHrsID) {\n            // clinician and caregiver app\n            participantData = {\n                data: {\n                    participants: [\n                        {\n                            hrsid: callerHrsID,\n                            role: 'initiator',\n                        },\n                        {\n                            hrsid: calleeHrsID,\n                            role: 'participant',\n                        },\n                    ],\n                },\n            };\n        } else {\n            // patient app\n            participantData = {\n                data: {\n                    participants: [\n                        {\n                            hrsid: callerHrsID,\n                            role: 'initiator',\n                        }\n                    ],\n                }\n            };\n        }\n\n        return this.gatewayApi.post(\n            'video-calls',\n            participantData\n        );\n    }\n\n    /**\n     * creates opentok video call token\n     */\n    getVideoCallToken(callId, calleeHrsId) {\n        const callData = {\n            data: {\n                callId: callId,\n                participant: {\n                    hrsid: calleeHrsId,\n                },\n            },\n        };\n        return this.gatewayApi.post(\n            'video-call-tokens',\n            callData\n        );\n    }\n\n    public getVideoCallStatus(callId): Observable {\n        return this.gatewayApi.get(`video-calls/${callId}`);\n    }\n\n    /**\n     * updates the backend with active call participants\n     * creates a log or 'call history'\n     */\n    updateParticipantStatus(status) {\n        if (this.videoParticipantId) {\n            const participantData = {\n                data: {\n                    status: status,\n                }\n            };\n            const request = this.gatewayApi.patch(\n                'video-participants/' + this.videoParticipantId,\n                participantData\n            );\n\n            request.subscribe((res)=>{\n                console.log('Video participant status successfully updated to: ' + status);\n            }, (err) => {\n                console.log('Video participant status failed to update', err);\n            });\n\n            if (status === 'missed' || status === 'declined' || status === 'left') {\n                this.videoParticipantId = null;\n            }\n        }\n    }\n\n    /**\n     * Send a GET request to start the voice call\n     */\n    initializeOutgoingVoiceCall(hrsid?: string) {\n        let url;\n        if (hrsid === 'techsupport') {\n            url = 'apiv2/voice/start?type=techsupport';\n        } else if (hrsid) {\n            // cc\n            url = 'apiv2/voice/patient/start/' + hrsid;\n        } else {\n            // pc\n            url = 'apiv2/voice/start?type=clinician';\n        }\n        return this.gatewayApi.get(url, {});\n    }\n\n    /**\n     * Accept incoming call, get call token\n     */\n\n    acceptIncomingVoiceCall(callId) {\n        return this.gatewayApi.post('apiv2/voice/patient/accept', {callid: callId});\n    }\n\n    // notifies the other participant that the user has left the call\n    public voiceCallLeft(callId): void {\n        this.gatewayApi.post('apiv2/voice/leave', {callid: callId})\n            .pipe(take(1))\n            .subscribe(() => {\n                console.log('Successfully sent call left status');\n            }, () => {\n                console.error('Failed to send call left status');\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\n// Event map is a dictionary with event name and list of callbacks\n/* eslint-disable no-invalid-this*/\n\ninterface IEventMap {\n    [name: string]: Array<(data?: any) => void>;\n}\n\n@Injectable()\nexport class EventManagerService {\n    private eventMap: IEventMap = {};\n\n    constructor() {}\n\n    /**\n     *\n     * @param name - event name that we are subscribing to\n     * @param func - callback function that executes if event signal was subscribed to\n     */\n    public subscribe = (name: string, func: (...args: any[]) => void): (() => void) => {\n        if (!this.eventMap.hasOwnProperty(name)) {\n            this.eventMap[name] = [];\n        }\n\n        let currentIndex = this.eventMap[name].length;\n        this.eventMap[name].push(func);\n\n        return () => {\n            delete this.eventMap[name][currentIndex];\n        };\n    };\n\n    /**\n     *\n     * @param name - event name that we are triggering/signaling\n     * @param data - optional data that we can send as a parameter\n     */\n    public publish = (name: string, data?: any): void => {\n        if (this.eventMap.hasOwnProperty(name)) {\n            for (let callback of this.eventMap[name]) {\n                if (callback) {\n                    setTimeout(() => {\n                        callback(data);\n                    });\n                }\n            }\n        }\n    };\n}\n","import {Injectable} from '@angular/core';\nimport {GatewayResourceService} from '@hrs/gateway';\n\n/**\n * Global settings provider.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class GlobalSettingsService {\n    private globalAttributes: {[key: string]: string} = {};\n    public globalSettingsLoading: Promise<void>;\n\n    private resolveSettingsLoading: () => void;\n\n    constructor(\n        private gateway: GatewayResourceService\n    ) {\n        this.globalSettingsLoading = new Promise((resolve) => {\n            this.resolveSettingsLoading = resolve;\n        });\n    }\n\n    /**\n     * Send a GET request to our global settings endpoint\n     */\n    public loadGlobalSettings(): void {\n        let endpoint = 'v1/global-frontend-settings';\n        this.gateway.get({endpoint: endpoint}).subscribe({\n            next: (res: any) => {\n                this.extractAttributes(res);\n                return this.globalAttributes;\n            },\n            complete: () => this.resolveSettingsLoading()\n        });\n    }\n\n    /**\n     * processes the raw data and extracts attributes into an object of key value pairs,\n     * filtering by latest updated value for any single attribute\n     */\n    private extractAttributes(data: any): void {\n        let latestAttribute: {[key: string]: Date} = {};\n\n        if (data && data.data) {\n            data.data.forEach((dataElem) => {\n                if (dataElem.attributes) {\n                    let name = dataElem.attributes.name;\n                    let value = dataElem.attributes.value;\n                    let lastUpdated = new Date(dataElem.attributes.lastUpdated);\n\n                    if (name)\n                        if (!this.globalAttributes[name] || (this.globalAttributes[name] && lastUpdated.valueOf() > latestAttribute[name].valueOf())) {\n                            this.globalAttributes[name] = value;\n                            latestAttribute[name] = lastUpdated;\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * returns all global settings as an object of key value pairs\n     *\n     * @returns {[key: string]: string}\n     */\n    public getGlobalAttributes(): {[key: string]: string} {\n        return this.globalAttributes;\n    }\n}\n","import { Injectable } from '@angular/core';\n\n/**\n * This service is used in order to inform components whether or not a particular modal is open.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class ModalService {\n    static modalStatus = {};\n\n    constructor() {}\n\n    setModalStatus(modal, status: boolean, patientHrsid?: string) {\n        if (patientHrsid) {\n            ModalService.modalStatus[modal] = {status: status, patientHrsid: patientHrsid};\n        } else {\n            ModalService.modalStatus[modal] = status;\n        }\n    }\n\n    getModalStatus(modal) {\n        return ModalService.modalStatus[modal];\n    }\n\n    isModalTypeOpen(modalType: string): boolean {\n        return this.getModalStatus(modalType);\n    }\n}\n","import {ApiInterceptor} from './api/api-interceptor';\nimport {BroadcastService} from './broadcastService';\nimport {CommunicationService} from './communication/communication.service';\nimport {EventManagerService} from './event-manager.service';\nimport {GatewayApi} from './api/gateway-api';\nimport {GlobalSettingsService} from './globalSettingsService/globalSettings.service';\nimport {HRSLoggerMonitor} from './HRSLoggerMonitor';\nimport {ModalService} from './modalService/modal.service';\nimport {SurveyDetailsService} from './survey-details/survey-details.service';\nimport {TokenService} from './token/token.service';\n\nexport {\n    ApiInterceptor,\n    BroadcastService,\n    CommunicationService,\n    EventManagerService,\n    GatewayApi,\n    GlobalSettingsService,\n    HRSLoggerMonitor,\n    ModalService,\n    SurveyDetailsService,\n    TokenService\n};\n","import { Injectable } from '@angular/core';\nimport { GatewayApi } from '../api/gateway-api';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SurveyEntry, SurveyGroupModel, DailySurveyDetailsModel } from '../../models/models';\nimport * as moment from 'moment';\nimport {SurveyGroup} from './survey-group.interface';\nimport {SurveyQuestion} from './survey-question.interface';\nimport {SurveyScoreType} from './survey-score-type.enum';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class SurveyDetailsService {\n    private surveyMap: {[key: string]: SurveyEntry};\n    private dailySurveyDetails: DailySurveyDetailsModel;\n\n    constructor(private gatewayApi: GatewayApi) {}\n    // IONIC UPGRADE had to remove type here temporarily Observable<DailySurveyDetailsModel>\n\n    public getSurveyDetails(hrsid: string, date: string): Observable<DailySurveyDetailsModel> {\n        return this.gatewayApi.get(\n            `apiv2/patients/${hrsid}/surveydetails/${date}`,\n            {}\n        ).pipe(map((surveyDetails: any) => {\n            this.dailySurveyDetails = new DailySurveyDetailsModel();\n            this.dailySurveyDetails.date = moment(date);\n            if (surveyDetails && surveyDetails.questions) {\n                this.buildSurveyMap(surveyDetails.questions);\n                // we know that only answered questions exist in the question map, one entry for each answered question\n                this.dailySurveyDetails.answeredCount = Object.keys(this.surveyMap).length;\n                this.dailySurveyDetails.grouped = this.parseGroupedSurveys(surveyDetails.groups);\n                this.dailySurveyDetails.ungrouped = this.parseUngroupedSurveys();\n            }\n            return this.dailySurveyDetails;\n        }));\n    }\n\n    // creates an object that stores the most recent answer for each question id\n    private buildSurveyMap(questions: SurveyQuestion[]): void {\n        this.surveyMap = {};\n        questions.forEach((question: SurveyQuestion) => {\n            if (!question.answer) return question;\n            const answeredQuestion = new SurveyEntry(question);\n            // check that we are including the most recent answered survey in the survey map\n            const id = answeredQuestion.id;\n            if (this.surveyMap[id]) {\n                if (answeredQuestion.date.isAfter(this.surveyMap[id].date)) {\n                    this.surveyMap[id] = answeredQuestion;\n                }\n            } else {\n                this.surveyMap[id] = answeredQuestion;\n            }\n        });\n    }\n\n    private parseGroupedSurveys(groups: SurveyGroup[]): SurveyGroupModel[] {\n        let groupModels: SurveyGroupModel[] = [];\n        if (groups) {\n            groups.forEach((group) => {\n                let groupModel = new SurveyGroupModel();\n                groupModel.name = group.name;\n                groupModel.scoreType = group.scoretype;\n                groupModel.questions = [];\n\n                group.questionids.forEach((id: number) => {\n                    if (this.surveyMap[id]) {\n                        groupModel = this.calculateGroupScore(groupModel, id);\n                        groupModel.questions.push(this.surveyMap[id]);\n                        // mark question as grouped so we don't include it in ungrouped questions\n                        this.surveyMap[id].isGrouped = true;\n                    }\n                });\n\n                groupModel.scoreMessage = this.getGroupScoreText(group, groupModel);\n\n                if (groupModel.questions.length) {\n                    groupModels.push(groupModel);\n                }\n            });\n        }\n\n        return groupModels;\n    }\n\n    private calculateGroupScore(groupModel: SurveyGroupModel, id: number): SurveyGroupModel {\n        if (!groupModel.scoreTotal) {\n            groupModel.scoreTotal = 0;\n            groupModel.answerCount = 0;\n        }\n\n        if (this.surveyMap[id].answer.length > 0) {\n            groupModel.answerCount += 1;\n        }\n\n        groupModel.scoreTotal += this.surveyMap[id].points;\n        // if the question is marked as grouped it has already passed through this code\n        if (!this.surveyMap[id].isGrouped) {\n            // wrapping this string in an array to maintain type string[];\n            this.surveyMap[id].answer = [`${ this.surveyMap[id].answer } (${ this.surveyMap[id].points })`];\n        }\n\n        if (groupModel.scoreType === SurveyScoreType.Average) {\n            groupModel.averageScore = (groupModel.scoreTotal / groupModel.answerCount).toPrecision(2);\n        }\n\n        return groupModel;\n    }\n\n    private parseUngroupedSurveys(): SurveyEntry[] {\n        let ungroupedQuestions = [];\n        Object.keys(this.surveyMap).forEach((id) => {\n            if (!this.surveyMap[id].isGrouped) {\n                ungroupedQuestions.push(this.surveyMap[id]);\n            }\n        });\n\n        return ungroupedQuestions;\n    }\n\n    private getGroupScoreText(group: SurveyGroup, groupModel: SurveyGroupModel): string {\n        let scoreMessage: string;\n        if (groupModel.questions.length) {\n            if (groupModel.scoreTotal) {\n                let scoreDisplay = group.scoredisplay;\n                let score = groupModel.averageScore || groupModel.scoreTotal;\n                if (scoreDisplay.length > 0) {\n                    for (let i = 0; i < scoreDisplay.length; i++) {\n                        if (score >= parseInt(scoreDisplay[i].min) && score <= parseInt(scoreDisplay[i].max)) {\n                            scoreMessage = scoreDisplay[i].text ? `(${scoreDisplay[i].text})` : undefined;\n                        }\n                    }\n                }\n            }\n        }\n        return scoreMessage;\n    }\n}\n\n","export enum SurveyScoreType {\n    Average = 'average',\n    Total = 'total'\n}\n","import {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {environment} from '../../environments/environment';\nimport {Subject, of, Observable} from 'rxjs';\nimport {tap, catchError, retryWhen, take, delay} from 'rxjs/operators';\nimport * as jwtDecode from 'jwt-decode';\nimport {TokenData} from '../../interfaces/token-data-response.interface';\nimport {TokenResponse} from '@hrs/gateway';\nimport {retryBackoff} from 'backoff-rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenService {\n  url: string = environment.API_GATEWAY_URL;\n  token: string = null;\n  refresh: string = null;\n  authTokenData: TokenData;\n  sourceApp: string;\n  refreshTokenSubject: Subject<any> = new Subject<any>();\n  isRetryingToken: boolean = false;\n  sessionId: number = 0;\n\n  constructor(private http: HttpClient) {\n  }\n\n  public refreshToken(): Observable<any> {\n      this.isRetryingToken = true;\n      const credentials = {\n          data: {\n              type: 'refresh',\n              code: this.refresh,\n              source: this.sourceApp\n          }\n      };\n      return this.http\n          .post(`${this.url}/v1/tokens`, credentials)\n          .pipe(\n              tap((tokens: {data: TokenResponse}) => {\n                  this.storeTokens(tokens.data);\n                  this.isRetryingToken = false;\n                  this.refreshTokenSubject.next(tokens.data);\n              }),\n              // Upon failing this retries 3 times with a a backoff delay in between 5 seconds, 10 seconds, 20 seconds roughly\n              // Not exceeding 45 seconds in between b/c we have a 45 second window on calling the refresh token on api interceptor\n              retryBackoff({\n                  initialInterval: 5000,\n                  maxRetries: 3,\n                  maxInterval: 20000,\n              }),\n              // If the final retry fails, this catches the error and returns it\n              catchError((error) => {\n                  this.isRetryingToken = false;\n                  return of(error);\n              }));\n  }\n\n  public storeTokens(tokenData: TokenResponse): void {\n      let tokens = tokenData.attributes;\n      this.token = tokens.token;\n      this.refresh = tokens.refresh;\n      this.decodeTokenData(tokens.token);\n  }\n\n  public removeTokens(): void {\n      this.token = null;\n      this.refresh = null;\n      this.authTokenData = null;\n  }\n\n  private decodeTokenData(token) {\n      let tokenData = jwtDecode(token);\n      this.authTokenData = tokenData;\n      return tokenData;\n  }\n\n  public getExp(): number {\n      return this.authTokenData ? this.authTokenData.exp : null;\n  }\n}\n","import {environment} from '@app/env';\nimport {environment as environmentTS} from '../environments/environment';\nimport {environment as prod} from '../environments/environment.prod';\nimport {environment as kramer} from '../environments/environment.kramer';\nimport {environment as newman} from '../environments/environment.newman';\nimport {environment as puddy} from '../environments/environment.puddy';\nimport {environment as hrsdomain} from '../environments/environment.hrsdomain';\n\nexport class BuildUtility {\n    static MIN_TABLET_SCREEN_SIZE = 600;\n    // static isModeSet: boolean = false;\n    // static isDesignModeSet: boolean = false;\n    static domains: {\n        domain: 'prod' | 'elaine' | 'george' | 'jerry' | 'hrsdomain',\n        HRS_DOMAIN: string,\n        API_GATEWAY_URL: string\n    }[] = [\n        {\n            domain: 'prod',\n            HRS_DOMAIN: 'healthrecoverysolutions.com',\n            API_GATEWAY_URL: 'https://gateway.healthrecoverysolutions.com'\n        },\n        {\n            domain: 'elaine',\n            HRS_DOMAIN: 'elaine.hrsqa.com',\n            API_GATEWAY_URL: 'https://gateway.elaine.hrsqa.com'\n        },\n        {\n            domain: 'george',\n            HRS_DOMAIN: 'george.hrsqa.com',\n            API_GATEWAY_URL: 'https://gateway.george.hrsqa.com'\n        },\n        {\n            domain: 'jerry',\n            HRS_DOMAIN: 'jerry.hrsqa.com',\n            API_GATEWAY_URL: 'https://gateway.jerry.hrsqa.com'\n        }\n    ];\n\n    /**\n     * Check for HRSTAB flag.\n     * @return boolean\n     */\n    static isHRSTab(): boolean {\n        return environment.HRSTAB === 'true';\n    }\n\n    /**\n     * Get Current Build Environment.\n     * @return string\n     */\n    static getEnvironment(): string {\n        return environment.current_environment;\n    }\n\n    /**\n     * Get Name of Current Domain that the Device is Pointed to.\n     * @return string\n     */\n    static getDomainName(): 'prod' | 'elaine' | 'george' | 'jerry' | 'hrsdomain' {\n        const domainInfo = BuildUtility.domains.filter((domain) => domain.API_GATEWAY_URL === environment.API_GATEWAY_URL)[0];\n        return domainInfo ? domainInfo.domain : 'hrsdomain';\n    }\n\n    /**\n     * Get Current API_GATEWAY_URL.\n     * @return string\n     */\n    static getGatewayURL(): string {\n        return environment.API_GATEWAY_URL;\n    }\n\n    /**\n     * Get Current HRS_DOMAIN.\n     * @return string\n     */\n    static getHRSDomain(): string {\n        return environment.HRS_DOMAIN;\n    }\n\n    /**\n     * Set Current Build Gateway URL to User's Selection in Admin Domain Settings.\n     * @return Promise<string>\n     */\n    static setDomain(domain: 'prod' | 'elaine' | 'george' | 'jerry' | string): Promise<string> {\n        const isHRSDomain = domain.includes('.com');\n        const newDomain = isHRSDomain ? {\n            HRS_DOMAIN: domain,\n            API_GATEWAY_URL: `https://gateway.${domain}`\n        } : BuildUtility.domains.filter((option) => option.domain === domain)[0];\n\n        if (!newDomain) {\n            return Promise.reject(new Error('Chosen domain is not accepted.'));\n        }\n\n        for (const property in newDomain) {\n            if (newDomain[property]) {\n                environment[property] = newDomain[property];\n                environmentTS[property] = newDomain[property];\n            }\n        }\n\n        return Promise.resolve(environment.API_GATEWAY_URL);\n    }\n}\n","import {ObjectUtility} from './index';\n\nexport class CollectionUtility {\n    /**\n     * For converting values to arrays.\n     * Can handle JSON, Sets, Objects, Arrays, strings, integers, undefined, null\n     * @param collection\n     * @private\n     */\n    static convertToArray(collection: any): any[] {\n        try {\n            collection = JSON.parse(collection);\n        } catch (e) {}\n\n        if (!collection) collection = [];\n\n        if (collection instanceof Set) collection = Array.from(collection);\n\n        if (typeof collection === 'string') collection = collection.split(', ');\n\n        if (Number.isInteger(collection) || ObjectUtility.isObject(collection)) collection = [collection];\n\n        return collection;\n    }\n}\n","/**\n * mgdl: milligrams per deciliter\n * gl: grams per liter\n */\n\nexport class ConvertGlucose {\n    /**\n     * @param number mgdl\n     * @return number\n     *\n     * Formula:  1 g/L = 100 mg/dL\n     *\n     */\n    static mgdlToGl(mgdl: number): number {\n        return mgdl / 100;\n    }\n\n    /**\n     * @param number gl\n     * @return number\n     *\n     * Formula:  1 mg/dL = 0.01 g/L\n     */\n    static glToMgdl(gl: number): number {\n        return gl * 100;\n    }\n}\n","/**\n * hz: hertz\n * cpm: cycles per minute\n */\n\nexport class ConvertHeartRate {\n    /**\n     * @param number cpm\n     * @return number\n     *\n     * Formula: 1 cpm = 1/60 hz\n     */\n    static cpmToHz(cpm: number): number {\n        return cpm / 60;\n    }\n\n    /**\n     * @param number hz\n     * @return number\n     *\n     * Formula: 1hz = 60 cpm\n     */\n    static hzToCpm(hz: number): number {\n        return hz * 60;\n    }\n}\n","export class ConvertRatio {\n    /**\n     * @param number $leftValue\n     * @param number $rightValue\n     * @return number\n     *\n     *  Formula:  % = n / d * 100\n     */\n    static ratioToPercentage(leftValue: number , rightValue: number): number {\n        return (leftValue / rightValue) * 100;\n    }\n\n    /**\n     * @param string ratio\n     * @return number\n     */\n    static ratioStringToPercentage(ratio: string): number {\n        const ratioArray = ratio.split(':');\n        if (ratioArray.length !== 2) {\n            throw new Error('Invalid ratio: ' + ratio);\n        }\n\n        const ratioLeft = Number(ratioArray[0]);\n        const ratioRight = Number(ratioArray[1]);\n        if (Number.isNaN(ratioLeft) || Number.isNaN(ratioRight)) {\n            throw new Error('One side of this ratio is not a number: ' + ratio);\n        }\n\n        return this.ratioToPercentage(ratioLeft, ratioRight);\n    }\n\n    /**\n     * @param number percentage\n     * @return number\n     */\n    static percentageToRatio(percentage: number): number {\n        const base = 100;\n        const ratio = percentage / base;\n        return ratio;\n    }\n}\n","export class ConvertString {\n    /**\n     * curly - 'smart' - qoutes and apostrophes cause errors when inserting into database\n     * database needs those chars to be straight - 'dumb' - chars\n     * @param originalString\n     * return string with 'smart' chars replaced with 'dumb' chars\n     */\n    static replaceCurlyChars(originalString: string): string {\n        const cleanedString = originalString.replace(/((\\u2019)|(\\u2018)|(\\u201c)|(\\u201d))/g, '\\u0027');\n        return cleanedString;\n    }\n\n    /**\n     * non utf8 chars cause errors when inserting into database - this may strip out accented chars from different languages\n     * @param originalString\n     * return string free of non utf8 chars\n     */\n    static removeNonUtf8Chars(originalString: string): string {\n        const cleanedString = originalString.replace(/[^\\x20-\\x7E]+/g, '');\n        return cleanedString;\n    }\n}\n","export class ConvertTemperature {\n    /**\n     * @param number celsius\n     * @return number\n     *\n     * Formula: F = C * (9.0/5.0) + 32\n     */\n    static celsiusToFarenheit(celsius: number): number {\n        return celsius * (9.0 / 5.0) + 32;\n    }\n\n    /**\n     * @param number fahrenheit\n     * @return number\n     *\n     * Formula: K = (F + 459.67) x 5/9\n     */\n    static fahrenheitToKelvin(fahrenheit: number): number {\n        return (fahrenheit + 459.67) * (5 / 9);\n    }\n\n    /**\n     * @param number kelvin\n     * @return number\n     *\n     * Formula: C = K - 273.15\n     */\n    static kelvinToCelsius(kelvin: number): number {\n        return kelvin - 273.15;\n    }\n\n    /**\n     * @param number kelvin\n     * @return number\n     *\n     * Formula: F = K * 9/5 - 459.67\n     */\n    static kelvinToFahrenheit(kelvin: number): number {\n        return (kelvin * (9 / 5)) - 459.67;\n    }\n\n    /**\n     * @param number celsius\n     * @return number\n     *\n     * Formula: K = C + 273.15\n     */\n    static celsiusToKelvin(celsius: number): number {\n        return celsius + 273.15;\n    }\n}\n","import * as moment from 'moment';\n\nexport class ConvertTime {\n    /**\n     * @param number minutes\n     * @return number\n     *\n     * Formula:  s = m * 60\n     */\n    static minutesToSeconds(minutes: number): number {\n        return minutes * 60;\n    }\n\n    /**\n     * @param number hours\n     * @return number\n     *\n     * Formula:  s = h * 3600\n     */\n    static hoursToSeconds(hours: number): number {\n        return hours * 3600;\n    }\n\n    /**\n     * @param number seconds\n     * @return number\n     *\n     * Formula:  m = s / 60\n     */\n    static secondsToMinutes(seconds: number): number {\n        return seconds / 60;\n    }\n\n    /**\n     * @param number seconds\n     * @return number\n     *\n     * Formula:  h = s / 3600\n     */\n    static secondsToHours(seconds: number): number {\n        return seconds / 3600;\n    }\n\n    static isoToTimestamp(time: string): number {\n        return new Date(time).getTime();\n    }\n\n    /**\n     * Convert Provided Timestamp to Local Timezone.\n     * @param string timestamp: the original timestamp.\n     * @param string format: the original format of the timestamp.\n     * @return string: a timestamp in the original format in the user's device timezone.\n     */\n    static convertToLocalTZ(timestamp: string, format: string): string {\n        const userTZ = moment.tz.guess();\n        const estTime = moment.tz(timestamp, format, 'America/New_York');\n        const convertedTime = estTime.tz(userTZ).format(format);\n        return convertedTime;\n    }\n}\n","export class ConvertWeight {\n    /**\n     * @param number pounds\n     * @return number\n     *\n     * Formula:  g = lbs * 453.59237\n     */\n    static poundsToGrams(pounds: number): number {\n        return pounds * 453.59237;\n    }\n\n    /**\n     * @param number kilograms\n     * @return number\n     *\n     * Formula:  g = kg * 1000\n     */\n    static kilogramsToGrams(kilograms: number): number {\n        return kilograms * 1000;\n    }\n\n    /**\n     * @param number grams\n     * @return number\n     *\n     * Formula:  lbs = g / 453.59237\n     */\n    static gramsToPounds(grams: number): number {\n        return grams / 453.59237;\n    }\n\n    /**\n     * @param number grams\n     * @return number\n     *\n     * Formula:  kg = g / 1000\n     */\n    static gramsToKilograms(grams: number): number {\n        return grams / 1000;\n    }\n}\n","import {environment} from '@app/env';\n\nexport class LocalUpdateInterval {\n    /**\n     * Get HRS TAB Local Update Interval Length\n     * @return number\n     *\n     */\n    static get(): number {\n        return environment.UPDATEINTERVAL;\n    }\n}\n","export class ObjectUtility {\n    /*\n        objectsAreTheSame allows for deep object comparisons, with optional strictness level, and key ignoring\n        default strictness allows for loose equality comparisons allowing for 1 to equal '1'\n        if ignoreKeys has values, those keys will be filtered out, allowing for core comparisons of values the dev knows to be important\n     */\n    static objectsAreTheSame(objA: {[key: string]: any}, objB: {[key: string]: any}, isStrict = false, ignoreKeys: string[] = []): boolean {\n        let areTheSame = true;\n\n        const strictLevel = isStrict ? 'isStrict' : 'isNotStrict';\n\n        const valuesDoNotMatch = {\n            'isStrict': (a, b) => a !== b,\n            'isNotStrict': (a, b) => a != b\n        };\n\n        const isObject = (a, b) => typeof a === 'object' && !Array.isArray(a) && (!!a && !!b);\n\n        const compareArrays = (a, b) => {\n            if (a.length === b.length) {\n                a.sort();\n                b.sort();\n\n                a.forEach((ele, idx) => compareValues(ele, b[idx]));\n            } else {\n                areTheSame = false;\n            }\n        };\n\n        const compareValues = (a, b) => {\n            if (Array.isArray(a)) {\n                compareArrays(a, b);\n            } else if (!isObject(a, b) && valuesDoNotMatch[strictLevel](a, b)) {\n                areTheSame = false;\n            } else if (isObject(a, b) && !this.objectsAreTheSame(a, b, isStrict, ignoreKeys)) {\n                areTheSame = false;\n            }\n        };\n\n        const keysA = Object.keys(objA).filter((key) => !ignoreKeys.includes(key));\n        const keysB = Object.keys(objB).filter((key) => !ignoreKeys.includes(key));\n\n        if (keysA.length !== keysB.length) return false;\n\n        for (let key of keysA) compareValues(objA[key], objB[key]);\n\n        return areTheSame;\n    }\n\n    /**\n     * Method for checking if something is an object since JavaScript does not have a native method\n     * @param param\n     */\n    static isObject(param: any): boolean {\n        return param !== null && !Array.isArray(param) && !(param instanceof Set) && typeof param === 'object';\n    }\n}\n\n","import {BuildUtility} from './BuildUtility';\nimport {ConvertGlucose} from './ConvertGlucose';\nimport {ConvertHeartRate} from './ConvertHeartRate';\nimport {ConvertRatio} from './ConvertRatio';\nimport {ConvertString} from './ConvertString';\nimport {ConvertTemperature} from './ConvertTemperature';\nimport {ConvertTime} from './ConvertTime';\nimport {ConvertWeight} from './ConvertWeight';\nimport {CollectionUtility} from './CollectionUtility';\nimport {ObjectUtility} from './ObjectUtility';\nimport {LocalUpdateInterval} from './LocalUpdateInterval';\n\nexport {\n    BuildUtility,\n    ConvertGlucose,\n    ConvertHeartRate,\n    ConvertRatio,\n    ConvertString,\n    ConvertTemperature,\n    ConvertTime,\n    ConvertWeight,\n    CollectionUtility,\n    ObjectUtility,\n    LocalUpdateInterval\n};\n","var map = {\n\t\"./hrs-alert.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-alert.entry.js\",\n\t\t\"common\",\n\t\t43\n\t],\n\t\"./hrs-backdrop_3.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-backdrop_3.entry.js\",\n\t\t44\n\t],\n\t\"./hrs-battery_2.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-battery_2.entry.js\",\n\t\t45\n\t],\n\t\"./hrs-button_2.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-button_2.entry.js\",\n\t\t\"common\",\n\t\t46\n\t],\n\t\"./hrs-buttons.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-buttons.entry.js\",\n\t\t47\n\t],\n\t\"./hrs-chat.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-chat.entry.js\",\n\t\t48\n\t],\n\t\"./hrs-checkbox_3.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-checkbox_3.entry.js\",\n\t\t49\n\t],\n\t\"./hrs-chip.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-chip.entry.js\",\n\t\t50\n\t],\n\t\"./hrs-content.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-content.entry.js\",\n\t\t\"common\",\n\t\t51\n\t],\n\t\"./hrs-fab.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-fab.entry.js\",\n\t\t52\n\t],\n\t\"./hrs-footer.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-footer.entry.js\",\n\t\t53\n\t],\n\t\"./hrs-form-item.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-form-item.entry.js\",\n\t\t54\n\t],\n\t\"./hrs-icon.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-icon.entry.js\",\n\t\t\"common\",\n\t\t55\n\t],\n\t\"./hrs-input.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-input.entry.js\",\n\t\t\"common\",\n\t\t56\n\t],\n\t\"./hrs-label.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-label.entry.js\",\n\t\t57\n\t],\n\t\"./hrs-list-item_4.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-list-item_4.entry.js\",\n\t\t58\n\t],\n\t\"./hrs-menu-button.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-menu-button.entry.js\",\n\t\t59\n\t],\n\t\"./hrs-menu-item_2.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-menu-item_2.entry.js\",\n\t\t60\n\t],\n\t\"./hrs-menu.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-menu.entry.js\",\n\t\t61\n\t],\n\t\"./hrs-modal.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-modal.entry.js\",\n\t\t62\n\t],\n\t\"./hrs-status-bar.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-status-bar.entry.js\",\n\t\t63\n\t],\n\t\"./hrs-text.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-text.entry.js\",\n\t\t\"common\",\n\t\t64\n\t],\n\t\"./hrs-textarea.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-textarea.entry.js\",\n\t\t\"common\",\n\t\t65\n\t],\n\t\"./hrs-toast.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-toast.entry.js\",\n\t\t66\n\t],\n\t\"./hrs-wizard.entry.js\": [\n\t\t\"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-wizard.entry.js\",\n\t\t67\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": \"../../node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"../../node_modules/moment/locale/af.js\",\n\t\"./ar\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../node_modules/moment/locale/ar.js\",\n\t\"./az\": \"../../node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"../../node_modules/moment/locale/az.js\",\n\t\"./be\": \"../../node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"../../node_modules/moment/locale/be.js\",\n\t\"./bg\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"../../node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"../../node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"../../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"../../node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"../../node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"../../node_modules/moment/locale/bo.js\",\n\t\"./br\": \"../../node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"../../node_modules/moment/locale/br.js\",\n\t\"./bs\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"../../node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"../../node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"../../node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"../../node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"../../node_modules/moment/locale/cy.js\",\n\t\"./da\": \"../../node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"../../node_modules/moment/locale/da.js\",\n\t\"./de\": \"../../node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../node_modules/moment/locale/de.js\",\n\t\"./dv\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"../../node_modules/moment/locale/dv.js\",\n\t\"./el\": \"../../node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"../../node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"../../node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"../../node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"../../node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"../../node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"../../node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"../../node_modules/moment/locale/eo.js\",\n\t\"./es\": \"../../node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"../../node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"../../node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"../../node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"../../node_modules/moment/locale/es.js\",\n\t\"./et\": \"../../node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"../../node_modules/moment/locale/et.js\",\n\t\"./eu\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"../../node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"../../node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"../../node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"../../node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"../../node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"../../node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"../../node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"../../node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"../../node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"../../node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"../../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"../../node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"../../node_modules/moment/locale/gu.js\",\n\t\"./he\": \"../../node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"../../node_modules/moment/locale/he.js\",\n\t\"./hi\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"../../node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"../../node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"../../node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"../../node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"../../node_modules/moment/locale/id.js\",\n\t\"./is\": \"../../node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"../../node_modules/moment/locale/is.js\",\n\t\"./it\": \"../../node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"../../node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"../../node_modules/moment/locale/it.js\",\n\t\"./ja\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"../../node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"../../node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"../../node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"../../node_modules/moment/locale/kk.js\",\n\t\"./km\": \"../../node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"../../node_modules/moment/locale/km.js\",\n\t\"./kn\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"../../node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"../../node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"../../node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"../../node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"../../node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"../../node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"../../node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"../../node_modules/moment/locale/lv.js\",\n\t\"./me\": \"../../node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"../../node_modules/moment/locale/me.js\",\n\t\"./mi\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"../../node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"../../node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"../../node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"../../node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"../../node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"../../node_modules/moment/locale/mt.js\",\n\t\"./my\": \"../../node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"../../node_modules/moment/locale/my.js\",\n\t\"./nb\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"../../node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"../../node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"../../node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"../../node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"../../node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"../../node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"../../node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"../../node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"../../node_modules/moment/locale/sd.js\",\n\t\"./se\": \"../../node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"../../node_modules/moment/locale/se.js\",\n\t\"./si\": \"../../node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"../../node_modules/moment/locale/si.js\",\n\t\"./sk\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"../../node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"../../node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"../../node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"../../node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"../../node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"../../node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"../../node_modules/moment/locale/ta.js\",\n\t\"./te\": \"../../node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"../../node_modules/moment/locale/te.js\",\n\t\"./tet\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"../../node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"../../node_modules/moment/locale/tg.js\",\n\t\"./th\": \"../../node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"../../node_modules/moment/locale/th.js\",\n\t\"./tk\": \"../../node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"../../node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"../../node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"../../node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"../../node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"../../node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"../../node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"../../node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"../../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"../../node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"../../node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./add-patient/add-patient.module\": [\n\t\t\"./src/app/add-patient/add-patient.module.ts\",\n\t\t\"add-patient-add-patient-module\"\n\t],\n\t\"./admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\"\n\t],\n\t\"./login/login.module\": [\n\t\t\"./src/app/login/login.module.ts\",\n\t\t\"login-login-module\"\n\t],\n\t\"./organizational-login/organization-login.module\": [\n\t\t\"./src/app/organizational-login/organization-login.module.ts\",\n\t\t\"organizational-login-organization-login-module\"\n\t],\n\t\"./patient-list/patient-list.module\": [\n\t\t\"./src/app/patient-list/patient-list.module.ts\",\n\t\t\"patient-list-patient-list-module\"\n\t],\n\t\"./patient/patient-profile.module\": [\n\t\t\"./src/app/patient/patient-profile.module.ts\",\n\t\t\"patient-patient-profile-module\"\n\t],\n\t\"./welcome/welcome.module\": [\n\t\t\"./src/app/welcome/welcome.module.ts\",\n\t\t\"welcome-welcome-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","/**\n * Firebase Account Info.\n *\n * This is the data for our two Firebase accounts. We can manually initialize FirebaseApp in our FCMPlugin using\n * this data.\n *\n * FirebaseAccountInfo.prod: used when domain is pointed to healthrecoverysolutions.com aka prod.\n * FirebaseAccountInfo.test: used when domain is pointed to anything else e.g. elaine, george, jerry, any of our proxies.\n */\n\nexport const FirebaseAccountInfo = {\n    prod: {\n        'project_number': '848348592935',\n        'database_url': 'https://hrsmessaging.firebaseio.com',\n        'project_id': 'hrsmessaging',\n        'storage_bucket': 'hrsmessaging.appspot.com',\n        'app_id': '1:848348592935:android:09ed35be91858d73',\n        'api_key': 'AIzaSyAtcchlcA_QQPfWhR7bd7Zx5v7RsgzWmQk',\n        'package_name': 'com.hrs.clinician',\n        'client_id': '848348592935-6c4nepokq9t6bk9rnk5j74ocahus44r5.apps.googleusercontent.com'\n    },\n    test: {\n        'project_number': '808741233790',\n        'database_url': 'https://test-project-7d531.firebaseio.com',\n        'project_id': 'test-project-7d531',\n        'storage_bucket': 'test-project-7d531.appspot.com',\n        'app_id': '1:808741233790:android:6f5d66a54d21b5a2',\n        'api_key': 'AIzaSyAcCdIQ2egWosksLDG4Iqnd1FCEKtYqIp4',\n        'package_name': 'ionic.hrsmobile.byod.clinician',\n        'client_id': '808741233790-su0scsrtt3ql8nn0tbqqe6ep6l88qoor.apps.googleusercontent.com'\n    }\n};\n","var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop.entry.js\",\n\t\t5\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t10\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3.entry.js\",\n\t\t\"common\",\n\t\t11\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t13\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2.entry.js\",\n\t\t14\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal.entry.js\",\n\t\t\"common\",\n\t\t20\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range.entry.js\",\n\t\t\"common\",\n\t\t25\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t28\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2.entry.js\",\n\t\t33\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js\",\n\t\t35\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t42\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","module.exports = \"<div class=\\\"c_admin_access\\\">\\n    <hrs-form-item\\n        [hasInvalidInput]=\\\"hasError\\\"\\n        [errorMessage]=\\\"errorMessage\\\">\\n        <hrs-label\\n            class=\\\"c_admin_access--label\\\"\\n            slot=\\\"start\\\">\\n            {{ 'ADMIN_ACCESS_HEADER' | translate }}\\n        </hrs-label>\\n        <hrs-input\\n                class=\\\"c_admin_access--input\\\"\\n                type=\\\"text\\\"\\n                inputmode=\\\"numeric\\\"\\n                maxlength=\\\"5\\\"\\n                placeholder=\\\"{{ 'ADMIN_PASSCODE_PLACEHOLDER' | translate }}\\\"\\n                [(ngModel)]=\\\"enteredPasscode\\\"\\n                (ngModelChange)=\\\"passcodeChangeHandler()\\\"\\n        ></hrs-input>\\n    </hrs-form-item>\\n</div>\\n\\n\"","module.exports = \"<ion-header class=\\\"c_admin--header\\\">\\n    <ion-toolbar>\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button\\n                class=\\\"c_admin--home_button\\\"\\n                (click)=\\\"exitAdmin()\\\"\\n            >\\n                <hrs-icon icon=\\\"home\\\"></hrs-icon>\\n                <span class=\\\"sr-only\\\">{{ 'HOME_TITLE' | translate }}</span>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'ADMIN_TITLE' | translate }}\\n            </span>\\n            <ion-label\\n                    *ngIf=\\\"hasCorrectAccess\\\"\\n                    for=\\\"settingsPanel\\\"\\n            >| {{ selectedSetting.fullLabel | translate}}</ion-label>\\n        </ion-title>\\n        <ion-buttons slot=\\\"end\\\" *ngIf=\\\"hasCorrectAccess\\\">\\n            <ion-button (click)=\\\"user.logout()\\\" fill=\\\"solid\\\" [textContent]=\\\"'Logout'\\\"></ion-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"c_admin--content\\\">\\n\\n    <hrs-admin-access\\n            *ngIf=\\\"!hasCorrectAccess\\\"\\n            (hasCorrectPassword)=\\\"hasCorrectPassword($event)\\\"\\n    ></hrs-admin-access>\\n\\n    <div class=\\\"c_admin_settings\\\" *ngIf=\\\"hasCorrectAccess\\\">\\n        <div class=\\\"c_admin_settings--panel\\\">\\n            <ion-tabs class=\\\"c_admin_settings--tabs\\\">\\n                <ion-tab-bar class=\\\"c_admin_settings--tabs\\\" slot=\\\"bottom\\\">\\n                    <ion-tab-button\\n                        *ngFor=\\\"let setting of settings\\\"\\n                        (click)=\\\"selectSetting(setting)\\\"\\n                        [ngClass]=\\\"{'tab-selected': setting.enum === selectedSetting.enum}\\\"\\n                    >\\n                        <ion-icon name=\\\"{{setting.icon}}\\\"></ion-icon>\\n                        <ion-label>{{setting.tabLabel | translate}}</ion-label>\\n                    </ion-tab-button>\\n                </ion-tab-bar>\\n            </ion-tabs>\\n            <ng-container\\n                id=\\\"settingsPanel\\\"\\n                [ngSwitch]=\\\"selectedSetting.enum\\\">\\n                <domain-settings *ngSwitchCase=\\\"adminSettings.DOMAIN\\\"></domain-settings>\\n            </ng-container>\\n        </div>\\n    </div>\\n\\n</ion-content>\\n\"","module.exports = \"<div class=\\\"c_admin_kiosk\\\">\\n    <ion-list>\\n        <ion-radio-group [(ngModel)]=\\\"selected\\\" [value]=\\\"selected\\\">\\n\\n            <ion-list-header>\\n                <ion-label>{{'ADMIN_DOMAIN_SETTINGS.HEADER' | translate}}</ion-label>\\n            </ion-list-header>\\n            <p>{{currentDomain}}</p>\\n\\n            <ion-item *ngFor=\\\"let domain of domains\\\">\\n                <ion-label>{{domain}}</ion-label>\\n                <ion-radio color=\\\"success\\\" slot=\\\"start\\\" value=\\\"{{domain}}\\\"></ion-radio>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label class=\\\"hrsdomain--label\\\" (click)=\\\"handleLabelClick('hrsdomain')\\\">\\n                    {{'hrsdomain:'}}\\n                    <ion-input class=\\\"c_input\\\"\\n                               type=\\\"text\\\"\\n                               placeholder=\\\"type domain here...\\\"\\n                               [disabled]=\\\"selected !== 'hrsdomain'\\\"\\n                               [(ngModel)]=\\\"hrsdomainText\\\"></ion-input>\\n                </ion-label>\\n                <ion-radio color=\\\"success\\\" slot=\\\"start\\\" value=\\\"hrsdomain\\\"></ion-radio>\\n            </ion-item>\\n        </ion-radio-group>\\n\\n        <ion-buttons class=\\\"c_app_header--buttons\\\">\\n            <ion-button class=\\\"c_button\\\" (click)=\\\"setDomain()\\\">{{'SAVE_BUTTON' | translate}}</ion-button>\\n        </ion-buttons>\\n    </ion-list>\\n</div>\\n\"","module.exports = \"<ion-app class=\\\"ios\\\">\\n    <ion-menu class=\\\"c_app_menu\\\"\\n              contentId=\\\"content\\\"\\n              type=\\\"overlay\\\"\\n              side=\\\"start\\\"\\n              persistant=\\\"true\\\"\\n              enable-menu-with-back-views=\\\"true\\\"\\n              [swipeGesture]=\\\"false\\\">\\n        <ion-header class=\\\"c_app_menu--header\\\">\\n            <h5 class=\\\"app-menu-title c_app_menu--title\\\">\\n                {{ 'MENU' | translate }}\\n            </h5>\\n            <ion-menu-toggle class=\\\"c_app_menu--btn-close\\\">\\n                <ion-icon class=\\\"c_app_menu--btn-close-icon\\\"></ion-icon>\\n            </ion-menu-toggle>\\n        </ion-header>\\n        <ion-content>\\n            <ion-list class=\\\"c_app_menu--list\\\">\\n                <ion-item class=\\\"c_app_menu--item\\\"\\n                          button\\n                          slot=\\\"start\\\"\\n                          (click)=\\\"openAddPatientPage()\\\"\\n                          *ngIf=\\\"!user.isReadOnlyClinician()\\\">\\n                    <ion-icon class=\\\"c_app_menu--icon c_app_menu--icon-add_patient\\\"></ion-icon>\\n                    <ion-label>{{ 'ADD_PATIENT' | translate }}</ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"c_app_menu--item\\\"\\n                          button\\n                          slot=\\\"start\\\"\\n                          (click)=\\\"initSupportCall()\\\"\\n                          detail-none>\\n                    <ion-icon class=\\\"c_app_menu--icon c_app_menu--icon-support\\\"></ion-icon>\\n                    <ion-label>\\n                        {{ 'CALL_SUPPORT' | translate }}\\n                    </ion-label>\\n                </ion-item>\\n                <ion-item class=\\\"c_app_menu--item\\\"\\n                          button\\n                          slot=\\\"start\\\"\\n                          (click)=\\\"logoutClicked()\\\">\\n                    <ion-icon class=\\\"c_app_menu--icon c_app_menu--icon-logout\\\"></ion-icon>\\n                    <ion-label>\\n                        {{ 'LOGOUT' | translate }}\\n                    </ion-label>\\n                </ion-item>\\n            </ion-list>\\n        </ion-content>\\n        <div class=\\\"app-version\\\" (click)=\\\"openAdmin()\\\">\\n            {{ versionNumber }}\\n        </div>\\n    </ion-menu>\\n    <ion-router-outlet id=\\\"content\\\" [swipeGesture]=\\\"false\\\"></ion-router-outlet>\\n</ion-app>\\n\"","module.exports = \"<ion-header>\\n    <ion-toolbar class=\\\"c_app_header is-modal\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'CHAT_PANEL' | translate }}\\n            </span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list class=\\\"c_chat--list\\\">\\n        <section class=\\\"c_chat\\\" *ngFor=\\\"let message of messages; let last = last\\\" no-lines>\\n            <article class=\\\"c_chat--message ion-text-right\\\" *ngIf=\\\"message.name === 'You'\\\">\\n                <article class=\\\"c_chat--bubble-right\\\">\\n                    <span class=\\\"c_chat--msg_name\\\">{{ 'CHAT_YOU_MESSAGE' | translate }}</span>\\n                    <span class=\\\"c_chat--msg_text\\\">{{ message.text }}</span>\\n                </article>\\n            </article>\\n            <div class=\\\"c_chat--timestamp-right ion-text-wrap\\\" *ngIf=\\\"message.name === 'You'\\\">{{ message.time ? convertTimeAndDate(message.ts) : message.messageStatus }}</div>\\n            <article class=\\\"c_chat--message ion-text-left\\\" *ngIf=\\\"message.name !== 'You'\\\">\\n                <div class=\\\"c_chat--bubble-left\\\">\\n                    <span class=\\\"c_chat--msg_name\\\">{{ message.name }}</span>\\n                    <span class=\\\"c_chat--msg_text\\\">{{ message.text }}</span>\\n                </div>\\n            </article>\\n            <article class=\\\"c_chat--timestamp-left ion-text-wrap\\\" *ngIf=\\\"message.name !== 'You'\\\">\\n                {{ convertTimeAndDate(message.ts) }} - {{ message.type === 'patient' ? ('PATIENT' | translate) : ('PATIENT_PROFILE_CLINICIAN' | translate)  }}\\n            </article>\\n            {{last && !polling ? callScrollFunction() : ''}}\\n        </section>\\n    </ion-list>\\n</ion-content>\\n\\n<ion-footer class=\\\"c_chat--footer\\\">\\n    <form [formGroup]=\\\"data\\\"  (submit)=\\\"sendTextMessage()\\\" class=\\\"c_chat--form\\\">\\n        <ion-textarea class=\\\"c_chat--input\\\" type=\\\"text\\\" placeholder=\\\"{{ 'CHAT_MESSAGE' | translate }}\\\" formControlName=\\\"message\\\"></ion-textarea>\\n        <ion-button class=\\\"c_chat--btn-send\\\" type=\\\"submit\\\" [disabled]=\\\"data.value.message == ''\\\">\\n            <span class=\\\"c_chat--btn-content\\\">\\n                <ion-icon class=\\\"c_chat--icon-send\\\"></ion-icon>\\n                {{ 'SEND' | translate }}\\n            </span>\\n        </ion-button>\\n    </form>\\n</ion-footer>\\n\"","module.exports = \"<ion-header>\\n    <ion-toolbar class=\\\"c_app_header is-modal\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ \\\"VIDEO_PANEL\\\" | translate }}\\n            </span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"c_call c_video_call--details\\\">\\n    <div class=\\\"c_call--status\\\">\\n        <div class=\\\"c_call--name-callee\\\">{{ callData.patientName }}</div>\\n        {{ callStatus | translate }}\\n    </div>\\n    <div id='videoCallPublisher'></div>\\n    <div id='videoCallSubscriber' class=\\\"c_call--view-callee\\\" style=\\\"width: 100%; height: calc(90vh - 5em); position: absolute; top: 0; left: 0; z-index: 500; pointer-events:none;\\\"></div>\\n</ion-content>\\n<ion-footer class=\\\"c_footer\\\">\\n    <ion-button class=\\\"c_footer--button-back\\\"\\n                (click)=\\\"dismiss()\\\">\\n        <ion-icon class=\\\"c_footer--icon-back\\\"></ion-icon>\\n    </ion-button>\\n    <ion-button class=\\\"c_footer--button\\\"\\n                [ngClass]=\\\"{\\n                    'c_call--button-call': !calling,\\n                    'c_call--button-end': calling\\n                }\\\"\\n                (click)=\\\"toggleCall()\\\"\\n                [disabled]=\\\"modalClosing\\\">\\n        <ion-icon class=\\\"c_call--icon-dial\\\"\\n                  name=\\\"videocam\\\"></ion-icon>\\n    </ion-button>\\n</ion-footer>\\n\"","module.exports = \"<ion-header class=\\\"callHeader\\\">\\n    <ion-toolbar class=\\\"c_app_header is-modal\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ \\\"VOICE_PANEL\\\" | translate }}\\n            </span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"callDetails c_call c_voice_call--details\\\">\\n    <div class=\\\"calleeName c_call--name-callee\\\">{{ callData.patientName }}</div>\\n    <div class=\\\"callStatus c_call--status\\\">\\n        <div>{{ callStatus | translate }}</div>\\n    </div>\\n</ion-content>\\n<ion-footer class=\\\"c_footer\\\">\\n    <ion-button class=\\\"c_footer--button-back\\\"\\n                (click)=\\\"dismiss()\\\">\\n        <ion-icon class=\\\"c_footer--icon-back\\\"></ion-icon>\\n    </ion-button>\\n    <ion-button class=\\\"c_footer--button\\\"\\n                [ngClass]=\\\"{\\n                    'c_call--button-call': true,\\n                    'c_call--button-end': calling\\n                }\\\"\\n                (click)=\\\"toggleCall()\\\"\\n                [disabled]=\\\"modalClosing\\\">\\n        <ion-icon class=\\\"c_call--icon-dial\\\"\\n                  name=\\\"call\\\"></ion-icon>\\n    </ion-button>\\n</ion-footer>\\n\"","module.exports = \"<ion-content class=\\\"c_splash--page\\\"\\n             scroll=\\\"false\\\">\\n    <div class=\\\"c_splash--wrapper\\\">\\n        <div class=\\\"c_splash--logo_container\\\">\\n            <div class=\\\"c_splash--logo_bg\\\"></div>\\n            <div class=\\\"c_splash--logo\\\"></div>\\n        </div>\\n        <div class=\\\"c_splash--card_container is-tall_card is-login\\\">\\n            <div class=\\\"c_splash--card_bg\\\"></div>\\n            <main class=\\\"c_splash--card\\\">\\n                <header class=\\\"c_splash--card_header c_card--header\\\">\\n                    <div class=\\\"c_splash--header_bg\\\"></div>\\n                    <ion-button class=\\\"c_splash--back_btn\\\"\\n                                [routerLink]=\\\"['/welcome']\\\"\\n                                routerDirection=\\\"back\\\"></ion-button>\\n                    <span class=\\\"c_splash--title_text\\\">\\n                        {{ 'ORGANIZATIONAL_LOGIN.TITLE' | translate }}\\n                    </span>\\n                </header>\\n                <div class=\\\"c_splash--card_content c_card--content\\\">\\n                    <form class=\\\"c_splash--form\\\">\\n                        <ion-list class=\\\"c_splash--input_wrapper\\\">\\n                            <ion-item class=\\\"c_splash--input\\\">\\n                                <ion-label class=\\\"c_splash--input_label\\\"\\n                                           position=\\\"floating\\\">\\n                                    {{ 'ORGANIZATIONAL_LOGIN.EMAIL_LABEL' | translate }}\\n                                </ion-label>\\n                                <ion-input class=\\\"c_splash--input_field\\\"\\n                                           type=\\\"email\\\"\\n                                           autocapitalize=\\\"none\\\"\\n                                           [(ngModel)]=\\\"email\\\"\\n                                           name=\\\"email\\\"></ion-input>\\n                            </ion-item>\\n                        </ion-list>\\n                    </form>\\n                    <div class=\\\"c_splash--text\\\">\\n                        {{ 'ORGANIZATIONAL_LOGIN.HELP_TEXT' | translate }}\\n                    </div>\\n                </div>\\n                <footer class=\\\"c_splash--card_footer c_card--buttons\\\">\\n                    <div class=\\\"c_splash--footer_bg\\\"></div>\\n                    <ion-button class=\\\"c_button login\\\"\\n                                (click)=\\\"email && doLogin()\\\"\\n                                type=\\\"submit\\\"\\n                                [disabled]=\\\"!email || loggingIn\\\">\\n                        {{ 'ORGANIZATIONAL_LOGIN.SUBMIT_BUTTON' | translate }}\\n                    </ion-button>\\n                </footer>\\n            </main>\\n        </div>\\n    </div>\\n</ion-content>\\n\"","module.exports = \"<ion-header>\\n    <ion-toolbar class=\\\"c_app_header is-modal statusbar-padding\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">{{ 'CAREPLAN' | translate }}</span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"careplan-page\\\">\\n    <ion-card class=\\\"c_card\\\">\\n        <ion-card-header class=\\\"c_card--header\\\">\\n            {{ 'CAREPLAN_PRESETS' | translate }}\\n        </ion-card-header>\\n        <ion-card-content class=\\\"c_card--content\\\"\\n                          *ngIf=\\\"populateActiveItems('presets').length > 0\\\">\\n            <ion-badge class=\\\"c_careplan--badge\\\"\\n                       *ngFor=\\\"let preset of populateActiveItems('presets')\\\"\\n                       item-start>\\n                {{ presets[preset].item.attributes.name }}\\n            </ion-badge>\\n        </ion-card-content>\\n        <ion-card-content class=\\\"c_card--content\\\"\\n                          *ngIf=\\\"populateActiveItems('presets').length === 0\\\">\\n            <ion-item class=\\\"c_careplan--no_content\\\"\\n                      item-start>\\n                - {{ 'CAREPLAN_NO_CONTENT' | translate }} -\\n            </ion-item>\\n        </ion-card-content>\\n        <ion-button class=\\\"c_button-center\\\"\\n                    (click)=\\\"openEditCarePlanModal(false)\\\">\\n            {{ 'CAREPLAN_EDIT_PRESETS' | translate }}\\n        </ion-button>\\n    </ion-card>\\n    <ion-card class=\\\"c_card\\\">\\n        <ion-card-header class=\\\"c_card--header\\\">\\n            {{ 'CAREPLAN_MODULES' | translate }}\\n        </ion-card-header>\\n        <ion-card-content class=\\\"c_card--content\\\"\\n                          *ngIf=\\\"populateActiveItems('modules').length > 0\\\">\\n            <ion-badge class=\\\"c_careplan--badge\\\"\\n                       *ngFor=\\\"let module of populateActiveItems('modules')\\\"\\n                       item-start>\\n                {{ modules[module].item.attributes.name }}\\n            </ion-badge>\\n        </ion-card-content>\\n        <ion-card-content class=\\\"c_card--content\\\"\\n                          *ngIf=\\\"populateActiveItems('modules').length === 0\\\">\\n            <ion-item class=\\\"c_careplan--no_content\\\"\\n                      item-start>\\n               - {{ 'CAREPLAN_NO_CONTENT' | translate }} -\\n            </ion-item>\\n        </ion-card-content>\\n        <ion-button class=\\\"c_button-center\\\"\\n                    (click)=\\\"openEditCarePlanModal(true)\\\">\\n            {{ 'CAREPLAN_EDIT_MODULES' | translate }}\\n        </ion-button>\\n    </ion-card>\\n    <ion-card class=\\\"c_card c_careplan--notice\\\">\\n        <ion-icon class=\\\"c_careplan--notice_icon\\\"></ion-icon>\\n        {{ 'CAREPLAN_ADVANCED_NOTICE' | translate }}\\n    </ion-card>\\n</ion-content>\\n\"","module.exports = \"<ion-header>\\n    <ion-toolbar class=\\\"c_app_header is-modal statusbar-padding\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"cancel()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title *ngIf=\\\"isModules\\\" class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">{{ 'CAREPLAN' | translate }} - {{ 'CAREPLAN_EDIT_MODULES' | translate }}</span>\\n        </ion-title>\\n        <ion-title *ngIf=\\\"!isModules\\\" class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">{{ 'CAREPLAN' | translate }} - {{ 'CAREPLAN_EDIT_PRESETS' | translate }}</span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"edit-careplan-page\\\" *ngIf=\\\"!loading\\\">\\n    <ion-list class=\\\"c_careplan--list\\\">\\n        <ion-item class=\\\"c_careplan--toggle\\\"\\n                  [ngClass]=\\\"{'is-selected': careplanToggleMap[key].selected}\\\"\\n                  *ngFor=\\\"let key of keys\\\"\\n                  (click)=\\\"toggleCareplanItem(careplanToggleMap[key].item)\\\">\\n            <ion-label class=\\\"c_careplan--name\\\">\\n                {{ careplanToggleMap[key].item.attributes.name }}\\n            </ion-label>\\n            <ion-checkbox class=\\\"c_card--checkbox is-radio\\\"\\n                          [checked]=\\\"careplanToggleMap[key].selected\\\"></ion-checkbox>\\n        </ion-item>\\n    </ion-list>\\n</ion-content>\\n<ion-footer class=\\\"c_footer\\\">\\n    <ion-button class=\\\"c_footer--button c_footer--button-cancel\\\"\\n                (click)=\\\"cancel()\\\">\\n        {{ 'CANCEL_BUTTON' | translate }}\\n    </ion-button>\\n    <ion-button class=\\\"c_footer--button c_footer--button-save\\\"\\n                [disabled]=\\\"isCareplanEmpty()\\\"\\n                (click)=\\\"dismiss()\\\">\\n        <ion-icon class=\\\"c_footer--icon-save\\\"></ion-icon>\\n        {{ 'SAVE_BUTTON' | translate }}\\n    </ion-button>\\n</ion-footer>\\n\"","module.exports = \"<ion-header>\\n    <ion-toolbar class=\\\"c_app_header is-modal\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'ADD_EDIT_DEVICE' | translate }}\\n            </span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <ion-card class=\\\"c_card\\\">\\n        <ion-card-header>\\n            <b>{{ 'CURRENT_DEVICE' | translate }} </b> {{ currentAssignedDevice }}\\n        </ion-card-header>\\n    </ion-card>\\n\\n    <ion-list>\\n        <ion-item *ngIf=\\\"availableDevices == 'None'\\\" class=\\\"noDevicesAvailable\\\">\\n            <ion-label>{{ 'NO_DEVICE' | translate }}</ion-label>\\n        </ion-item>\\n\\n        <ion-item class=\\\"c_add_device--select\\\" *ngIf=\\\"availableDevices != 'None'\\\">\\n            <ion-label>{{ 'NEW_DEVICE' | translate }}</ion-label>\\n            <ion-select [(ngModel)]=\\\"selectedValue\\\" [value]=\\\"selectedValue\\\" multiple=\\\"false\\\">\\n                <ion-label>{{ 'NEW_DEVICE' | translate }}</ion-label>\\n                <ion-select-option *ngFor=\\\"let device of availableDevices\\\" value=\\\"{{device.name}}\\\">\\n                    {{device.name}}\\n                </ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n    </ion-list>\\n\\n</ion-content>\\n<ion-footer class=\\\"c_footer\\\">\\n    <ion-button class=\\\"c_footer--button c_footer--button-cancel\\\"\\n                (click)=\\\"dismiss()\\\">\\n        {{ 'CANCEL_BUTTON' | translate }}\\n    </ion-button>\\n    <ion-button class=\\\"c_footer--button c_footer--button-save\\\"\\n                (click)=\\\"saveEditToAssignedDevice()\\\" \\n                *ngIf=\\\"availableDevices != 'None'\\\" \\n                [disabled]=\\\"!selectedValue\\\"><ion-icon class=\\\"c_footer--icon-save\\\"></ion-icon>\\n        {{ 'SAVE_BUTTON' | translate }}\\n    </ion-button>\\n</ion-footer>\\n\"","module.exports = \"<ion-header>\\n    <ion-toolbar class=\\\"c_app_header is-modal statusbar-padding\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\"\\n                   *ngIf=\\\"action == status.ActionPause\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'PATIENT_PAUSE.TITLE' | translate }}\\n            </span>\\n        </ion-title>\\n        <ion-title class=\\\"c_app_header--title\\\"\\n                   *ngIf=\\\"action == status.ActionResume\\\" >\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'PATIENT_RESUME.TITLE' | translate }}\\n            </span>\\n        </ion-title>\\n        <ion-title class=\\\"c_app_header--title\\\"\\n                   *ngIf=\\\"action == status.ActionDeactivate\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'PATIENT_DEACTIVATE.TITLE' | translate }}\\n            </span>\\n        </ion-title>\\n        <ion-title class=\\\"c_app_header--title\\\"\\n                   *ngIf=\\\"action == status.ActionReactivate\\\" >\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'PATIENT_REACTIVATE.TITLE' | translate }}\\n            </span>\\n        </ion-title>\\n        <ion-title class=\\\"c_app_header--title ion-text-wrap\\\"\\n                   *ngIf=\\\"action == status.ActionDischarge\\\"\\n                   no-lines>\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'PATIENT_DISCHARGE.TITLE' | translate }}\\n            </span>\\n        </ion-title>\\n        <ion-title class=\\\"c_app_header--title ion-text-wrap\\\"\\n                   *ngIf=\\\"action == status.ActionUnDischarge\\\"\\n                   no-lines>\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'PATIENT_UNDISCHARGE.TITLE' | translate }}\\n            </span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content *ngIf=\\\"action == status.ActionPause\\\">\\n    <ion-card>\\n        <form [formGroup]=\\\"data\\\" (ngSubmit)=\\\"submit()\\\">\\n            <ion-list>\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_PAUSE.FORM.NOTE' | translate }}:</ion-label>\\n                    <ion-textarea formControlName=\\\"note\\\" placeholder=\\\"{{ 'PATIENT_PAUSE.FORM.NOTE_PLACEHOLDER' | translate }}\\\"></ion-textarea>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_PAUSE.FORM.EDVISIT' | translate }}</ion-label>\\n                    <ion-checkbox formControlName=\\\"edvisit\\\"></ion-checkbox>\\n                </ion-item>\\n\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_PAUSE.FORM.READMITTED' | translate }}</ion-label>\\n                    <ion-checkbox formControlName=\\\"readmitted\\\"></ion-checkbox>\\n                </ion-item>\\n\\n                <div class=\\\"ion-padding\\\">\\n                    <ion-button expand=\\\"block\\\" slot=\\\"end\\\" type=\\\"submit\\\">\\n                        <ion-text>{{ 'PATIENT_PAUSE.SUBMIT_BUTTON' | translate }}</ion-text>\\n                    </ion-button>\\n                </div>\\n            </ion-list>\\n        </form>\\n    </ion-card>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"action == status.ActionResume\\\">\\n    <ion-card>\\n        <form [formGroup]=\\\"data\\\" (ngSubmit)=\\\"submit()\\\">\\n            <ion-list>\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_RESUME.FORM.NOTE' | translate }}:</ion-label>\\n                    <ion-textarea formControlName=\\\"note\\\" placeholder=\\\"{{ 'PATIENT_RESUME.FORM.NOTE_PLACEHOLDER' | translate }}\\\"></ion-textarea>\\n                </ion-item>\\n\\n                <div class=\\\"ion-padding\\\">\\n                    <ion-button expand=\\\"block\\\" slot=\\\"end\\\" type=\\\"submit\\\">\\n                        <ion-text>{{ 'PATIENT_RESUME.SUBMIT_BUTTON' | translate }}</ion-text>\\n                    </ion-button>\\n                </div>\\n            </ion-list>\\n        </form>\\n    </ion-card>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"action == status.ActionDeactivate\\\" class=\\\"c_patient_status--deactivate\\\">\\n    <ion-card>\\n        <form [formGroup]=\\\"data\\\" (ngSubmit)=\\\"submit()\\\">\\n            <ion-list>\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_DEACTIVATE.FORM.NOTE' | translate }}:</ion-label>\\n                    <ion-textarea formControlName=\\\"note\\\" placeholder=\\\"{{ 'PATIENT_DEACTIVATE.FORM.NOTE_PLACEHOLDER' | translate }}\\\"></ion-textarea>\\n                </ion-item>\\n\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_DEACTIVATE.FORM.EDVISIT' | translate }}</ion-label>\\n                    <ion-checkbox formControlName=\\\"edvisit\\\"></ion-checkbox>\\n                </ion-item>\\n\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_DEACTIVATE.FORM.READMITTED' | translate }}</ion-label>\\n                    <ion-checkbox formControlName=\\\"readmitted\\\"></ion-checkbox>\\n                </ion-item>\\n\\n                <div class=\\\"ion-padding\\\">\\n                    <ion-button expand=\\\"block\\\" slot=\\\"end\\\" type=\\\"submit\\\">\\n                        <ion-text>{{ 'PATIENT_DEACTIVATE.SUBMIT_BUTTON' | translate }}</ion-text>\\n                    </ion-button>\\n                </div>\\n            </ion-list>\\n        </form>\\n    </ion-card>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"action == status.ActionReactivate\\\">\\n    <ion-card>\\n        <form [formGroup]=\\\"data\\\" (ngSubmit)=\\\"submit()\\\">\\n            <ion-list>\\n                <ion-item>\\n                    <ion-label>{{ 'PATIENT_REACTIVATE.FORM.NOTE' | translate }}:</ion-label>\\n                    <ion-textarea formControlName=\\\"note\\\" placeholder=\\\"{{ 'PATIENT_REACTIVATE.FORM.NOTE_PLACEHOLDER' | translate }}\\\"></ion-textarea>\\n                </ion-item>\\n\\n                <div class=\\\"ion-padding\\\">\\n                    <ion-button expand=\\\"block\\\" slot=\\\"end\\\" type=\\\"submit\\\">\\n                        <ion-text>{{ 'PATIENT_REACTIVATE.SUBMIT_BUTTON' | translate }}</ion-text>\\n                    </ion-button>\\n                </div>\\n            </ion-list>\\n        </form>\\n    </ion-card>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"action == status.ActionDischarge\\\">\\n    <ion-card>\\n        <ion-card-header class=\\\"patient-discharge-info\\\">{{ 'PATIENT_DISCHARGE.INFO' | translate }}</ion-card-header>\\n        <form [formGroup]=\\\"data\\\" (ngSubmit)=\\\"submit()\\\">\\n            <ion-item>\\n                <ion-label position=\\\"stacked\\\">{{ 'PATIENT_DISCHARGE.INPUT.PLACEHOLDER' | translate }}</ion-label>\\n                <ion-datetime name=\\\"date\\\"\\n                              formControlName=\\\"date\\\"\\n                              display-format=\\\"MM/DD/YYYY\\\"\\n                              picker-format=\\\"MM DD YYYY\\\"\\n                              placeholder=\\\"{{ 'PATIENT_DISCHARGE.INPUT.PLACEHOLDER' | translate }}\\\"\\n\\n                ></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"ion-padding\\\">\\n                <ion-button expand=\\\"block\\\" slot=\\\"end\\\" type=\\\"submit\\\" [disabled]=\\\"data.value.date === ''\\\">\\n                    <ion-text>{{ 'PATIENT_DISCHARGE.SUBMIT_BUTTON' | translate }}</ion-text>\\n                </ion-button>\\n            </div>\\n        </form>\\n    </ion-card>\\n</ion-content>\\n\\n<ion-content *ngIf=\\\"action == status.ActionUnDischarge\\\">\\n    <ion-card>\\n        <ion-card-header class=\\\"patient-discharge-info\\\">{{undischargeInfo}}</ion-card-header>\\n        <div class=\\\"c_patient_status--buttons ion-padding\\\">\\n            <ion-button expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                <ion-text>{{ 'PATIENT_UNDISCHARGE.CANCEL_BUTTON' | translate }}</ion-text>\\n            </ion-button>\\n            <ion-button expand=\\\"block\\\" (click)=\\\"submit()\\\">\\n                <ion-text>{{ 'PATIENT_UNDISCHARGE.SUBMIT_BUTTON' | translate }}</ion-text>\\n            </ion-button>\\n        </div>\\n    </ion-card>\\n</ion-content>\\n\"","module.exports = \"<ion-header>\\n    <ion-toolbar class=\\\"c_app_header is-modal\\\">\\n        <ion-buttons class=\\\"c_app_header--buttons\\\" slot=\\\"start\\\">\\n            <ion-button class=\\\"c_app_header--btn\\\" (click)=\\\"dismiss()\\\">\\n                <ion-icon class=\\\"c_app_header--icon-back\\\"></ion-icon>\\n            </ion-button>\\n        </ion-buttons>\\n        <ion-title class=\\\"c_app_header--title\\\">\\n            <span class=\\\"c_app_header--text\\\">\\n                {{ 'RESET_METRICS' | translate }}\\n            </span>\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"resetMetricsModal\\\">\\n    <ion-card>\\n        <ion-card-header>\\n            <b>{{ 'RESET_METRICS_HEADER' | translate }}</b>\\n        </ion-card-header>\\n    </ion-card>\\n    <form [formGroup]=\\\"metrics\\\" (ngSubmit)=\\\"submitMetricReset()\\\">\\n        <ion-list>\\n            <ion-item>\\n                <ion-label>{{ 'ACTIVITY' | translate }}</ion-label>\\n                <ion-checkbox formControlName=\\\"activity\\\" (ionChange)=\\\"toggleResetButton()\\\"></ion-checkbox>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>{{ 'CONSENT_FORM' | translate }}</ion-label>\\n                <ion-checkbox formControlName=\\\"consent\\\" (ionChange)=\\\"toggleResetButton()\\\"></ion-checkbox>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>{{ 'MEDICATIONS' | translate }}</ion-label>\\n                <ion-checkbox formControlName=\\\"medication\\\" (ionChange)=\\\"toggleResetButton()\\\"></ion-checkbox>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>{{ 'SURVEY' | translate }}</ion-label>\\n                <ion-checkbox formControlName=\\\"survey\\\" (ionChange)=\\\"toggleResetButton()\\\"></ion-checkbox>\\n            </ion-item>\\n            <ion-item>\\n                <ion-label>{{ 'WEIGHT' | translate }}</ion-label>\\n                <ion-checkbox formControlName=\\\"weight\\\" (ionChange)=\\\"toggleResetButton()\\\"></ion-checkbox>\\n            </ion-item>\\n        </ion-list>\\n        <ion-buttons class=\\\"c_buttons c_footer\\\">\\n            <ion-button class=\\\"c_button-left c_footer--button-left\\\" (click)=\\\"dismiss()\\\">\\n                <ion-text class=\\\"c_footer--text\\\">{{ 'CLOSE_BUTTON' | translate }}</ion-text>\\n            </ion-button>\\n            <ion-button class=\\\"c_button c_footer--button\\\" type=\\\"submit\\\" [disabled]=\\\"!metricSelected\\\">\\n                <ion-text class=\\\"c_footer--text\\\">{{ 'RESET_BUTTON' | translate }}</ion-text>\\n            </ion-button>\\n        </ion-buttons>\\n    </form>\\n</ion-content>\\n\"","module.exports = \".c_admin_access {\\n  display: flex;\\n  flex-direction: column;\\n  place-items: center;\\n  font-size: 1.25rem;\\n  font-weight: bold; }\\n  .c_admin_access hrs-form-item {\\n    --item-height: 100%;\\n    --message-height: 1.2rem;\\n    --message-top-margin: 1rem;\\n    --message-font-size: 1.5rem;\\n    display: flex;\\n    justify-content: center;\\n    align-items: flex-end; }\\n  .c_admin_access hrs-form-item .c_admin_access--label {\\n      margin: 1rem auto; }\\n  .c_admin_access hrs-form-item .c_admin_access--input {\\n      --text-indent: .5rem;\\n      width: 20rem;\\n      height: 2rem;\\n      margin: auto;\\n      font-size: 1.5rem;\\n      text-align: center;\\n      border: 2px solid var(--gray-7);\\n      border-radius: 4px;\\n      background: var(--white); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9hZG1pbi9hZG1pbi1hY2Nlc3MvYWRtaW4tYWNjZXNzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLGlCQUFpQixFQUFBO0VBTHJCO0lBUVEsbUJBQWM7SUFDZCx3QkFBaUI7SUFDakIsMEJBQXFCO0lBQ3JCLDJCQUFvQjtJQUVwQixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLHFCQUFxQixFQUFBO0VBZjdCO01Ba0JZLGlCQUFpQixFQUFBO0VBbEI3QjtNQXNCWSxvQkFBYztNQUNkLFlBQVk7TUFDWixZQUFZO01BQ1osWUFBWTtNQUNaLGlCQUFpQjtNQUNqQixrQkFBa0I7TUFDbEIsK0JBQStCO01BQy9CLGtCQUFrQjtNQUNsQix3QkFBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLWFjY2Vzcy9hZG1pbi1hY2Nlc3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY19hZG1pbl9hY2Nlc3Mge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBwbGFjZS1pdGVtczogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcblxuICAgIGhycy1mb3JtLWl0ZW0ge1xuICAgICAgICAtLWl0ZW0taGVpZ2h0OiAxMDAlO1xuICAgICAgICAtLW1lc3NhZ2UtaGVpZ2h0OiAxLjJyZW07XG4gICAgICAgIC0tbWVzc2FnZS10b3AtbWFyZ2luOiAxcmVtO1xuICAgICAgICAtLW1lc3NhZ2UtZm9udC1zaXplOiAxLjVyZW07XG5cbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcblxuICAgICAgICAuY19hZG1pbl9hY2Nlc3MtLWxhYmVsIHtcbiAgICAgICAgICAgIG1hcmdpbjogMXJlbSBhdXRvO1xuICAgICAgICB9XG5cbiAgICAgICAgLmNfYWRtaW5fYWNjZXNzLS1pbnB1dCB7XG4gICAgICAgICAgICAtLXRleHQtaW5kZW50OiAuNXJlbTtcbiAgICAgICAgICAgIHdpZHRoOiAyMHJlbTtcbiAgICAgICAgICAgIGhlaWdodDogMnJlbTtcbiAgICAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMS41cmVtO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tZ3JheS03KTtcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLXdoaXRlKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ== */\"","import {Component, EventEmitter, Output, ViewChild} from '@angular/core';\nimport {AdminService} from '@clinician/providers';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'hrs-admin-access',\n    templateUrl: 'admin-access.component.html',\n    styleUrls: ['admin-access.component.scss']\n})\n\nexport class AdminAccessComponent {\n    @Output() hasCorrectPassword = new EventEmitter<boolean>();\n\n    hasError: boolean = false;\n    enteredPasscode: string;\n    errorMessage: string;\n\n    private reroute: ReturnType<typeof setTimeout>;\n    private readonly timeout: () => ReturnType<typeof setTimeout>;\n\n    constructor(\n        private adminService: AdminService,\n        private translate: TranslateService\n    ) {\n        this.timeout = () => setTimeout(() => {\n            this.adminService.rerouteHome();\n        }, 45000);\n        this.reroute = this.timeout();\n        this.errorMessage = this.translate.instant('ADMIN_PASSCODE_ERROR');\n    }\n\n    ngOnDestroy() {\n        clearTimeout(this.reroute);\n    }\n\n    /**\n     * On changes to the input, the reroute gets reset and isCorrect gets emitted to parent.\n     */\n    passcodeChangeHandler(): void {\n        const isCorrect = AdminService.PASSCODE === this.enteredPasscode;\n        clearTimeout(this.reroute);\n        if (isCorrect) {\n            this.hasCorrectPassword.emit(isCorrect);\n        } else {\n            this.checkErrorState(isCorrect);\n            this.reroute = this.timeout();\n        }\n    }\n\n    checkErrorState(isCorrect): void {\n        const haveSameLength = AdminService.PASSCODE.length === this.enteredPasscode.length;\n        this.hasError = !isCorrect && haveSameLength;\n    }\n}\n","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {Routes, RouterModule} from '@angular/router';\nimport {IonicModule} from '@ionic/angular';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {AdminPage} from './admin.page';\nimport {DomainSettingsComponent} from './domain-settings/domain-settings.component';\nimport {ComponentLibraryModule} from '@hrsui/angular';\nimport {AdminAccessComponent} from './admin-access/admin-access.component';\n\nconst routes: Routes = [\n    {\n        path: 'admin',\n        component: AdminPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ComponentLibraryModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes),\n        TranslateModule.forChild()\n    ],\n    declarations: [\n        AdminPage,\n        AdminAccessComponent,\n        DomainSettingsComponent\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AdminModule {\n}\n","module.exports = \".c_admin--content {\\n  align-content: center;\\n  --ion-background-color: var(--gray-1);\\n  width: 100%; }\\n\\n.c_admin_settings {\\n  display: flex;\\n  min-height: 100%; }\\n\\n.c_admin_settings--panel {\\n    display: block;\\n    width: 100%;\\n    padding: 1rem 4rem; }\\n\\n@media only screen and (max-width: 767px) {\\n      .c_admin_settings--panel {\\n        padding: 1rem; } }\\n\\n.c_admin--header .c_app_header--buttons {\\n  margin-right: .25rem; }\\n\\n.c_app_header .c_app_header--buttons {\\n  margin-right: 0; }\\n\\n.c_app_header--buttons .c_admin--home_button {\\n  font-size: 1.5rem; }\\n\\n.c_admin_settings--tabs {\\n  display: block !important;\\n  position: static !important;\\n  height: 10vh !important; }\\n\\n.c_admin_settings--tabs ion-tab-bar {\\n    border-top: none;\\n    border-bottom: var(--border);\\n    padding-bottom: 1rem;\\n    margin-bottom: 1rem; }\\n\\n@media only screen and (max-width: 480px) {\\n    .c_admin_settings--tabs ion-tab-button {\\n      max-width: 50px; } }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9hZG1pbi9hZG1pbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0U7RUFDRSxxQkFBcUI7RUFDckIscUNBQXVCO0VBQ3ZCLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGFBQWE7RUFDYixnQkFBZ0IsRUFBQTs7QUFFaEI7SUFDRSxjQUFjO0lBQ2QsV0FBVztJQUNYLGtCQUFrQixFQUFBOztBQUNsQjtNQUpGO1FBS00sYUFBYSxFQUFBLEVBRWxCOztBQUtMO0VBRVEsb0JBQW9CLEVBQUE7O0FBS3hCO0VBQ0ksZUFBZSxFQUFBOztBQUZ2QjtFQUtRLGlCQUFpQixFQUFBOztBQUt6QjtFQUVJLHlCQUF5QjtFQUN6QiwyQkFBMkI7RUFDM0IsdUJBQXVCLEVBQUE7O0FBSjNCO0lBT1EsZ0JBQWdCO0lBQ2hCLDRCQUE0QjtJQUM1QixvQkFBb0I7SUFDcEIsbUJBQW1CLEVBQUE7O0FBR25CO0lBYlI7TUFjWSxlQUFlLEVBQUEsRUFFdEIiLCJmaWxlIjoic3JjL2FwcC9hZG1pbi9hZG1pbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY19hZG1pbiB7XG4gICYtLWNvbnRlbnQge1xuICAgIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmF5LTEpO1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG5cbiAgJl9zZXR0aW5ncyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xuXG4gICAgJi0tcGFuZWwge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHBhZGRpbmc6IDFyZW0gNHJlbTtcbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICBwYWRkaW5nOiAxcmVtO1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG5cbi5jX2FkbWluLS1oZWFkZXIge1xuICAgIC5jX2FwcF9oZWFkZXItLWJ1dHRvbnMge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC4yNXJlbTtcbiAgICB9XG59XG5cbi5jX2FwcF9oZWFkZXItLWJ1dHRvbnMge1xuICAgIC5jX2FwcF9oZWFkZXIgJiB7XG4gICAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICB9XG4gICAgLmNfYWRtaW4tLWhvbWVfYnV0dG9uIHtcbiAgICAgICAgZm9udC1zaXplOiAxLjVyZW07XG4gICAgfVxufVxuXG4vLyBpb25pYydzIHRhYnMgdWkgY29tcG9uZW50IHVzZWQgZm9yIG5hdmlnYXRpb24gd2l0aGluIHRoZSBhZG1pbiBzZWN0aW9uXG4uY19hZG1pbl9zZXR0aW5ncy0tdGFicyB7XG4gICAgLy8gTmVlZCB0byBvdmVycmlkZSBuZ2NvbnRlbnQgYXR0cmlidXRlcy5cbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICAgIHBvc2l0aW9uOiBzdGF0aWMgIWltcG9ydGFudDtcbiAgICBoZWlnaHQ6IDEwdmggIWltcG9ydGFudDtcblxuICAgIGlvbi10YWItYmFyIHtcbiAgICAgICAgYm9yZGVyLXRvcDogbm9uZTtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogdmFyKC0tYm9yZGVyKTtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDFyZW07XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgfVxuICAgIGlvbi10YWItYnV0dG9uIHtcbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0ODBweCkge1xuICAgICAgICAgICAgbWF4LXdpZHRoOiA1MHB4O1xuICAgICAgICB9XG4gICAgfVxufVxuIl19 */\"","import {Component} from '@angular/core';\nimport {AdminService, User} from '@clinician/providers';\nimport {AdminSettings} from '../enums';\nimport {Setting} from './admin-settings.interface';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NavController} from '@ionic/angular';\n\n@Component({\n    selector: 'hrs-admin',\n    templateUrl: 'admin.page.html',\n    styleUrls: ['admin.page.scss']\n})\n\nexport class AdminPage {\n    adminSettings = AdminSettings;\n    hasCorrectAccess: boolean = false;\n    selectedSetting: Setting;\n    settings: Setting[];\n\n    /**\n     * To add a new tablet setting:\n     * add settings object to this.settings which contains an enim which points to the AdminSettings enum,\n     * add the component to admin.module declarations, do not add to app.module,\n     * add the component instantiation to this template's ng-container#settingsPanel\n     */\n    constructor(\n        private translate: TranslateService,\n        private adminService: AdminService,\n        private navCtrl: NavController,\n        private user: User\n    ) {\n        this.settings = this.adminService.settings;\n        this.selectSetting(this.settings[0]);\n    }\n\n    hasCorrectPassword(isCorrect: boolean): void {\n        this.hasCorrectAccess = isCorrect;\n    }\n\n    selectSetting(setting: Setting): void {\n        this.selectedSetting = setting;\n    }\n\n    exitAdmin(): void {\n        this.navCtrl.back({animated: false});\n    }\n}\n","module.exports = \"p {\\n  margin-top: 0;\\n  padding-left: unset;\\n  padding-inline-start: calc(var(--ion-safe-area-left, 0px) + 20px); }\\n\\n.hrsdomain--label {\\n  flex: auto !important;\\n  max-width: unset !important;\\n  pointer-events: all !important; }\\n\\nion-buttons {\\n  justify-content: flex-end;\\n  padding: 1em 0 1em 1em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9hZG1pbi9kb21haW4tc2V0dGluZ3MvZG9tYWluLXNldHRpbmdzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixpRUFBaUUsRUFBQTs7QUFHckU7RUFDSSxxQkFBcUI7RUFDckIsMkJBQTJCO0VBQzNCLDhCQUE4QixFQUFBOztBQUdsQztFQUNJLHlCQUF5QjtFQUN6QixzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2RvbWFpbi1zZXR0aW5ncy9kb21haW4tc2V0dGluZ3MuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwIHtcbiAgICBtYXJnaW4tdG9wOiAwO1xuICAgIHBhZGRpbmctbGVmdDogdW5zZXQ7XG4gICAgcGFkZGluZy1pbmxpbmUtc3RhcnQ6IGNhbGModmFyKC0taW9uLXNhZmUtYXJlYS1sZWZ0LCAwcHgpICsgMjBweCk7XG59XG5cbi5ocnNkb21haW4tLWxhYmVsIHtcbiAgICBmbGV4OiBhdXRvICFpbXBvcnRhbnQ7XG4gICAgbWF4LXdpZHRoOiB1bnNldCAhaW1wb3J0YW50O1xuICAgIHBvaW50ZXItZXZlbnRzOiBhbGwgIWltcG9ydGFudDtcbn1cblxuaW9uLWJ1dHRvbnMge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG4gICAgcGFkZGluZzogMWVtIDAgMWVtIDFlbTtcbn1cbiJdfQ== */\"","import {Component} from '@angular/core';\nimport {Platform, ToastController} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {BuildUtility} from '@hrs/utility';\nimport {FirebaseNotifications, Settings, User} from '@clinician/providers';\nimport {GatewayApi, TokenService} from '@hrs/providers';\nimport {NGXLogger} from 'ngx-logger';\nimport {Storage} from '@ionic/storage';\n\n@Component({\n    selector: 'domain-settings',\n    templateUrl: './domain-settings.component.html',\n    styleUrls: ['./domain-settings.component.scss'],\n})\nexport class DomainSettingsComponent {\n    public domains: string[] = BuildUtility.domains.map((domain) => domain.domain);\n    public currentDomain: string;\n    public selected: string;\n    public hrsdomainText: string;\n\n    constructor(\n        private toastCtrl: ToastController,\n        private translate: TranslateService,\n        private user: User,\n        private gatewayApi: GatewayApi,\n        private settings: Settings,\n        private logger: NGXLogger,\n        private firebase: FirebaseNotifications,\n        private storage: Storage,\n        private platform: Platform,\n        private tokenService: TokenService\n    ) {\n        this.currentDomain = BuildUtility.getGatewayURL();\n        const currentDomainName = BuildUtility.getDomainName();\n        this.selected = currentDomainName;\n        if (currentDomainName === 'hrsdomain') {\n            this.hrsdomainText = this.currentDomain;\n        }\n    }\n\n    /**\n     * Radio button click handler.\n     *\n     * Only used for HRSDOMAIN because ion-input combined wth ion-label affects the label's listeners.\n     * Without this handler, the radio option will not be selected on click of the label.\n     */\n    public handleLabelClick(option: string): void {\n        this.selected = option;\n    }\n\n    public setDomain(): void | Error {\n        if (this.selected) {\n            const userSelection = this.selected === 'hrsdomain' ? this.hrsdomainText : this.selected;\n            BuildUtility.setDomain(userSelection).then((updatedDomain) => {\n                this.currentDomain = updatedDomain;\n                this.presentToast('ADMIN_DOMAIN_SETTINGS.CHANGE_SUCCESS', {domain: updatedDomain}).then(async () => {\n                    if (this.platform.is('android')) {\n                        this.firebase.setFirebaseAccount(BuildUtility.getDomainName() === 'prod' ? 'prod' : 'test')\n                            .catch((err) => this.logger.error(err));\n                    }\n                    await this.user.logout();\n                    // Need to manually update the url variables in GatewayApiService and TokenService because\n                    // they access the environment url only once when they are initialized,\n                    // unlike GatewayService which accesses the environment url each time an API request is created.\n                    this.gatewayApi.url = updatedDomain;\n                    this.tokenService.url = updatedDomain;\n                });\n            }).catch((err) => {\n                this.logger.error(err);\n                this.presentToast('ADMIN_DOMAIN_SETTINGS.BAD_DOMAIN');\n            });\n        } else {\n            this.presentToast('ADMIN_DOMAIN_SETTINGS.NO_SELECTION');\n        }\n    }\n\n    private async presentToast(msg: string, params?: {[key: string]: string}): Promise<void> {\n        let domainText = this.translate.instant(msg, params);\n        let toast = await this.toastCtrl.create({\n            header: domainText,\n            duration: 3000,\n            position: 'top'\n        });\n\n        return await toast.present();\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AuthGuard} from './auth.guard';\n\nconst routes: Routes = [\n    {path: '', redirectTo: 'patient-list', pathMatch: 'full'},\n    {path: 'welcome', loadChildren: './welcome/welcome.module#WelcomePageModule'},\n    {path: 'login', loadChildren: './login/login.module#LoginPageModule'},\n    {path: 'patient-list', canActivate: [AuthGuard], loadChildren: './patient-list/patient-list.module#PatientListPageModule'},\n    {path: 'patient-profile', loadChildren: './patient/patient-profile.module#PatientProfilePageModule'},\n    {path: 'add-patient', loadChildren: './add-patient/add-patient.module#AddPatientPageModule'},\n    {path: 'organizational-login', loadChildren: './organizational-login/organization-login.module#OrganizationalLoginPageModule'},\n    {path: 'admin', loadChildren: './admin/admin.module#AdminModule'}\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(routes)\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".c_app_menu--header {\\n  display: flex;\\n  height: 4em;\\n  position: sticky;\\n  align-items: center;\\n  width: 100%;\\n  z-index: 81;\\n  background-color: var(--white);\\n  box-shadow: var(--shadow-header); }\\n  .c_app_menu--header .c_app_menu--title {\\n    flex-basis: 63%;\\n    margin-left: auto;\\n    display: flex;\\n    place-content: center;\\n    position: relative;\\n    top: 0.4em;\\n    font-size: 1.1em;\\n    font-weight: 600; }\\n  .c_app_menu--header .c_app_menu--btn-close {\\n    position: relative;\\n    flex-basis: 18%;\\n    text-align: left;\\n    display: flex;\\n    align-items: center;\\n    justify-content: flex-end;\\n    font-size: 1.8em;\\n    right: 0.3em;\\n    height: 88%;\\n    top: 0.3em; }\\n  .c_app_menu--header .c_app_menu--btn-close .c_app_menu--btn-close-icon {\\n      content: url(/../assets/icon/baseline-close-24px.svg); }\\n  .c_app_menu--list > .item-block {\\n  margin-top: 9px; }\\n  .c_app_menu--list > .item-block .item-inner, .c_app_menu--list > .item-block:first-child, .c_app_menu--list > .item-block:last-child {\\n    border: none; }\\n  .c_app_menu--list > .item-block:last-child::before {\\n    border-bottom: none; }\\n  .c_app_menu--item {\\n  --border-color: transparent;\\n  --detail-icon-color: transparent; }\\n  .c_app_menu--item::after {\\n    --color-menu-item-border: rgba(0, 0, 0, 0.16);\\n    content: '';\\n    position: absolute;\\n    bottom: 0;\\n    left: 5%;\\n    width: 90%;\\n    border-bottom: 1px solid var(--color-menu-item-border); }\\n  .c_app_menu--item.item-md::before {\\n    left: 0;\\n    width: 100%; }\\n  .c_app_menu--item .c_app_menu--icon {\\n    vertical-align: text-bottom;\\n    margin-right: .4em; }\\n  .c_app_menu--item .c_app_menu--icon-add_patient {\\n      content: url(/assets/icon/baseline-person_add-24px.svg); }\\n  .c_app_menu--item .c_app_menu--icon-support {\\n      content: url(/assets/icon/baseline-phone_in_talk-24px.svg); }\\n  .c_app_menu--item .c_app_menu--icon-logout {\\n      content: url(/assets/icon/baseline-exit_to_app-24px.svg); }\\n  .app-version {\\n  position: absolute;\\n  bottom: 1em;\\n  left: 50%;\\n  transform: translateX(-50%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSxhQUFhO0VBQ2IsV0FBVztFQUNYLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFdBQVc7RUFDWCw4QkFBOEI7RUFDOUIsZ0NBQWdDLEVBQUE7RUFScEM7SUFXUSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixnQkFBZ0I7SUFDaEIsZ0JBQWdCLEVBQUE7RUFsQnhCO0lBc0JRLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osV0FBVztJQUNYLFVBQVUsRUFBQTtFQS9CbEI7TUFrQ1kscURBQXFELEVBQUE7RUFLakU7RUFFUSxlQUFlLEVBQUE7RUFGdkI7SUFNWSxZQUFZLEVBQUE7RUFOeEI7SUFVWSxtQkFBbUIsRUFBQTtFQUsvQjtFQUNJLDJCQUFlO0VBQ2YsZ0NBQW9CLEVBQUE7RUFGeEI7SUFJUSw2Q0FBeUI7SUFDekIsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsUUFBUTtJQUNSLFVBQVU7SUFDVixzREFBc0QsRUFBQTtFQVY5RDtJQWNRLE9BQU87SUFDUCxXQUFXLEVBQUE7RUFmbkI7SUFtQlEsMkJBQTJCO0lBQzNCLGtCQUFrQixFQUFBO0VBcEIxQjtNQXFCdUIsdURBQXVELEVBQUE7RUFyQjlFO01Bc0JtQiwwREFBMEQsRUFBQTtFQXRCN0U7TUF1QmtCLHdEQUF3RCxFQUFBO0VBSTFFO0VBQ0ksa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxTQUFTO0VBRVQsMkJBQTJCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcbi5jX2FwcF9tZW51LS1oZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgaGVpZ2h0OiA0ZW07XG4gICAgcG9zaXRpb246IHN0aWNreTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHotaW5kZXg6IDgxO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXdoaXRlKTtcbiAgICBib3gtc2hhZG93OiB2YXIoLS1zaGFkb3ctaGVhZGVyKTtcblxuICAgIC5jX2FwcF9tZW51LS10aXRsZSB7XG4gICAgICAgIGZsZXgtYmFzaXM6IDYzJTtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICB0b3A6IDAuNGVtO1xuICAgICAgICBmb250LXNpemU6IDEuMWVtO1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgIH1cblxuICAgIC5jX2FwcF9tZW51LS1idG4tY2xvc2Uge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGZsZXgtYmFzaXM6IDE4JTtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgICAgICAgZm9udC1zaXplOiAxLjhlbTtcbiAgICAgICAgcmlnaHQ6IDAuM2VtO1xuICAgICAgICBoZWlnaHQ6IDg4JTtcbiAgICAgICAgdG9wOiAwLjNlbTtcblxuICAgICAgICAuY19hcHBfbWVudS0tYnRuLWNsb3NlLWljb24ge1xuICAgICAgICAgICAgY29udGVudDogdXJsKC8uLi9hc3NldHMvaWNvbi9iYXNlbGluZS1jbG9zZS0yNHB4LnN2Zyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi5jX2FwcF9tZW51LS1saXN0IHtcbiAgICAmID4gLml0ZW0tYmxvY2sge1xuICAgICAgICBtYXJnaW4tdG9wOiA5cHg7XG4gICAgICAgICYgLml0ZW0taW5uZXIsXG4gICAgICAgICY6Zmlyc3QtY2hpbGQsXG4gICAgICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIH1cblxuICAgICAgICAmOmxhc3QtY2hpbGQ6OmJlZm9yZSB7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4uY19hcHBfbWVudS0taXRlbSB7XG4gICAgLS1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIC0tZGV0YWlsLWljb24tY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICY6OmFmdGVyIHtcbiAgICAgICAgLS1jb2xvci1tZW51LWl0ZW0tYm9yZGVyOiByZ2JhKDAsIDAsIDAsIDAuMTYpO1xuICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBib3R0b206IDA7XG4gICAgICAgIGxlZnQ6IDUlO1xuICAgICAgICB3aWR0aDogOTAlO1xuICAgICAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgdmFyKC0tY29sb3ItbWVudS1pdGVtLWJvcmRlcik7XG4gICAgfVxuXG4gICAgJi5pdGVtLW1kOjpiZWZvcmUge1xuICAgICAgICBsZWZ0OiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICB9XG5cbiAgICAuY19hcHBfbWVudS0taWNvbiB7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAuNGVtO1xuICAgICAgICAmLWFkZF9wYXRpZW50IHtjb250ZW50OiB1cmwoL2Fzc2V0cy9pY29uL2Jhc2VsaW5lLXBlcnNvbl9hZGQtMjRweC5zdmcpOyB9XG4gICAgICAgICYtc3VwcG9ydCB7Y29udGVudDogdXJsKC9hc3NldHMvaWNvbi9iYXNlbGluZS1waG9uZV9pbl90YWxrLTI0cHguc3ZnKTsgfVxuICAgICAgICAmLWxvZ291dCB7Y29udGVudDogdXJsKC9hc3NldHMvaWNvbi9iYXNlbGluZS1leGl0X3RvX2FwcC0yNHB4LnN2Zyk7IH1cbiAgICB9XG59XG5cbi5hcHAtdmVyc2lvbiB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGJvdHRvbTogMWVtO1xuICAgIGxlZnQ6IDUwJTtcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7XG59XG5cbiJdfQ== */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AppVersion} from '@ionic-native/app-version/ngx';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {CallNumber} from '@ionic-native/call-number/ngx';\nimport {DeeplinkMatch, Deeplinks} from '@ionic-native/deeplinks/ngx';\nimport {\n    ActionSheetController,\n    AlertController,\n    Config,\n    ModalController,\n    Platform,\n    ToastController,\n    MenuController,\n    LoadingController\n} from '@ionic/angular';\nimport {SplashScreen} from '@ionic-native/splash-screen/ngx';\nimport {StatusBar} from '@ionic-native/status-bar/ngx';\nimport * as moment from 'moment';\nimport {AndroidPermissionResponse, AndroidPermissions} from '@ionic-native/android-permissions/ngx';\nimport {Device} from '@ionic-native/device/ngx';\nimport {environment} from '@app/env';\nimport {\n    AdminService,\n    CommunicationService,\n    Environment,\n    FirebaseNotifications,\n    ModalService,\n    PatientProfileService,\n    UserAgentProvider\n} from '@clinician/providers';\nimport {Settings} from './services/settings/settings';\nimport {User} from './services/user/user';\nimport {GatewayService} from '@hrs/gateway';\nimport {BroadcastService, GatewayApi, GlobalSettingsService, HRSLoggerMonitor, TokenService} from '@hrs/providers';\nimport {VideoPage} from './communication/video/video.page';\nimport {VoicePage} from './communication/voice/voice.page';\nimport {ChatPage} from './communication/chat/chat.page';\nimport {Router} from '@angular/router';\nimport {OrganizationalLoginPage} from './organizational-login/organizational-login.page';\nimport {Storage} from '@ionic/storage';\nimport {BuildUtility} from '@hrs/utility';\nimport {firstValueFrom, lastValueFrom} from 'rxjs';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n    styleUrls: ['app.component.scss'],\n    providers: [Deeplinks]\n})\nexport class AppComponent {\n    messageData: any;\n    modalState: any;\n    versionNumber: string;\n    showButton: any = false; // will not show the log out button by default\n    isDisplaying: boolean = false; // toast for forced log outs\n    deviceVersion: any;\n\n    constructor(\n        private adminService: AdminService,\n        private appVersion: AppVersion,\n        private platform: Platform,\n        private splashScreen: SplashScreen,\n        private statusBar: StatusBar,\n        private translate: TranslateService,\n        private config: Config,\n        private callNumber: CallNumber,\n        private alertCtrl: AlertController,\n        private toastCtrl: ToastController,\n        private actionSheetCtrl: ActionSheetController,\n        private logger: NGXLogger,\n        private loggerMonitor: HRSLoggerMonitor,\n        private firebase: FirebaseNotifications,\n        private gatewayApi: GatewayApi,\n        private gateway: GatewayService,\n        private globalSettingsService: GlobalSettingsService,\n        private broadCastService: BroadcastService,\n        private modalService: ModalService,\n        private user: User,\n        private settings: Settings,\n        private storage: Storage,\n        private tokenService: TokenService,\n        private userAgentProvider: UserAgentProvider,\n        private Environment: Environment,\n        private communication: CommunicationService,\n        public modalCtrl: ModalController,\n        public menuCtrl: MenuController,\n        private profile: PatientProfileService,\n        private deeplinks: Deeplinks,\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private loadingCtrl: LoadingController,\n        private androidPermissions: AndroidPermissions,\n        public device: Device,\n        private translateService: TranslateService\n    ) {\n        this.init();\n    }\n\n    private init(): void {\n        // establish our hook into ngx-logger\n        this.loggerMonitor.init('ccmobile');\n        this.logger.registerMonitor(this.loggerMonitor);\n        this.initDeviceVersion();\n        this.platform.ready().then(() => {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            this.statusBar.styleDefault();\n            this.userAgentProvider.getUserAgentInfo();\n            this.logger.log(environment.current_environment);\n            this.menuCtrl.swipeGesture(false);\n            this.settings.load().finally(async () => {\n                // Check for any domain changes because app will lose those changes on force kill.\n                await this.storage.get('updatedDomain').then((updatedDomain) => {\n                    if (updatedDomain) {\n                        BuildUtility.setDomain(updatedDomain).then((domain) => {\n                            this.gatewayApi.url = domain;\n                            this.tokenService.url = domain;\n                        }).catch((err) => {\n                            this.logger.error(err);\n                        });\n                    }\n                });\n\n                if (this.platform.is('cordova')) {\n                    const initialSetupComplete = this.settings.getValue('initialSetupComplete');\n                    if (!initialSetupComplete) {\n                        if (this.platform.is('ios')) {\n                            this.firebase.askIOSPushPermission();\n                        } else {\n                            this.firebase.createAndroidNotificationChannel();\n                        }\n                        this.settings.setValue('initialSetupComplete', true);\n                    }\n\n                    // Firebase account switching is currently an Android only feature.\n                    // Due to the stricter nature of Firebase iOS configuration, we are only able to reconfigure Firebase Apps at runtime for Android.\n                    // Check the platform for Android and configure Firebase to the account associated with the current domain.\n                    if (this.platform.is('android')) {\n                        this.firebase.setFirebaseAccount(BuildUtility.getDomainName() === 'prod' ? 'prod' : 'test').catch((err) => {\n                            this.logger.error(err);\n                        });\n                    }\n                }\n                this.populateVersionNumber();\n                this.initTranslate().then(() => {\n                    if (this.platform.is('android')) {\n                        this.checkAndroidPermission(['android.permission.POST_NOTIFICATIONS'],\n                            'ANDROID_NOTIFICATION_PERMISSION_TITLE', 'ANDROID_NOTIFICATION_PERMISSION_MESSAGE').then(() => { // we want permissions to be asked for one after the other\n                            this.checkAndroidPermission(['android.permission.READ_MEDIA_IMAGES', 'android.permission.READ_MEDIA_VIDEO', 'android.permission.READ_MEDIA_AUDIO'],\n                                'ANDROID_MEDIA_PERMISSION_TITLE', 'ANDROID_MEDIA_PERMISSION_MESSAGE');\n                        });\n                    }\n                });\n                this.user.loadFromSettings(this.settings);\n                const token = this.settings.getValue('token');\n                const refresh = this.settings.getValue('refresh');\n                if (token) {\n                    this.tokenService.storeTokens({\n                        attributes: {\n                            token: token,\n                            refresh: refresh\n                        }\n                    });\n                }\n                // persist login if tokens are still valid\n                if (this.user.isLoggedIn()) {\n                    this.globalSettingsService.loadGlobalSettings();\n                    // patient list\n                    this.Environment.getEnvironment().subscribe(\n                        {\n                            next: (res) => {\n                                this.logger.log('Successfully loaded Environment.');\n                            },\n                            error: (err) => {\n                                this.logger.error('Failed to get Environment.');\n                                this.user.logout();\n                            }\n                        }\n                    );\n                    if (this.platform.is('cordova')) {\n                        this.firebase.initializeFirebase(this.user.data.hrsid);\n                    }\n\n                    this.router.navigateByUrl('/patient-list');\n                } else {\n                    // login\n                    this.router.navigateByUrl('/welcome');\n                }\n\n                if (this.platform.is('cordova')) {\n                    // iOS related source code has been completely removed from cordova-plugin-splashscreen\n                    // since it has been integrated into the core of the Cordova-iOS 6.x platform.\n                    if (this.platform.is('ios')) {\n                        (navigator as any).splashscreen.hide();\n                    } else {\n                        this.splashScreen.hide();\n                    }\n                }\n                this.initReceiveNotificationsListener();\n            });\n            this.routeWithDeeplinks();\n            this.broadCastService.interceptorLogout.asObservable().subscribe((values) => {\n                this.logger.debug('Observing Interceptor', values);\n                if (values) {\n                    this.loadingCtrl.getTop().then((element) => {\n                        if (element) {\n                            this.loadingCtrl.dismiss();\n                        }\n                    });\n                    if (!this.isDisplaying && values.error) {\n                        this.isDisplaying = true;\n                        setTimeout(() => {\n                            this.isDisplaying = false;\n                        }, 2000);\n                        if (values.error.message === 'LOGIN_ERROR.CONCURRENT_SESSIONS') {\n                            this.forcedLogoutToast(values.error.message);\n                        } else {\n                            this.forcedLogoutToast();\n                        }\n                    }\n                    this.user.logout();\n                }\n            });\n        });\n    }\n\n    public async initTranslate(): Promise<any> {\n        // English will be used as a fallback when a translation isn't found in the current language\n        this.translate.setDefaultLang('en');\n        // Apply the user's preferred language\n        let language = this.translate.getBrowserLang() || 'en';\n        await firstValueFrom(this.translate.use(language));\n        moment.locale(language);\n        this.gatewayApi.language = language;\n        this.gateway.language = language;\n        this.settings.setValue('language', language).then(() => {\n            this.translate.get(['BACK_BUTTON_TEXT']).subscribe((values) => {\n                this.config.set('backButtonText', values.BACK_BUTTON_TEXT);\n            });\n        });\n    }\n\n    /**\n    * Display reason for getting a forced 401 or 302 error from the api-interceptor\n    * @param message\n    */\n    async forcedLogoutToast(message?: string): Promise<any> {\n        let text = message || 'LOGIN_FORCED_LOGOUT';\n        let toast = await this.toastCtrl.create({\n            message: this.translate.instant(text),\n            cssClass: 'toast-fail',\n            position: 'top',\n            buttons: [\n                {\n                    text: this.translate.instant('CLOSE_BUTTON'),\n                    role: 'cancel'\n                }\n            ]\n        });\n        return await toast.present();\n    }\n\n    /**\n    * Whenever the user is logged out, redirects to LoginPage\n    */\n\n    logoutClicked() {\n        this.logger.debug('Logout User');\n        this.user.logout();\n        this.menuCtrl.close().then(()=> {\n            this.logger.error('Closed menu ', this.menuCtrl.isOpen());\n        });\n    }\n\n    public openAdmin(): void {\n        this.adminService.openAdmin();\n    }\n\n    /**\n    * Start support call\n    */\n    initSupportCall() {\n        let supportNumber = '908-280-0420';\n\n        if (Environment.supportNumber) {\n            supportNumber = Environment.supportNumber;\n        }\n\n        if (this.platform.is('ios')) {\n            // ios shows a prompt natively\n            this.dialPhoneNumber(supportNumber);\n        } else {\n            // android: add a prompt to prevent accidental calling\n            this.showSupportCallPrompt(supportNumber);\n        }\n        this.menuCtrl.close();\n    }\n\n    /**\n    * Display prompt to start call on android\n    * @param supportNumber\n    */\n    async showSupportCallPrompt(supportNumber) {\n        let supportAlert = await this.alertCtrl.create({\n            header: supportNumber,\n            buttons: [\n                {\n                    text: this.translate.instant('CANCEL_BUTTON'),\n                    handler: () => {}\n                },\n                {\n                    text: this.translate.instant('DIAL'),\n                    handler: () => {\n                        this.dialPhoneNumber(supportNumber);\n                    }\n                }\n            ]\n        });\n        return await supportAlert.present();\n    }\n\n    /**\n    * Dial support\n    * @param phoneNumber\n    */\n    dialPhoneNumber(phoneNumber) {\n        this.callNumber.callNumber(phoneNumber, true)\n            .then((res) => {\n                // maybe we should log when people call support\n            })\n            .catch((err) => {\n                this.dialPhoneNumberFailToast();\n            });\n    }\n\n    async dialPhoneNumberFailToast() {\n        let dialSuccessToast = await this.toastCtrl.create({\n            message: this.translate.instant('CALL_FAIL'),\n            duration: 3000,\n            position: 'top'\n        });\n        return await dialSuccessToast.present();\n    }\n\n    initReceiveNotificationsListener(): void {\n        this.communication.incomingVideoCall$.subscribe((data: any) => {\n            let answer = !!data.wasTapped;\n            this.handleIncomingVideoCall(data, answer);\n        });\n\n        this.communication.incomingVoiceCall$.subscribe((data: any) => {\n            let answer = !!data.wasTapped;\n            this.handleIncomingVoiceCall(data, answer);\n        });\n\n        this.communication.newChatMessage$.subscribe((data: any) => {\n            this.handleNewMessage(data);\n        });\n    }\n\n    async handleIncomingVideoCall(data, answer?: boolean): Promise<any> {\n        let caller = JSON.parse(data.caller);\n        const patientName = await lastValueFrom(this.profile.getPatientProfile(caller.hrsid)).then((response) => {\n            return response['name'].first + ' ' + response['name'].last;\n        }, () => {\n            return 'Patient';\n        });\n        this.communication.videoParticipantId = data.participantId;\n        this.communication.updateParticipantStatus('received');\n\n        // if no call is in the foreground, open incoming call\n        if (!this.modalService.getModalStatus('VideoPage') && !this.modalService.getModalStatus('VoicePage')) {\n            let modal = await this.modalCtrl.create({\n                component: VideoPage,\n                componentProps: {\n                    callData: {\n                        patientName: patientName,\n                        patientHrsId: caller.hrsid,\n                        callId: data.callId,\n                        answer: answer,\n                        participantId: data.participantId\n                    }\n                }});\n            return modal.present();\n        } else {\n            // if a call is in the foreground, show alert and offer option to switch calls\n            this.actionSheetCtrl.create(<any>{\n                title: this.translate.instant('NEW_INCOMING_CALL') + patientName,\n                buttons: [\n                    {\n                        text: this.translate.instant('END_CURRENT_CALL'),\n                        handler: () => {\n                            // close current video call modal and open new incoming call\n                            this.communication.exitVideoCallEnterNew.next();\n                            this.communication.exitVoiceCallEnterNew.next();\n                            this.handleIncomingVideoCall(data, true);\n                        }},\n                    {\n                        text: this.translate.instant('IGNORE'),\n                        handler: () => {\n                            this.logger.log('call ignored');\n                            // tell comms service we hung up\n                            this.communication.updateParticipantStatus('declined');\n                        }\n                    }]}).then((actionSheet) => {\n                actionSheet.present();\n            });\n        }\n    }\n\n    async handleIncomingVoiceCall(data, answer: boolean) {\n        let caller = JSON.parse(data.caller);\n        const patientName = await lastValueFrom(this.profile.getPatientProfile(caller.hrsid)).then((response) => {\n            return response['name'].first + ' ' + response['name'].last;\n        }, () => {\n            return 'Patient';\n        });\n        if (!this.modalService.getModalStatus('VideoPage') && !this.modalService.getModalStatus('VoicePage')) {\n            const modal = await this.modalCtrl.create({\n                component: VoicePage,\n                componentProps: {\n                    callData: {\n                        patientName: patientName,\n                        patientHrsId: caller.hrsid,\n                        callId: data.callid,\n                        answer: answer\n                    }\n                }\n            });\n            modal.present();\n        } else {\n            this.actionSheetCtrl.create(<any>{\n                title: this.translate.instant('NEW_INCOMING_CALL') + patientName,\n                buttons: [\n                    {\n                        text: this.translate.instant('END_CURRENT_CALL'),\n                        handler: () => {\n                            // close current call modal and open new incoming call\n                            this.communication.exitVideoCallEnterNew.next();\n                            this.communication.exitVoiceCallEnterNew.next();\n                            this.handleIncomingVoiceCall(data, true);\n                        }\n                    },\n                    {\n                        text: this.translate.instant('IGNORE'),\n                        handler: () => {\n                            this.logger.log('Voice call ignored');\n                        }\n                    }]\n            }).then((actionSheet) => {\n                actionSheet.present();\n            });\n        }\n    }\n\n    async handleNewMessage(data) {\n        let caller = JSON.parse(data.caller);\n        let modalState = this.modalService.getModalStatus('ChatMessagesModalPage');\n        if (data.wasTapped) {\n            // new message notification was tapped while the app was in the background\n            const modal = await this.modalCtrl.create({\n                component: ChatPage,\n                componentProps: {patient: caller}\n            });\n            return await modal.present();\n        } else {\n            if (!modalState || !modalState.status || caller.hrsid !== modalState.patientHrsid) {\n                this.messageData = data;\n                if (modalState) {\n                    this.modalState = modalState;\n                }\n                const patientName = await lastValueFrom(this.profile.getPatientProfile(caller.hrsid))\n                    .then((response) => {\n                        return response['name'].first + ' ' + response['name'].last;\n                    }, () => {\n                        return 'Patient';\n                    });\n                let toast = await this.toastCtrl.create({\n                    message: this.translate.instant('NEW_CHAT_MESSAGE') + patientName,\n                    duration: 10000,\n                    position: 'top',\n                    buttons: [{\n                        text: this.translate.instant('VIEW'),\n                        handler: () => this.messageClose('close'),\n                    }]\n                });\n\n                return await toast.present();\n            } else {\n                // patient chat modal is open, update with incoming message\n                this.communication.getChatNewMessage.next(data);\n            }\n        }\n    }\n\n    messageClose(data): void {\n        if (data == 'close') {\n            if (this.modalState && this.modalState.status) {\n                this.communication.exitChatOpenNew.next();\n            }\n            this.messageData.wasTapped = true;\n            this.handleNewMessage(this.messageData);\n        }\n    }\n\n    populateVersionNumber() {\n        if (this.platform.is('cordova')) {\n            this.appVersion.getVersionNumber().then((versionNumber) => {\n                if (versionNumber) {\n                    this.versionNumber = 'v' + versionNumber;\n                }\n            });\n        } else {\n            this.versionNumber = 'v1.0.0';\n        }\n    }\n\n    openAddPatientPage() {\n        this.closeMenu().then(() => this.router.navigateByUrl('/add-patient'));\n    }\n\n    async closeMenu(): Promise<void> {\n        if (await this.menuCtrl.isOpen()) {\n            await this.menuCtrl.close();\n            await this.menuCtrl.enable(false);\n        }\n    }\n\n    routeWithDeeplinks(): void {\n        // deeplinks allow navigation from the system browser to our app\n        // To test via iOS Safari enter ccmobile:// in the browser and it will launch the app if it is installed\n        this.deeplinks.route({\n            '/login': OrganizationalLoginPage\n        }).subscribe(\n            {\n                next: (match: DeeplinkMatch) => {\n                    if (match.$link.path === '/login') {\n                        this.user.logout().then(() => {\n                            let login = () => {\n                                if (match.$args && match.$args.auth) {\n                                    let authData = JSON.parse(atob(match.$args.auth));\n                                    // This tells the OrganizationalLoginPage that we are logging in so that it can show the spinner if it isn't already\n                                    this.user.loggingInSSOSubject.next();\n                                    // Login now. OrganizationalLoginPage is listening to the loggedInSubject to know when this is successful\n                                    let loginSubscription = this.user.loginWithData(authData).subscribe(() => {\n                                        loginSubscription.unsubscribe();\n                                    });\n                                }\n                            };\n                            if (this.activatedRoute.component !== OrganizationalLoginPage) {\n                                // If we were on the welcome page then move forward to OrganizationalLoginPage\n                                this.router.navigateByUrl('/organizational-login').then(() => {\n                                    login();\n                                });\n                            } else {\n                                login();\n                            }\n                        });\n                    }\n                },\n                error: (nomatch) => {\n                    // nomatch.$link - the full link data\n                    this.logger.error(`Got a deeplink that didn't match`, JSON.stringify(nomatch));\n                }\n            }\n        );\n    }\n\n    close() {\n        this.menuCtrl.close();\n    }\n\n    public checkAndroidPermission(permission: string[], permissionAlertTitle: string, permissionMessage: string): Promise<void> {\n        return new Promise(async (resolve, reject) => {\n            if (this.getDeviceVersion() > 12) {\n                let requiredPermissions: string[] = permission;\n                let missingPermissions: string[] = [];\n                for (const requiredPermission of requiredPermissions) {\n                    await this.checkForPermission(requiredPermission).then((result) => {\n                        if (!result.hasPermission) {\n                            missingPermissions.push(requiredPermission);\n                        }\n                    });\n                }\n                if (missingPermissions && missingPermissions.length > 0) {\n                    {\n                        let alert = await this.alertCtrl.create({\n                            header: this.translateService.instant(permissionAlertTitle),\n                            message: this.translateService.instant(permissionMessage),\n                            buttons: [\n                                {\n                                    text: this.translateService.instant('CLOSE_BUTTON'),\n                                    handler: () => {\n                                        this.androidPermissions.requestPermissions(missingPermissions).then(\n                                            (result) => {\n                                                resolve();\n                                            }, (error) => {\n                                                this.logger.error('Error requesting permission from Android' + error);\n                                                reject(new Error(error));\n                                            }\n                                        );\n                                    }\n                                }\n                            ]\n                        });\n                        return await alert.present();\n                    }\n                } else {\n                    resolve();\n                }\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    public async checkForPermission(permission: string): Promise<AndroidPermissionResponse> {\n        return this.androidPermissions.checkPermission(permission);\n    }\n\n    /**\n * @returns Quering the device version from Device plugin if it is not initialized yet\n */\n    public getDeviceVersion(): number {\n        if (!this.deviceVersion) {\n            this.initDeviceVersion();\n        }\n        return this.deviceVersion;\n    }\n\n    /**\n     * Initializing the device version\n     */\n    private initDeviceVersion() {\n        let devVersion = Number(this.device.version);\n        if (!Number.isNaN(devVersion)) {\n            this.deviceVersion = devVersion;\n        }\n    }\n}\n","// Angular / Ionic\nimport {HttpClientModule, HttpClient, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport {ErrorHandler, NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {RouteReuseStrategy} from '@angular/router';\nimport {IonicModule, IonicRouteStrategy} from '@ionic/angular';\nimport {IonicStorageModule, Storage} from '@ionic/storage';\n\n// Native Plugins\nimport {AppVersion} from '@ionic-native/app-version/ngx';\nimport {Camera} from '@ionic-native/camera/ngx';\nimport {CallNumber} from '@ionic-native/call-number/ngx';\nimport {Deeplinks} from '@ionic-native/deeplinks/ngx';\nimport {Device} from '@ionic-native/device/ngx';\nimport {Dialogs} from '@ionic-native/dialogs/ngx';\nimport {InAppBrowser} from '@ionic-native/in-app-browser/ngx';\nimport {NativeRingtones} from '@ionic-native/native-ringtones/ngx';\nimport {ScreenOrientation} from '@ionic-native/screen-orientation/ngx';\nimport {SplashScreen} from '@ionic-native/splash-screen/ngx';\nimport {StatusBar} from '@ionic-native/status-bar/ngx';\nimport {AndroidPermissions} from '@ionic-native/android-permissions/ngx';\n\n// NGX\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {LoggerModule, NgxLoggerLevel, NGXMapperService, NGXLoggerHttpService, NGXLogger} from 'ngx-logger';\nimport {CookieService} from 'ngx-cookie-service';\nimport {Zoom} from '@ionic-native/zoom/ngx';\n\n// Services / Components\nimport {\n    FirebaseNotifications, CommunicationService, ModalService, Environment, SurveyDetailsService, DataExchangeService, ReviewedStatusService\n} from '@clinician/providers';\nimport {User} from './services/user/user';\nimport {Settings} from './services/settings/settings';\nimport {GatewayResourceService, GatewayService} from '@hrs/gateway';\nimport {GatewayApi, ApiInterceptor, BroadcastService, GlobalSettingsService, HRSLoggerMonitor, TokenService} from '@hrs/providers';\n\n// Modals\nimport {AddDevicePageModule} from './patient/device/add-device.module';\nimport {ResetMetricsPageModule} from './patient/reset-metrics/reset-metrics.module';\nimport {PatientStatusChangeModule} from './patient/patient-status-change/patient-status-change.module';\n\n// Communication\nimport {ChatPageModule} from './communication/chat/chat.module';\nimport {VideoPageModule} from './communication/video/video.module';\nimport {VoicePageModule} from './communication/voice/voice.module';\nimport {AuthGuard} from './auth.guard';\n\n// Pipes\nimport {PipesModule} from '../pipes/pipes.module';\n\n// App and Components\nimport {AdminModule} from './admin/admin.module';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {CarePlanPageModule} from './patient/careplan/careplan.module';\nimport {EditCareplanModule} from './patient/careplan/edit-careplan/edit-careplan.module';\n\n// The translate loader needs to know where to load i18n files\n// in Ionic's static asset pipeline.\nexport function createTranslateLoader(http: HttpClient) {\n    return new TranslateHttpLoader(http, '../assets/i18n/', '.json');\n}\n\nexport function provideSettings(storage: Storage, user: User) {\n    /**\n     * The Settings provider takes a set of default settings for your app.\n     *\n     * You can add new settings options at any time. Once the settings are saved,\n     * these values will not overwrite the saved values (this can be done manually if desired).\n     */\n    return new Settings(storage, {\n        option1: true,\n        option2: 'Ionitron J. Framework',\n        option3: '3',\n        option4: 'Hello',\n    });\n}\n\n@NgModule({\n    declarations: [AppComponent],\n    entryComponents: [],\n    exports: [],\n    schemas: [NO_ERRORS_SCHEMA],\n    imports: [\n        AdminModule,\n        BrowserModule,\n        IonicModule.forRoot({mode: 'ios'}),\n        AppRoutingModule,\n        HttpClientModule,\n        PipesModule,\n        ResetMetricsPageModule,\n        AddDevicePageModule,\n        CarePlanPageModule,\n        EditCareplanModule,\n        ChatPageModule,\n        VideoPageModule,\n        VoicePageModule,\n        PatientStatusChangeModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient]\n            }\n        }),\n        IonicStorageModule.forRoot(),\n        LoggerModule.forRoot({serverLoggingUrl: '/api/logs', level: NgxLoggerLevel.DEBUG, serverLogLevel: NgxLoggerLevel.OFF})\n    ],\n    providers: [\n        AppVersion,\n        AndroidPermissions,\n        AuthGuard,\n        BroadcastService,\n        Camera,\n        CallNumber,\n        CommunicationService,\n        CookieService,\n        DataExchangeService,\n        Deeplinks,\n        Device,\n        Dialogs,\n        Environment,\n        FirebaseNotifications,\n        GatewayApi,\n        GatewayResourceService,\n        GatewayService,\n        GlobalSettingsService,\n        HRSLoggerMonitor,\n        InAppBrowser,\n        ModalService,\n        NativeRingtones,\n        NGXLogger,\n        NGXMapperService,\n        NGXLoggerHttpService,\n        ReviewedStatusService,\n        ScreenOrientation,\n        StatusBar,\n        SplashScreen,\n        SurveyDetailsService,\n        TokenService,\n        User,\n        Zoom,\n        {provide: Settings, useFactory: provideSettings, deps: [Storage]},\n        {\n            provide: HTTP_INTERCEPTORS,\n            useFactory: function(broadcastService: BroadcastService, logger: NGXLogger, tokenService: TokenService) {\n                return new ApiInterceptor(broadcastService, logger, tokenService);\n            },\n            multi: true,\n            deps: [BroadcastService, NGXLogger, TokenService]\n        },\n        {provide: RouteReuseStrategy, useClass: IonicRouteStrategy},\n        {provide: ErrorHandler, useClass: ErrorHandler},\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import {User} from './services/user/user';\nimport {CanActivate} from '@angular/router';\n\nexport class AuthGuard implements CanActivate {\n    constructor(\n        public user: User\n    ) {}\n\n    canActivate(): boolean {\n        return this.user.isLoggedIn();\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ChatPage} from './chat.page';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: ChatPage\n            }\n        ]),\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n    declarations: [ChatPage],\n    providers: [FormsModule]\n})\nexport class ChatPageModule {}\n","import {Component, ViewChild, ChangeDetectorRef} from '@angular/core';\nimport {ModalController, NavParams, LoadingController, IonContent, AlertController} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {CommunicationService, ModalService} from '@clinician/providers';\nimport {timer, Subscription} from 'rxjs';\nimport {switchMap} from 'rxjs/operators';\nimport {FormControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {ConvertString} from '@hrs/utility';\nimport moment from 'moment';\n\n@Component({\n    selector: 'page-chat',\n    templateUrl: 'chat.page.html',\n})\nexport class ChatPage {\n    patient: any;\n    messages: any[];\n    data: FormGroup;\n    textMessagesLoaded;\n    messageStatus: string;\n    poll: any;\n    polling: boolean;\n    getMessagesEvent: Subscription;\n    openNewChatEvent: Subscription;\n    @ViewChild(IonContent, null) content: IonContent;\n\n    constructor(\n        private communication: CommunicationService,\n        private loadingCtrl: LoadingController,\n        private translateService: TranslateService,\n        private navParams: NavParams,\n        private modalCtrl: ModalController,\n        private logger: NGXLogger,\n        private modalService: ModalService,\n        private alertCtrl: AlertController,\n        private ref: ChangeDetectorRef,\n        private formBuilder: FormBuilder,\n    ) {\n        this.patient = this.navParams.get('patient');\n        this.modalService.setModalStatus('ChatMessagesModalPage', true, this.patient.hrsid);\n    }\n\n    ngOnInit() {\n        this.getTextMessages(this.patient.hrsid);\n\n        this.getMessagesEvent = this.communication.getChatNewMessage$.subscribe(() => {\n            this.getTextMessages(this.patient.hrsid, true);\n        });\n\n        this.openNewChatEvent = this.communication.exitChatOpenNew$.subscribe(() => {\n            this.dismiss();\n        });\n\n        this.data = this.formBuilder.group({\n            message: new FormControl('', null)\n        });\n    }\n\n    ionViewDidLeave() {\n        this.stopPolling();\n        this.getMessagesEvent.unsubscribe();\n        this.openNewChatEvent.unsubscribe();\n    }\n\n    /**\n     * Gets all of the messages for a particular patient\n     * Incoming represents a new chat received via firebase notification while the chat modal is open\n     * we don't want to show a loader if a new message is received while the modal is open\n     */\n    async getTextMessages(hrsid: string, incoming?: boolean) {\n        if (!incoming) {\n            this.textMessagesLoaded = await this.loadingCtrl.create({\n                message: this.translateService.instant('LOADING'),\n            });\n            await this.textMessagesLoaded.present();\n        }\n\n        this.communication.getTextMessages(hrsid).subscribe(\n            {\n                next: (res: any) => {\n                    this.messages = res;\n                    this.ref.detectChanges();\n                    if (!incoming) {\n                        this.pollGetTexts();\n                    }\n                },\n                error: (err: any) => {\n                    this.handleGetTextMessagesError(err, hrsid, incoming);\n                },\n                complete: () => {\n                    if (!incoming) {\n                        this.dismissLoadingAlert();\n                    }\n                }\n            }\n        );\n    }\n\n    dismissLoadingAlert(): void {\n        this.loadingCtrl.dismiss();\n    }\n\n    async handleGetTextMessagesError(err: any, hrsid: string, incoming?: boolean) {\n        this.logger.error('Error: ', err);\n        let alert = await this.alertCtrl.create({\n            header: this.translateService.instant('ERROR_TITLE'),\n            message: this.translateService.instant('GET_MESSAGE_ERROR'),\n            buttons: [\n                {\n                    text: this.translateService.instant('CANCEL_BUTTON'),\n                    role: 'cancel',\n                    handler: () => {}\n                },\n                {\n                    text: this.translateService.instant('RETRY_BUTTON'),\n                    handler: () => {\n                        this.getTextMessages(hrsid, incoming);\n                    }\n                }\n            ]\n        });\n        return await alert.present();\n    }\n\n    /**\n     * Poll get chat endpoint\n     * If multiple clinicians are chatting with the same patient we want to be sure that everyone receives all new messages\n     * this is a temporary fix until we can update firebase to notify all clinicians of any new message to a chat thread\n     * We will hit the get chat endpoint every thirty seconds anytime the a chat is in view\n     */\n    pollGetTexts() {\n        const poll = timer(30000, 30000).pipe(\n            switchMap(() => this.communication.getTextMessages(this.patient.hrsid)));\n        this.poll = poll\n            .subscribe((res: any) => {\n                this.polling = true;\n                const messages = res;\n                if (this.messages.length < messages.length) {\n                    // the new response has more messages than the previous response\n                    // add to dom and scroll to bottom\n                    this.polling = false;\n                    this.messages = messages;\n                    this.callScrollFunction();\n                }\n            });\n    }\n\n    stopPolling() {\n        if (this.poll) {\n            this.poll.unsubscribe();\n        }\n    }\n\n    /**\n     * Convert time and date into a consistent format\n     */\n    convertTimeAndDate(timestamp: string): string {\n        return moment.unix(parseInt(timestamp) / 1000).format('MM/DD/YYYY h:mm:ss A');\n    }\n\n    /**\n     * Scrolls to bottom of chat message list\n     */\n\n    callScrollFunction() {\n        this.content.scrollToBottom(0);\n    }\n\n    /**\n     * Posts the new message written by the clinician to the patient\n     */\n    sendTextMessage() {\n        // curly chars are replaced to prevent erroring out when saving to DB\n        let text = ConvertString.replaceCurlyChars(this.data.value.message.trim());\n        let message = {text: text, type: 'clinician', name: 'You', messageStatus: this.translateService.instant('SENDING'), id: new Date()};\n        this.messages.push(message);\n        this.callScrollFunction();\n        this.communication.sendTextMessage(text, this.patient.hrsid).subscribe(\n            {\n                next: (res) => {\n                    message.messageStatus = this.translateService.instant('SENT');\n                    let updatedMessage = {\n                        message: ''\n                    };\n                    this.data.setValue(updatedMessage, {emitEvent: true});\n                },\n                error: (err) => {\n                    this.logger.error('Error: ', err);\n                    message.messageStatus = this.translateService.instant('FAILED_TO_SEND');\n                    this.handleSendTextMessageError(message);\n                }\n            }\n        );\n    }\n\n    async handleSendTextMessageError(message) {\n        let alert = await this.alertCtrl.create({\n            header: this.translateService.instant('ERROR_TITLE'),\n            message: this.translateService.instant('SEND_MESSAGE_ERROR'),\n            buttons: [\n                {\n                    text: this.translateService.instant('CANCEL_BUTTON'),\n                    role: 'cancel'\n                },\n                {\n                    text: this.translateService.instant('RETRY_BUTTON'),\n                    handler: () => {\n                        this.messages = this.messages.filter((msg) => {\n                            return (JSON.stringify(msg) !== JSON.stringify(message));\n                        });\n                        this.sendTextMessage();\n                    },\n                },\n            ]\n        });\n        return await alert.present();\n    }\n\n    dismiss() {\n        this.modalCtrl.dismiss();\n        this.modalService.setModalStatus('ChatMessagesModalPage', false, null);\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {VideoPage} from './video.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: VideoPage\n            }\n        ]),\n        TranslateModule.forChild(),\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n    declarations: [VideoPage]\n})\nexport class VideoPageModule {}\n","import {Component, ViewChild, ChangeDetectorRef} from '@angular/core';\nimport {ModalController, NavParams, LoadingController, Platform, IonContent, AlertController} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {CommunicationService, ModalService, ZoomService} from '@clinician/providers';\nimport {ScreenOrientation} from '@ionic-native/screen-orientation/ngx';\nimport {Dialogs} from '@ionic-native/dialogs/ngx';\nimport {User} from '../../services/user/user';\nimport {faStethoscope} from '@fortawesome/free-solid-svg-icons';\nimport {Subscription} from 'rxjs';\nimport {VideoNotification} from '../../services/firebase/firebase-data.interface';\n\ndeclare var OT:any;\ndeclare var cordova: any;\n\nexport interface VideoCallLeftData {\n    type: string,\n    action: string,\n    callId: string,\n    id: string\n}\n\n@Component({\n    selector: 'page-video',\n    templateUrl: 'video.page.html',\n})\nexport class VideoPage {\n    session: any;\n    publisher: any;\n    apiKey: any;\n    backAction: any;\n    sessionId: string;\n    token: string;\n    userHrsId: string;\n    callId: string;\n    calling: boolean;\n    callStatus: string;\n    modalClosing: boolean;\n    stethoscopeActive: boolean = false;\n    callData: any;\n    private callerLeft: Subscription;\n    faStethoscope = faStethoscope;\n    endCallEvent: Subscription;\n    exitCallEnterNewEvent: Subscription;\n    private callTimeout: ReturnType<typeof setTimeout>;\n    @ViewChild(IonContent, null) content: IonContent;\n\n    constructor(\n        private platform: Platform,\n        private communication: CommunicationService,\n        private alertCtrl: AlertController,\n        private loadingCtrl: LoadingController,\n        private translateService: TranslateService,\n        private navParams: NavParams,\n        private modalCtrl: ModalController,\n        private logger: NGXLogger,\n        private ref: ChangeDetectorRef,\n        private screenOrientation: ScreenOrientation,\n        private dialogs: Dialogs,\n        private modalService: ModalService,\n        private user: User,\n        private zoomService: ZoomService\n    ) {\n        this.callData = this.navParams.get('callData');\n        this.callId = this.callData.callId || '';\n        this.modalService.setModalStatus('VideoCallModalPage', true);\n        this.userHrsId = this.user.data.hrsid;\n    }\n\n    ngOnInit() {\n        if (this.platform.is('cordova')) {\n            // lock screen in portrait mode\n            this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.PORTRAIT);\n        }\n        // prevent back button from closing modal without ending call\n        this.backAction = this.platform.backButton.subscribeWithPriority((1), () => {\n            this.dismiss();\n        });\n        // if the modal is initialized with a callId we are receiving a call, begin ringing\n        if (this.callId) {\n            this.callStatus = 'RINGING';\n        }\n        // if left another call to answer, answer once the modal is open\n        if (this.callData.answer) {\n            this.initializeVideoCall();\n        }\n\n        this.initNotificationListeners();\n    }\n\n    ngOnDestroy() {\n        // removes hardware back button handler\n        if (this.backAction) this.backAction.unsubscribe();\n        if (this.endCallEvent) this.endCallEvent.unsubscribe();\n        if (this.exitCallEnterNewEvent) this.exitCallEnterNewEvent.unsubscribe();\n        if (this.callerLeft) this.callerLeft.unsubscribe();\n        if (this.platform.is('cordova')) {\n            this.screenOrientation.unlock();\n        }\n        if (this.callTimeout) {\n            clearTimeout(this.callTimeout);\n        }\n    }\n\n    /**\n     * Subscribe to Comms Service Event notifications\n     */\n    initNotificationListeners() {\n        // the person we we're calling missed or ignored the call\n        this.endCallEvent = this.communication.endVideoCall$.subscribe((data: VideoNotification) => {\n            this.onCallMissed(data);\n        });\n        // End current call and join incoming call\n        // event listener, call in progress, call pending in background -- should be able to remove once native ui is implemented\n        this.exitCallEnterNewEvent = this.communication.exitVideoCallEnterNew$.subscribe(() => {\n            this.endCall();\n        });\n\n        this.callerLeft = this.communication.callerLeft$.subscribe((data: VideoCallLeftData) => {\n            // if the call has not been answered and the callid's match, end the call - called when the call is still ringing but the caller has hung up\n            if (!this.calling && this.callData.callId === data.callId) {\n                this.endCall(true, true, true);\n            }\n        });\n    }\n\n    // callback for event listened, call missed or call ignored\n    private onCallMissed(data: VideoNotification): void {\n        if (\n            data &&\n            data.callId == this.callId &&\n            (data.action === 'call_unanswered' || data.action === 'call_declined')\n        ) {\n            const displayStatuses = {\n                'call_unanswered': 'CALL_UNAVAILABLE',\n                'call_declined': 'CALL_DECLINED'\n            };\n            if (this.session) {\n                // Allow user to retry call if OpenTok.\n                this.allowRetryCall(displayStatuses[data.action]);\n            } else {\n                // Because the modal closes after we enter Zoom's call UI, just end the call.\n                this.endCall();\n            }\n        }\n    }\n\n    // callback for event listener, call in progress, call pending in background -- should be able to remove once native ui is implemented\n    onNewCommunication() {\n        this.endCall();\n    }\n\n    // callback for event listener, user has left meeting successfully\n    private onCallLeft(): void {\n        this.communication.updateParticipantStatus('left');\n        cordova.plugins.Zoom.removeMeetingLeaveListener();\n    }\n\n    /**\n     * Toggle button between start call/ end call\n     */\n    toggleCall() {\n        if (this.calling) {\n            this.endCall();\n        } else {\n            if (!this.modalClosing) {\n                this.initializeVideoCall();\n            }\n        }\n    }\n\n    /**\n     * Create a call or accept an incoming call\n     */\n    initializeVideoCall() {\n        this.calling = true;\n        this.callStatus = 'CONNECTING';\n        this.ref.detectChanges();\n\n        if (this.callId) {\n            // incoming call\n            this.getVideoCallToken();\n        } else {\n            // starting a call\n            this.getCallId();\n        }\n    }\n\n    /**\n     * Creates a call by requesting a callId\n     * on success starts a request for the call Token\n     */\n    getCallId() {\n        // tablet rings on success\n        this.communication.getVideoCallId(this.userHrsId, this.callData.patientHrsId)\n            .subscribe(\n                {\n                    next: (res: any) => {\n                        this.callId = res.data.id;\n                        this.getVideoCallToken();\n                    },\n                    error: (err) => {\n                        this.calling = false;\n                        this.logger.error('Error: ', err);\n                        this.errorPlacingCall();\n                    }\n                }\n            );\n    }\n\n    /**\n     *  Requests token, api key, and sessionId for entering the call room\n     */\n    getVideoCallToken() {\n        this.communication.getVideoCallToken(this.callId, this.userHrsId)\n            .subscribe(\n                {\n                    next: (res: any) => {\n                        const jwtToken = res.data.value;\n                        this.apiKey = res.data.projectKey;\n                        this.sessionId = res.data.sessionId;\n                        this.token = res.data.value;\n                        this.callData = {...this.callData, ...res.data};\n                        this.communication.videoParticipantId = res.data.id;\n                        if (res.data.provider === 'zoom') {\n                            // initialize jwt token before joining the call as per new sdk changes\n                            this.zoomService.initWithJWTToken(jwtToken).then((message) => {\n                                this.logger.log('Successfully initialized zoom, now will join meeting');\n                                this.enterZoomVideoCall(this.callData.sessionId, this.callData.password);\n                            }).catch((err) => {\n                                this.logger.error('Zoom is still not initialized thus not placing the call' + err);\n                            });\n                        } else {\n                            this.enterOpenTokVideoCall();\n                        }\n                    },\n                    error: (err) => {\n                        this.calling = false;\n                        this.logger.error('Error: ', err);\n                        this.errorPlacingCall();\n                    }\n                }\n            );\n    }\n\n    private enterZoomVideoCall(meetingNumber: string, password: string): void {\n        // Join meeting once the jwt token gets initialized\n        // Note the display name is just in english because we don't know what language the recipient would want to see it in\n        this.zoomService.joinMeeting(meetingNumber, password, 'Clinician').then(\n            () => {\n                cordova.plugins.Zoom.addMeetingLeaveListener(this.onCallLeft.bind(this), this);\n                this.communication.updateParticipantStatus('active');\n                // Zoom call was joined successfully. Since the Zoom call opens a separate page, when you end the call\n                // there's no reason to still have our video modal still open behind it and have an extra step to close that,\n                // so go ahead and close it here.\n                setTimeout(() => {\n                    this.callStatus = 'CALL_ENDED';\n                    this.calling = false;\n                    this.dismiss();\n                }, 3000);\n            },\n            () => {\n                this.callStatus = 'CALL_FAILED';\n            }\n        );\n    }\n\n    /**\n     * Enter call and wait for answer event\n     * Also handles end call event after the person we are calling accepts\n     */\n    enterOpenTokVideoCall() {\n        if (!this.session) {\n            this.resetPublisherFeed();\n            this.session = OT.initSession(this.apiKey, this.sessionId);\n            this.publisher = OT.initPublisher('videoCallPublisher');\n            this.initOpenTokEventListeners();\n            this.connectOpenTokSession();\n            this.timeoutCall();\n        } else {\n            this.logger.log('Not initializing session again as Open tok session already exists');\n        }\n    }\n\n    private resetPublisherFeed(): void {\n        // When an active call is destroyed, the publisher div is stripped of all classes and stylings.\n        // We need to manually add our custom styles.\n        const publisherFeed = document.getElementById('videoCallPublisher');\n        publisherFeed.classList.add('c_call--view-caller');\n        publisherFeed.style.width = '25vw';\n        publisherFeed.style.height = '20vh';\n        publisherFeed.style.position = 'absolute';\n        publisherFeed.style.bottom = '13vh';\n        publisherFeed.style.right = '1em';\n        publisherFeed.style.zIndex = '1000';\n        publisherFeed.style.pointerEvents = 'none';\n    }\n\n    private timeoutCall(): void {\n        // JIR-9499: Match CC2 functionality that ends the outgoing call attempt after 90s.\n        this.callTimeout = setTimeout(() => {\n            this.communication.getVideoCallStatus(this.callId).subscribe(\n                {\n                    next: (res) => {\n                        const status = res.data.status;\n                        const displayStatuses = {\n                            'missed': 'CALL_UNAVAILABLE',\n                            'declined': 'CALL_DECLINED',\n                            'ready': 'CALL_UNAVAILABLE'\n                        };\n                        // Keep modal up and update UI with new call status and option to retry call.\n                        if (displayStatuses[status]) {\n                            this.allowRetryCall(displayStatuses[status]);\n                        }\n                    },\n                    error: (err) => {\n                        this.logger.error(err);\n                        // End call and dismiss the modal if status can not be verified.\n                        if (this.session) { // OT\n                            this.endCall();\n                        }\n                    }\n                }\n            );\n        }, 90 * 1000);\n    }\n\n    /**\n     * End call and update modal to show Unavailable or Declined status and Retry button.\n     */\n    private allowRetryCall(status: string): void {\n        if (this.session) { // OT\n            this.endCall(false, false);\n            OT.updateViews();\n        }\n        this.callStatus = status;\n        this.modalClosing = false;\n        this.ref.detectChanges();\n    }\n\n    initOpenTokEventListeners() {\n        this.session.on({\n            streamCreated: (event) => {\n                // callee answered\n                this.callStatus = 'CALL_CONNECTED';\n                this.ref.detectChanges();\n                // displays callees stream\n                this.session.subscribe(event.stream, 'videoCallSubscriber', {width: '100%', height: '81vh'});\n                OT.updateViews();\n            },\n            streamDestroyed: (event) => {\n                // the person the user is calling hung up\n                // only happens when the call was answered\n                this.endCall();\n                this.logger.log(`Stream ${event.stream.name} ended because ${event.reason}`);\n                OT.updateViews();\n            },\n            sessionConnected: (event) => {\n                this.session.publish(this.publisher);\n                this.communication.updateParticipantStatus('active');\n            }\n        });\n    }\n\n    connectOpenTokSession() {\n        this.session.connect(this.token, (error) => {\n            if (error) {\n                this.logger.error('Error connecting opentok session', error);\n            }\n        });\n    }\n\n    /**\n     * End call and clean up\n     */\n    private endCall(dismiss: boolean = true, updateStatus: boolean = true, callerLeft: boolean = false): void {\n        this.calling = false;\n        this.callId = null;\n        if (this.session) {\n            // end connected calls\n            if (updateStatus) {\n                this.callStatus = 'CALL_ENDED';\n            }\n            this.session.disconnect();\n            this.session = null;\n            this.publisher = null;\n            this.callId = null;\n            this.apiKey = null;\n            this.sessionId = null;\n            this.token = null;\n            this.callData = {\n                patientHrsId: this.callData.patientHrsId,\n                patientName: this.callData.patientName\n            };\n            this.communication.updateParticipantStatus('left');\n            this.communication.videoParticipantId = null;\n        }\n        this.ref.detectChanges();\n\n        if (dismiss) {\n            // disable the call button so we don't accidentally start a new call with the modal closed\n            this.modalClosing = true;\n            this.dismiss(callerLeft);\n        }\n    }\n\n    /**\n     * Dismiss modal\n     * prompt user first in the case that they are already on a call\n     */\n    private dismiss(callerLeft: boolean = false): void {\n        if (this.calling) {\n            // user tried to close the modal during a call\n            this.showCloseModalPrompt();\n        } else if (this.callStatus === 'RINGING' && !callerLeft) {\n            // user exited modal while incoming call was ringing\n            this.callStatus = 'CALL_DECLINED';\n            this.communication.updateParticipantStatus('declined');\n        } else {\n            // call has ended close modal\n            this.modalClosing = true;\n            this.modalService.setModalStatus('VideoCallModalPage', false);\n\n            this.modalCtrl.dismiss();\n        }\n    }\n\n    /**\n     * Show alert if call fails\n     */\n    async errorPlacingCall() {\n        this.callStatus = 'CALL_FAILED';\n        let alert = await this.alertCtrl.create({\n            header: this.translateService.instant('ERROR_TITLE'),\n            message: this.translateService.instant('VIDEO_CALL_ERROR'),\n            buttons: [\n                {\n                    text: this.translateService.instant('CANCEL_BUTTON'),\n                    role: 'cancel',\n                    handler: () => {}\n                },\n                {\n                    text: this.translateService.instant('RETRY_BUTTON'),\n                    handler: () => {\n                        this.initializeVideoCall();\n                    }\n                }\n            ]\n        });\n        return await alert.present();\n    }\n\n    /**\n     * Prompt user whether to end call and exit modal or continue call\n     */\n    showCloseModalPrompt() {\n        // native dialog bc ionic alert would not display over video\n        this.dialogs.confirm(\n            this.translateService.instant('END_CALL_MESSAGE'),\n            this.translateService.instant('END_CALL_TITLE'),\n            [\n                this.translateService.instant('END_CALL'),\n                this.translateService.instant('CONTINUE')\n            ]\n        ).then((e: any)=>{\n            // if e is 1 the user clicked End Call\n            // e refers to the selections index in the buttonLabels array\n            // this index in this case starts at 1\n            if (e && e === 1) {\n                this.endCall();\n            }\n        });\n    }\n\n    toggleStethoscope() {\n        this.stethoscopeActive = !this.stethoscopeActive;\n        this.ref.detectChanges();\n        if (this.stethoscopeActive && this.session) {\n            this.session.signal(\n                {\n                    type: 'stethoscope',\n                    data: 'on',\n                },\n                (error) => {\n                    if (error) {\n                        this.logger.error('signal error (' + error.code + '): ' + error.message);\n                    } else {\n                        this.logger.log('signal sent.');\n                    }\n                }\n            );\n        } else {\n            this.session.signal(\n                {\n                    type: 'stethoscope',\n                    data: 'off',\n                },\n                (error) => {\n                    if (error) {\n                        this.logger.error('signal error (' + error.code + '): ' + error.message);\n                    } else {\n                        this.logger.log('signal sent.');\n                    }\n                }\n            );\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {VoicePage} from './voice.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: VoicePage\n            }\n        ]),\n        TranslateModule.forChild()\n    ],\n    declarations: [VoicePage]\n})\nexport class VoicePageModule {}\n","import {Component, ViewChild, ChangeDetectorRef} from '@angular/core';\nimport {ModalController, NavParams, Platform, IonContent, AlertController} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {CommunicationService, ModalService} from '@clinician/providers';\nimport {ScreenOrientation} from '@ionic-native/screen-orientation/ngx';\nimport {Subscription} from 'rxjs';\nimport {Dialogs} from '@ionic-native/dialogs/ngx';\n\ndeclare var Twilio: any;\n\nexport interface VoiceCallLeftData {\n    hrsid: string,\n    callid: string\n}\n\n@Component({\n    selector: 'page-voice',\n    templateUrl: 'voice.page.html',\n})\nexport class VoicePage {\n    backAction: any;\n    calling: boolean = false;\n    callStatus: string;\n    patientGender: string;\n    riskClass: string;\n    callData: any;\n    modalClosing: boolean;\n    endCallEvent: Subscription;\n    exitCallEnterNewEvent: Subscription;\n    private callerLeft: Subscription;\n\n    @ViewChild(IonContent, null) content: IonContent;\n\n    constructor(\n        private platform: Platform,\n        private communication: CommunicationService,\n        private translateService: TranslateService,\n        private navParams: NavParams,\n        private modalCtrl: ModalController,\n        private logger: NGXLogger,\n        private screenOrientation: ScreenOrientation,\n        private alertCtrl: AlertController,\n        private modalService: ModalService,\n        private ref: ChangeDetectorRef,\n        private dialogs: Dialogs\n    ) {\n        this.callData = this.navParams.get('callData');\n        this.modalService.setModalStatus('VoicePage', true);\n    }\n\n    ngOnInit() {\n        if (this.platform.is('cordova')) {\n            this.screenOrientation.lock(this.screenOrientation.ORIENTATIONS.PORTRAIT);\n        }\n        // add handler so modal isn't closed accidentally during a call by the hardware back button\n        this.backAction = this.platform.backButton.subscribeWithPriority((1), () => {\n            this.dismiss();\n        });\n        // incoming call, show ring status\n        if (this.callData.callId) {\n            this.callStatus = 'RINGING';\n        }\n        // tapped with app in background\n        if (this.callData.answer) {\n            this.initializeVoiceCall();\n        }\n\n        this.initNotificationListeners();\n    }\n\n    ngOnDestroy() {\n        if (this.callerLeft) this.callerLeft.unsubscribe();\n    }\n\n    ionViewDidLeave() {\n        // removes hardware back button handler\n        this.backAction.unsubscribe();\n        // unsubscribe from listeners\n        this.endCallEvent.unsubscribe();\n        this.exitCallEnterNewEvent.unsubscribe();\n\n        if (this.platform.is('cordova')) {\n            this.screenOrientation.unlock();\n        }\n    }\n\n    initNotificationListeners() {\n        // the person we we're calling missed or ignored the call\n        this.endCallEvent = this.communication.endVoiceCall$.subscribe((data: any) => {\n            if (\n                data &&\n                (data.action === 'call_unanswered' || data.action === 'call_declined')\n            ) {\n                this.endCall();\n            }\n        });\n\n        this.callerLeft = this.communication.callerLeft$.subscribe((data: VoiceCallLeftData) => {\n            // if the call has not been answered and the callid's match, end the call - called when the call is still ringing but the caller has hung up\n            if (!this.calling && data.callid === this.callData.callId) {\n                this.endCall();\n            }\n        });\n        // End current call and join incoming call\n        this.exitCallEnterNewEvent = this.communication.exitVoiceCallEnterNew$.subscribe(() => {\n            this.endCall();\n        });\n    }\n\n    /**\n     *  Toggle button from place call to end call\n     */\n\n    toggleCall() {\n        if (this.calling) {\n            this.endCall();\n        } else {\n            if (!this.modalClosing) {\n                this.initializeVoiceCall();\n            }\n        }\n    }\n\n    /**\n     * Start voice call with the patient\n     */\n    initializeVoiceCall() {\n        this.calling = true;\n        this.callStatus = 'CONNECTING';\n        this.ref.detectChanges();\n        if (this.callData.callId) {\n            this.acceptIncomingCall();\n        } else {\n            this.initializeOutgoingCall();\n        }\n    }\n\n    /**\n     * Begins outgoing call\n     */\n    initializeOutgoingCall() {\n        this.communication.initializeOutgoingVoiceCall(this.callData.patientHrsId).subscribe(\n            {\n                next: (res: any) => {\n                    this.callData = res;\n                    this.connectCall(res);\n                },\n                error: (err) => {\n                    this.calling = false;\n                    this.callStatus = 'CALL_FAILED';\n                    this.ref.detectChanges();\n                    this.logger.error('Error: ', err);\n                }\n            }\n        );\n    }\n\n    /**\n     * Get incoming voice call token\n     */\n    acceptIncomingCall() {\n        this.communication.acceptIncomingVoiceCall(this.callData.callId).subscribe(\n            {\n                next: (res: any) => {\n                    const data = {callid: this.callData.callId, access: res.access};\n                    this.connectCall(data);\n                },\n                error: (err) => {\n                    this.calling = false;\n                    this.callStatus = 'CALL_FAILED';\n                    this.ref.detectChanges();\n                    this.logger.error('Failed to obtain call token');\n                }\n            }\n        );\n    }\n\n    /**\n     * Connect to voice call\n     * @param data\n     */\n    connectCall(data) {\n        let _this = this;\n        this.callStatus = 'CALL_CONNECTED';\n\n        Twilio.TwilioVoiceClient.onClientInitialized(() => {\n            this.logger.log('Twilio client initialized.');\n            let twilioParams = {\n                'To': 'conference:' + data.callid,\n                'calltype': 'startcall',\n            };\n            Twilio.TwilioVoiceClient.call(data.access, twilioParams);\n        });\n\n        Twilio.TwilioVoiceClient.initialize(data.access);\n\n        // Handle Errors\n        Twilio.TwilioVoiceClient.onError((err) => {\n            setTimeout(() => {\n                _this.calling = false;\n                _this.callStatus = 'CALL_FAILED';\n                _this.logger.error('Failed (' + err.message + ')');\n                _this.ref.detectChanges();\n            }, 1000); // to ensure that error is not overwritten by disconnect\n        });\n\n        // Handle Call Connection\n        Twilio.TwilioVoiceClient.onCallDidConnect((call) => {\n            this.logger.log('Successfully established call');\n            setTimeout(() => {\n                _this.callStatus = 'CALL_CONNECTED';\n                _this.ref.detectChanges();\n            }, 0);\n        });\n\n        // Handle Call Disconnect\n        Twilio.TwilioVoiceClient.onCallDidDisconnect((call) => {\n            this.logger.log('Call Ended');\n            setTimeout(() => {\n                _this.calling = false;\n                _this.callStatus = 'CALL_ENDED';\n                _this.dismiss();\n                _this.ref.detectChanges();\n            }, 0);\n        });\n\n        Twilio.TwilioVoiceClient.onCallInviteReceived(() => {\n            setTimeout(() => {\n                _this.calling = true;\n                _this.callStatus = 'CALL_CONNECTED';\n                _this.ref.detectChanges();\n            }, 0);\n        });\n    }\n\n    /**\n     * Stop voice call with the patient\n     */\n    private endCall(): void {\n        if (this.platform.is('cordova')) {\n            Twilio.TwilioVoiceClient.disconnect();\n        }\n        this.callStatus = 'CALL_ENDED';\n        this.calling = false;\n        this.communication.voiceCallLeft(this.callData.callid);\n        this.dismiss();\n    }\n\n    async dismiss() {\n        if (this.calling) {\n            // native dialog bc ionic alert would not display over video\n            this.dialogs.confirm(\n                this.translateService.instant('END_CALL_MESSAGE'),\n                this.translateService.instant('END_CALL_TITLE'),\n                [\n                    this.translateService.instant('END_CALL'),\n                    this.translateService.instant('CONTINUE')\n                ]\n            ).then((e: any)=>{\n                // if e is 1 the user clicked End Call\n                // e refers to the selections index in the buttonLabels array\n                // this index in this case starts at 1\n                if (e && e === 1) {\n                    this.endCall();\n                }\n            });\n        } else {\n            this.modalService.setModalStatus('VoicePage', false);\n            this.modalClosing = true;\n            this.modalCtrl.dismiss();\n        }\n    }\n}\n","export enum ActivationStatus {\n     ActionDeactivate = 'deactivate',\n     ActionDischarge = 'discharge',\n     ActionUnDischarge = 'undischarge',\n     ActionReactivate = 'reactivate',\n     ActionResume = 'resume',\n     ActionPause = 'pause',\n\n     StatusActivated = 'activated',\n     StatusDeactivated = 'deactivated',\n     StatusPreActivated = 'preactivated',\n     StatusPaused = 'paused',\n     StatusDischarged = 'discharged'\n}\n","export enum AdminSettings {\n    WIFI = 'ADMIN_WIFI_SETTINGS',\n    KIOSK = 'ADMIN_KIOSK_SETTINGS',\n    DOMAIN = 'ADMIN_DOMAIN_SETTINGS',\n    FIREBASE = 'ADMIN_FIREBASE_SETTINGS',\n    DEVICE = 'ADMIN_DEVICE_SETTINGS',\n    REGISTRATION = 'ADMIN_REGISTRATION_SETTINGS',\n    SOFTWAREUPDATE = 'ADMIN_SOFTWAREUPDATE_SETTINGS',\n}\n","export {AdminSettings} from './admin-settings.enum';\nexport {ActivationStatus} from './activation-status.enum';\n","import {Component} from '@angular/core';\nimport {InAppBrowser} from '@ionic-native/in-app-browser/ngx';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ToastController} from '@ionic/angular';\nimport {NGXLogger} from 'ngx-logger';\nimport {User} from '../services/user/user';\nimport {environment} from '@app/env';\nimport {GatewayApi} from '@hrs/providers';\nimport {of, Subscription} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'page-organizational-login',\n    templateUrl: 'organizational-login.page.html',\n    providers: [NGXLogger]\n})\nexport class OrganizationalLoginPage {\n    email: string;\n    loggingIn: boolean;\n    private loggingInSSOSubscription: Subscription;\n    private loggedInSubscription: Subscription;\n    private emailLookupErrorString: string;\n    private loginErrorString: string;\n    private loginSuccessString: string;\n\n    constructor(\n        private browser: InAppBrowser,\n        private user: User,\n        private toastCtrl: ToastController,\n        private translateService: TranslateService,\n        private logger: NGXLogger,\n        private gatewayApi: GatewayApi,\n        private router: Router\n    ) {\n        this.translateService.get('ORGANIZATIONAL_LOGIN.EMAIL_LOOKUP_ERROR').subscribe((value) => {\n            this.emailLookupErrorString = value;\n        });\n        this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n            this.loginErrorString = value;\n        });\n        this.translateService.get('LOGIN_SUCCESS').subscribe((value) => {\n            this.loginSuccessString = value;\n        });\n\n        this.loggingInSSOSubscription = this.user.loggingInSSOSubject.subscribe(() => {\n            this.loggingIn = true;\n        });\n\n        this.loggedInSubscription = this.user.loginResultSubject.subscribe((success) => {\n            let toastMessage = this.loginSuccessString;\n            if (success) {\n                if (this.user.data.type !== 'clinician') {\n                    toastMessage = this.loginErrorString;\n                } else {\n                    this.router.navigateByUrl('');\n                }\n            } else {\n                toastMessage = this.loginErrorString;\n            }\n            this.loggingIn = false;\n            this.viewToast(toastMessage, 3000);\n        });\n    }\n\n    ngOnDestroy() {\n        this.loggingInSSOSubscription.unsubscribe();\n        this.loggedInSubscription.unsubscribe();\n    }\n\n    async viewToast(message: string, time: number): Promise<any> {\n        let toast = await this.toastCtrl.create({\n            message: message,\n            duration: time,\n            buttons: [\n                {\n                    text: this.translateService.instant('CLOSE_BUTTON'),\n                    role: 'cancel'\n                }\n            ],\n            position: 'top'\n        });\n        return await toast.present();\n    }\n\n    doLogin(): void {\n        this.loggingIn = true;\n\n        let showEmailLookupError = () => this.viewToast(this.emailLookupErrorString, 5000);\n\n        this.gatewayApi.post('samlemail', {data: {email: this.email}}).pipe(\n            tap((res: any) => {\n                if (res.data.environment) {\n                    // Open browser to the user organization's login page\n                    let url = `https://${res.data.environment}.auth.${environment.HRS_DOMAIN}/login?mobile=true`;\n                    this.browser.create(url, '_system', 'location=no,clearsessioncache=yes,clearcache=yes');\n                    // Set loggingIn to false because if they fail to login via their organization's login page in the browser,\n                    // they can try again from our app. We don't receive any event indicating that they failed there.\n                    this.loggingIn = false;\n                    // After they successfully login in the browser, it will redirect back to our app using the deeplink functionality\n                    // in app.component, login to our API, and inform this page to navigate to the MainPage via loggedInSubscription.\n                } else {\n                    showEmailLookupError();\n                    this.loggingIn = false;\n                }\n            }),\n            catchError(() => {\n                showEmailLookupError();\n                this.loggingIn = false;\n                return of({});\n            })\n        ).subscribe();\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule, ModalController} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {CareplanPage} from './careplan.page';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: CareplanPage\n            }\n        ]),\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n    declarations: [CareplanPage],\n})\nexport class CarePlanPageModule {}\n","module.exports = \".careplan-page .c_card .c_card--header {\\n  padding: 0.6em;\\n  font-size: 1.8em;\\n  height: 2.3em; }\\n\\n.careplan-page .c_card .c_card--content {\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  align-items: center;\\n  padding: .4em 1em 0 1em;\\n  margin-bottom: .5em; }\\n\\n.careplan-page .c_card .c_card--content .c_careplan--badge {\\n    margin: .2em;\\n    padding: .4em;\\n    font-size: 1em;\\n    font-weight: 600;\\n    border-radius: .2em;\\n    background-color: var(--color-accent); }\\n\\n.careplan-page .c_card .c_card--content .c_careplan--no_content {\\n    --border-color: transparent;\\n    margin: auto;\\n    height: 1.8em;\\n    font-weight: 400; }\\n\\n.careplan-page .c_card .c_button-center {\\n  --background: var(--color-primary);\\n  height: 2.5em;\\n  width: -moz-min-content;\\n  width: min-content;\\n  margin: 0.2em auto 1em auto;\\n  text-transform: capitalize; }\\n\\n.careplan-page .c_careplan--notice {\\n  display: flex;\\n  flex-direction: row;\\n  padding: .7em .4em;\\n  font-size: 1em; }\\n\\n.careplan-page .c_careplan--notice .c_careplan--notice_icon {\\n    content: url(/../../../assets/icon/icon-info.svg);\\n    font-size: 2em;\\n    height: .5em;\\n    margin-right: .2em; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9wYXRpZW50L2NhcmVwbGFuL2NhcmVwbGFuLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUdZLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUx6QjtFQVNZLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsZUFBZTtFQUNmLG1CQUFtQjtFQUNuQix1QkFBdUI7RUFDdkIsbUJBQW1CLEVBQUE7O0FBZC9CO0lBaUJnQixZQUFZO0lBQ1osYUFBYTtJQUNiLGNBQWM7SUFDZCxnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLHFDQUFxQyxFQUFBOztBQXRCckQ7SUEwQmdCLDJCQUFlO0lBQ2YsWUFBWTtJQUNaLGFBQWE7SUFDYixnQkFBZ0IsRUFBQTs7QUE3QmhDO0VBa0NZLGtDQUFhO0VBQ2IsYUFBYTtFQUNiLHVCQUFrQjtFQUFsQixrQkFBa0I7RUFDbEIsMkJBQTJCO0VBQzNCLDBCQUEwQixFQUFBOztBQXRDdEM7RUEyQ1EsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFFbEIsY0FBYyxFQUFBOztBQS9DdEI7SUFrRFksaURBQWlEO0lBQ2pELGNBQWM7SUFDZCxZQUFZO0lBQ1osa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYXRpZW50L2NhcmVwbGFuL2NhcmVwbGFuLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi8uLi90aGVtZS92YXJpYWJsZXNcIjtcblxuLmNhcmVwbGFuLXBhZ2Uge1xuICAgIC5jX2NhcmQge1xuICAgICAgICAuY19jYXJkLS1oZWFkZXIge1xuICAgICAgICAgICAgcGFkZGluZzogMC42ZW07XG4gICAgICAgICAgICBmb250LXNpemU6IDEuOGVtO1xuICAgICAgICAgICAgaGVpZ2h0OiAyLjNlbTtcbiAgICAgICAgfVxuXG4gICAgICAgIC5jX2NhcmQtLWNvbnRlbnQge1xuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICAgICAgcGFkZGluZzogLjRlbSAxZW0gMCAxZW07XG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAuNWVtO1xuXG4gICAgICAgICAgICAuY19jYXJlcGxhbi0tYmFkZ2Uge1xuICAgICAgICAgICAgICAgIG1hcmdpbjogLjJlbTtcbiAgICAgICAgICAgICAgICBwYWRkaW5nOiAuNGVtO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMWVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogLjJlbTtcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1hY2NlbnQpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAuY19jYXJlcGxhbi0tbm9fY29udGVudCB7XG4gICAgICAgICAgICAgICAgLS1ib3JkZXItY29sb3I6IHRyYW5zcGFyZW50O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEuOGVtO1xuICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAuY19idXR0b24tY2VudGVyIHtcbiAgICAgICAgICAgIC0tYmFja2dyb3VuZDogdmFyKC0tY29sb3ItcHJpbWFyeSk7XG4gICAgICAgICAgICBoZWlnaHQ6IDIuNWVtO1xuICAgICAgICAgICAgd2lkdGg6IG1pbi1jb250ZW50O1xuICAgICAgICAgICAgbWFyZ2luOiAwLjJlbSBhdXRvIDFlbSBhdXRvO1xuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAuY19jYXJlcGxhbi0tbm90aWNlIHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgcGFkZGluZzogLjdlbSAuNGVtO1xuICAgICAgICAvL2hlaWdodDogMy43ZW07IC8vIHRleHQgd2FzIGdldHRpbmcgY3V0IG9mZiBvbiBuYXJyb3dlciBwaG9uZXNcbiAgICAgICAgZm9udC1zaXplOiAxZW07XG5cbiAgICAgICAgLmNfY2FyZXBsYW4tLW5vdGljZV9pY29uIHtcbiAgICAgICAgICAgIGNvbnRlbnQ6IHVybCgvLi4vLi4vLi4vYXNzZXRzL2ljb24vaWNvbi1pbmZvLnN2Zyk7XG4gICAgICAgICAgICBmb250LXNpemU6IDJlbTtcbiAgICAgICAgICAgIGhlaWdodDogLjVlbTtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLjJlbTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ModalController, NavParams} from '@ionic/angular';\nimport {CareplanService} from '../../services/patientProfile/careplan/careplan.service';\nimport {ModalService} from '@clinician/providers';\nimport {EditCareplanPage} from './edit-careplan/edit-careplan.page';\nimport {NGXLogger} from 'ngx-logger';\n\n// observables\nimport {forkJoin, of} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {\n    CareplanToggle,\n    CareplanToggleMap,\n    MedicationReminderDetail,\n    ReminderTimeAndWindow,\n    TimeReminderDetail\n} from '../../../common/interfaces/careplan.interface';\nimport {Patient} from '@clinician/models';\nimport {EnvPresetsResponse} from '../../../common/interfaces/env-presets-response.interface';\nimport {GlobalModulesResponse} from '../../../common/interfaces/global-modules-response.interface';\n\n@Component({\n    selector: 'careplan-page',\n    templateUrl: './careplan.page.html',\n    styleUrls: ['./careplan.page.scss'],\n})\nexport class CareplanPage implements OnInit {\n    activeModules: string[];\n    activePresets: string[];\n    hasChanges: boolean;\n    modules: CareplanToggleMap = {};\n    patient: Patient;\n    presets: CareplanToggleMap = {};\n    activityReminders: ReminderTimeAndWindow = {};\n    surveyReminders: ReminderTimeAndWindow = {};\n    weightReminders: ReminderTimeAndWindow = {};\n    medicationReminders: MedicationReminderDetail[];\n\n    constructor(\n        private carePlan: CareplanService,\n        private logger: NGXLogger,\n        private modalCtrl: ModalController,\n        private modalService: ModalService,\n        private navParams: NavParams,\n    ) {\n        this.patient = this.navParams.get('patient');\n        this.modalService.setModalStatus('CarePlanPage', true, this.patient.hrsid);\n    }\n\n    ngOnInit() {\n        this.loadPatientCareplan();\n    }\n\n    loadPatientCareplan(): void {\n        forkJoin(\n            [this.carePlan.getEnvPresets().pipe(catchError((error) => of(error))),\n                this.carePlan.getPatientModules().pipe(catchError((error) => of(error))),\n                this.carePlan.getPatientModulesWithReminders(this.patient.hrsid).pipe(catchError((error) => of(error)))]\n        ).subscribe(([presetsRes, modulesRes, remindersRes]: any) => {\n            this.parseCareplanResponse(presetsRes.data, modulesRes.data);\n            this.populateActiveItems('presets');\n            this.getModulesWithReminders(remindersRes);\n        });\n    }\n\n    parseCareplanResponse(presetsResponse: EnvPresetsResponse[], modulesResponse: GlobalModulesResponse[]): void {\n        const careplanSettings = [...Object.values(presetsResponse), ...Object.values(modulesResponse)];\n        const patientPresets = this.navParams.get('activePresets');\n        const patientModules = this.navParams.get('activeModules');\n        careplanSettings.forEach((item) => {\n            let role = item['resourceType'];\n            let isModules = role === 'modules';\n            let settings = isModules ? patientModules : patientPresets;\n            let key = isModules ? item['attributes']['shortname'] : item['id'];\n            // Assign preset and module objects accounting for variations in naming schemes\n            this[role][key] = {\n                item: item,\n                selected: isModules ? settings.includes(key) : settings.includes(item['attributes'].name)\n            };\n        });\n    }\n\n    async openEditCarePlanModal(isModules: boolean) {\n        const careplanSettings = isModules ? this.modules : this.presets;\n        const keys = Object.keys(careplanSettings);\n        const modal = await this.modalCtrl.create({\n            component: EditCareplanPage,\n            componentProps: {careplanSettings, keys, isModules}\n        });\n\n        modal.onDidDismiss().then(({data}) => {\n            if (data === undefined) {\n                this.hasChanges = false;\n                this.logger.debug(data, 'data is undefined');\n            } else if (data.updatedItems.length) {\n                this.hasChanges = true;\n                this.updateCarePlanSettings(data.updatedItems, data.role);\n                const modules = this.assemblePayload();\n                this.carePlan.savePatientModuleInfo(this.patient.hrsid, modules, this.activityReminders, this.surveyReminders, this.weightReminders, this.medicationReminders).subscribe((res) => {\n                    if (res) {\n                        this.logger.log('Care Plan settings saved: ', res);\n                    } else {\n                        this.logger.warn('Unable to save Care Plan settings: ', res);\n                    }\n                });\n            } else {\n                this.hasChanges = false;\n                this.logger.info('No changes made');\n            }\n        });\n        await modal.present();\n    }\n\n    getModulesWithReminders(remindersRes: any): void {\n        const patientmodule = remindersRes['data'].patientmoduleinfo;\n\n        if (!patientmodule.activityreminders) {\n            this.activityReminders.window = '-';\n            this.activityReminders.time = 20;\n        } else {\n            this.activityReminders.window = '-';\n            this.activityReminders.time = 20;\n        }\n\n        if (!patientmodule.surveyreminders) {\n            this.surveyReminders.window = '60';\n            this.surveyReminders.time = 600;\n        } else {\n            this.surveyReminders.window = patientmodule.surveyreminders.window;\n            this.surveyReminders.time = this.calculateHoursAndMinutes(patientmodule.surveyreminders);\n        }\n\n        if (!patientmodule.weightreminders) {\n            this.weightReminders.window = '60';\n            this.weightReminders.time = 540;\n        } else {\n            this.weightReminders.window = patientmodule.weightreminders.window;\n            this.weightReminders.time = this.calculateHoursAndMinutes(patientmodule.weightreminders);\n        }\n\n        if (patientmodule.medicationreminders.length !== 0) {\n            this.medicationReminders = patientmodule.medicationreminders;\n            // The GET response sends \"times\" instead of time - annoyingly inconsistent\n            for (let i = 0; i < this.medicationReminders.length; i++) {\n                this.medicationReminders[i].time = this.medicationReminders[i]['times'];\n            }\n\n            for (let i = 0; i < this.medicationReminders.length; i++) {\n                if (this.medicationReminders[i].time !== 'PRN') {\n                    this.medicationReminders[i].time = this.calculateMedicationHoursAndMinutes(String(this.medicationReminders[i].time));\n                } else {\n                    this.medicationReminders[i].window = '30';\n                }\n            }\n        }\n    }\n\n    calculateHoursAndMinutes(reminderDetail: TimeReminderDetail): number | string {\n        if (reminderDetail.ampm === 'PM') {\n            return (parseInt(reminderDetail.hours) + 12) * 60 + parseInt(reminderDetail.minutes);\n        } else {\n            return parseInt(reminderDetail.hours) * 60 + parseInt(reminderDetail.minutes);\n        }\n    }\n\n    calculateMedicationHoursAndMinutes(reminderDetail: string): number {\n        // It doesn't return an \"AMPM\" key like the others do\n        let splitReminderTimes = reminderDetail.match(/[a-z]+|[^a-z]+/gi);\n        let splitHourAndMinutes = splitReminderTimes[0].split(/\\s*(?:\\bas\\b|:)\\s*/);\n        let hours = splitHourAndMinutes[0];\n        let minutes = splitHourAndMinutes[1];\n        if (splitReminderTimes[1] === 'PM') {\n            return (parseInt(hours) + 12) * 60 + parseInt(minutes);\n        } else {\n            return parseInt(hours) * 60 + parseInt(minutes);\n        }\n    }\n\n    updateCarePlanSettings(updatedItems: [string, CareplanToggle][], roleUpdated: string): void {\n        updatedItems.forEach((item: [string, CareplanToggle]) => {\n            this[roleUpdated][item[0]].selected = item[1].selected;\n            if (roleUpdated === 'presets' && item[1].selected) {\n                // Enable related modules for toggled presets\n                this.enablePresetModules(item);\n            }\n        });\n        this.populateActiveItems('presets');\n        this.populateActiveItems('modules');\n    }\n\n    enablePresetModules(preset: [string, CareplanToggle]): void {\n        const key = preset[0];\n        const status = preset[1].selected;\n        const relationships = this.presets[key].item['relationships'].modules.data;\n        if (status) {\n            relationships.forEach((rel) => {\n                let mod = Object.values(this.modules).filter((mod) => mod['item'].id === rel.id)[0];\n                this.modules[mod['item'].attributes['shortname']].selected = true;\n            });\n        }\n    }\n\n    populateActiveItems(role: string): string[] {\n        const items = [];\n        let capName = role.replace(/(p|m)/, (match) => match.toUpperCase());\n        for (let key in this[role]) {\n            if (this[role].hasOwnProperty(key)) {\n                let name = role === 'modules' ? this[role][key].item.attributes['shortname'] : this[role][key].item.id;\n                if (this[role][key].selected) items.push(name);\n            }\n        }\n        this['active' + capName] = items;\n        return items;\n    }\n\n    assemblePayload(): string[] {\n        const modules = this.activeModules.filter((module) => this.modules[module].selected);\n        const presets = this.activePresets.filter((preset) => this.presets[preset].selected);\n        return modules.concat(presets);\n    }\n\n    dismiss(): void {\n        this.modalCtrl.dismiss({modules: this.modules, presets: this.presets, hasChanges: this.hasChanges});\n        this.modalService.setModalStatus('CarePlanPage', false, null);\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {EditCareplanPage} from './edit-careplan.page';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: EditCareplanPage\n            }\n        ]),\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n    declarations: [EditCareplanPage],\n    providers: [FormsModule]\n})\nexport class EditCareplanModule {}\n","module.exports = \"/* ######################################################################################### %\\nOverride Ionic :host Background Color \\n% ######################################################################################### */\\n/* ######################################################################################### %\\nOverride Ionic :host opacity (Ionic 5+ only - wait to use until after the ionic 5 migration is complete)\\n% ######################################################################################### */\\n/* ######################################################################################### %\\nOverride Ionic :host Text color\\n% ######################################################################################### */\\n.edit-careplan-page .c_careplan--list {\\n  margin-bottom: 85px; }\\n.edit-careplan-page .c_careplan--list .c_careplan--toggle {\\n    --border-color: transparent;\\n    display: flex;\\n    align-items: center;\\n    height: 2.6em;\\n    width: 95%;\\n    margin: .6em;\\n    border-radius: 5em;\\n    border: 1px solid black; }\\n.edit-careplan-page .c_careplan--list .c_careplan--toggle .c_careplan--name {\\n      flex-basis: 80%; }\\n.edit-careplan-page .c_careplan--list .c_careplan--toggle .is-radio {\\n      --background: var(--white);\\n      --color: var(--color-careplan-selected);\\n      --background-checked: var(--white);\\n      --checkmark-color: var(--color-careplan-selected);\\n      --border-color-checked: transparent;\\n      --border-color: black;\\n      --border-width: 0.2em;\\n      height: 1.9em;\\n      width: 1.9em;\\n      margin-right: 0; }\\n.edit-careplan-page .c_careplan--list .c_careplan--toggle.is-selected {\\n      /* @include this mixin to an ion element to override :host shadow-DOM colors:\\n        .example-class {\\n            @include u_ion-override-host-background-color;\\n            --override-background-color: [ASSIGN DESIRED COLOR VALUE];\\n        }\\n    */\\n      --override-background-color: transparent;\\n      --background-activated: var(--override-background-color);\\n      --background-focused: var(--override-background-color);\\n      --background-hover: var(--override-background-color);\\n      --background: var(--override-background-color);\\n      background: var(--override-background-color);\\n      --override-background-color: var(--color-careplan-selected);\\n      border-color: transparent;\\n      border-width: 0; }\\n.edit-careplan-page .c_careplan--list .c_careplan--toggle.is-selected .c_careplan--name {\\n        color: var(--white);\\n        font-weight: 600; }\\n\\n/*# sourceMappingURL=data:application/json;base64, */\"","import {Component, OnInit} from '@angular/core';\nimport {AlertController, ModalController, NavParams, Platform} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ModalService} from '@hrs/providers';\nimport {CareplanItem, CareplanToggleMap} from '../../../../common/interfaces/careplan.interface';\n\n@Component({\n    selector: 'app-edit-careplan',\n    templateUrl: './edit-careplan.page.html',\n    styleUrls: ['./edit-careplan.page.scss'],\n})\nexport class EditCareplanPage implements OnInit {\n    isModules: boolean = false;\n    careplanToggleMap: CareplanToggleMap = {};\n    keys: string[];\n    originalSettings: string;\n    updatedItems: string[] = [];\n\n    constructor(\n        public modalCtrl: ModalController,\n        public modalService: ModalService,\n        public navParams: NavParams,\n        public platform: Platform,\n        public translateService: TranslateService,\n        private alertCtrl: AlertController\n    ) {\n        this.modalService.setModalStatus('EditCarePlanPage', true);\n    }\n\n    ngOnInit() {\n        this.originalSettings = JSON.stringify(this.navParams.get('careplanSettings'));\n        this.keys = this.navParams.get('keys');\n        this.isModules = this.navParams.get('isModules');\n        this.careplanToggleMap = JSON.parse(this.originalSettings);\n    }\n\n    toggleCareplanItem(item: CareplanItem): void {\n        const key = this.isModules ? item.attributes['shortname'] : item.id;\n        this.careplanToggleMap[key].selected = !this.careplanToggleMap[key].selected;\n        if (!this.updatedItems.includes(key)) this.updatedItems.push(key);\n        if (this.isCareplanEmpty() && this.isModules) this.alertCareplanStatus().then();\n    }\n\n    isCareplanEmpty(): boolean {\n        // When editing presets, clinicians should be able to save with no selections.\n        if (!this.isModules) return false;\n        return !Object.values(this.careplanToggleMap).some((item) => item.selected);\n    }\n\n    async alertCareplanStatus(): Promise<any> {\n        let alertMessage;\n        this.translateService.get('CAREPLAN_EMPTY_ALERT').subscribe((value) => alertMessage = value);\n        const alertOptions = {message: alertMessage};\n        let alert = await this.alertCtrl.create(alertOptions);\n        return await alert.present();\n    }\n\n    determineStateChange() {\n        const originalSettings = JSON.parse(this.originalSettings);\n        return Object.entries(this.careplanToggleMap).filter((item) => {\n            let key = item[0];\n            let status = item[1]['selected'];\n            if (originalSettings[key].selected !== status) return item;\n        });\n    }\n\n    cancel(): void {\n        // this.careplanSettings does exist, but is not explicitly defined. Instead it is created from NavParams;\n        // @ts-ignore\n        this.careplanSettings = JSON.parse(this.originalSettings);\n        this.modalCtrl.dismiss();\n        this.modalService.setModalStatus('EditCarePlanPage', false);\n    }\n\n    dismiss(): void {\n        const role = this.isModules ? 'modules' : 'presets';\n        const updatedItems = this.determineStateChange();\n        this.modalCtrl.dismiss({\n            updatedItems,\n            role\n        });\n        this.modalService.setModalStatus('EditCarePlanPage', false);\n    }\n}\n","import {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {AddDevicePage} from './add-device.page';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: 'add-device',\n                component: AddDevicePage\n            }\n        ]),\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        AddDevicePage\n    ],\n    schemas: [NO_ERRORS_SCHEMA],\n})\nexport class AddDevicePageModule {}\n","module.exports = \".noDevicesAvailable {\\n  text-align: center; }\\n\\n.c_add_device--select {\\n  --border-color: transparent;\\n  width: 100vw;\\n  border: 1px solid var(--color-accent); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9wYXRpZW50L2RldmljZS9hZGQtZGV2aWNlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGtCQUFrQixFQUFBOztBQUd0QjtFQUNJLDJCQUFlO0VBQ2YsWUFBWTtFQUNaLHFDQUFxQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC9kZXZpY2UvYWRkLWRldmljZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi4vLi4vLi4vdGhlbWUvdmFyaWFibGVzXCI7XG5cbi5ub0RldmljZXNBdmFpbGFibGUge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmNfYWRkX2RldmljZS0tc2VsZWN0IHtcbiAgICAtLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbG9yLWFjY2VudCk7XG59XG4iXX0= */\"","import {Component} from '@angular/core';\nimport {ModalController, NavParams, Platform, NavController} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {HttpClient, HttpEvent} from '@angular/common/http';\nimport {PatientDeviceService, PatientProfileService} from '@clinician/providers';\nimport {NavigationExtras} from '@angular/router';\n\n@Component({\n    selector: 'add-device',\n    templateUrl: 'add-device.page.html',\n    styleUrls: ['add-device.page.scss'],\n})\nexport class AddDevicePage {\n    availableDevices: any;\n    currentAssignedDevice: any;\n    selectedValue: any;\n    patientHrsid: string;\n    unassignedDevice: string;\n    hrsid: string;\n    deviceInformation: any;\n\n    constructor(\n        public platform: Platform,\n        public http: HttpClient,\n        public translateService: TranslateService,\n        public navParams: NavParams,\n        public modalCtrl: ModalController,\n        public patientDeviceService: PatientDeviceService,\n        public patientProfileService: PatientProfileService,\n        public navCtrl: NavController\n    ) {\n        let patient = [];\n        patient.push(this.navParams.data);\n        this.patientHrsid = this.navParams.get('patient');\n        this.getPatientProfile(this.patientHrsid);\n    }\n\n    ngOnInit() {\n        this.getAvailableDeviceInventory();\n    }\n\n    /**\n     * Checking for all available device inventory\n     */\n\n    getAvailableDeviceInventory() {\n        return this.patientDeviceService.getAvailableDeviceInventory().subscribe((res: any) => {\n            if (res.length == 0) {\n                this.availableDevices = 'None';\n            } else {\n                this.availableDevices = res;\n            }\n        });\n    }\n\n    /**\n     * Calling updated patient profile after an edit\n     */\n\n    getPatientProfile(hrsid): object {\n        this.hrsid = hrsid;\n        this.translateService.get('UNASSIGNED_DEVICE').subscribe((value) => {\n            this.unassignedDevice = value;\n        });\n\n        return this.patientProfileService.getPatientProfile(hrsid).subscribe((res: any) => {\n            if (res.device) {\n                this.deviceInformation = res.device;\n                this.currentAssignedDevice = res.device.name;\n            } else {\n                this.currentAssignedDevice = this.unassignedDevice;\n            }\n        });\n    }\n\n    /**\n     * Changing or assigning a device to a patient\n     */\n\n    saveEditToAssignedDevice() {\n        let selectedDeviceName = this.selectedValue;\n\n        let selectedDevice = this.availableDevices.find(function(deviceName) {\n            return deviceName.name === selectedDeviceName;\n        });\n        return this.patientDeviceService.saveEditToAssignedDevice(this.patientHrsid, selectedDevice).subscribe((res: HttpEvent<{status: string}>) => {\n            this.modalCtrl.dismiss(selectedDevice.id);\n        });\n    }\n\n    dismiss() {\n        let currentDevice = this.deviceInformation;\n        if (currentDevice == undefined) {\n            this.modalCtrl.dismiss();\n        } else {\n            return this.patientDeviceService.saveEditToAssignedDevice(this.patientHrsid, currentDevice.devid).subscribe((res: HttpEvent<{status: string}>) => {\n                this.modalCtrl.dismiss(currentDevice.devid);\n            });\n        }\n    }\n}\n","import {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {RouterModule} from '@angular/router';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {PatientStatusChange} from './patient-status-change';\nimport {PatientDeviceService, PatientProfileService} from '@clinician/providers';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: '',\n                component: PatientStatusChange\n            }\n        ]),\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [PatientStatusChange],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA],\n    providers: [\n        PatientDeviceService,\n        PatientProfileService\n    ]\n})\nexport class PatientStatusChangeModule {}\n","module.exports = \"page-patient-status-change .patient-discharge-info {\\n  white-space: normal; }\\n\\npage-patient-status-change .c_patient_status--buttons {\\n  display: flex; }\\n\\npage-patient-status-change .c_patient_status--buttons ion-button {\\n    flex: 1; }\\n\\npage-patient-status-change .c_patient_status--deactivate ion-label {\\n  white-space: break-spaces !important; }\\n\\npage-patient-status-change ion-item {\\n  --border-color: transparent; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9wYXRpZW50L3BhdGllbnQtc3RhdHVzLWNoYW5nZS9wYXRpZW50LXN0YXR1cy1jaGFuZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVRLG1CQUFtQixFQUFBOztBQUYzQjtFQVFZLGFBQWEsRUFBQTs7QUFSekI7SUFXZ0IsT0FBTyxFQUFBOztBQVh2QjtFQWlCZ0Isb0NBQW9DLEVBQUE7O0FBakJwRDtFQXVCUSwyQkFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC9wYXRpZW50LXN0YXR1cy1jaGFuZ2UvcGF0aWVudC1zdGF0dXMtY2hhbmdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJwYWdlLXBhdGllbnQtc3RhdHVzLWNoYW5nZSB7XG4gICAgLnBhdGllbnQtZGlzY2hhcmdlLWluZm8ge1xuICAgICAgICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAgIH1cblxuICAgIC5jX3BhdGllbnRfc3RhdHVzIHtcblxuICAgICAgICAmLS1idXR0b25zIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG5cbiAgICAgICAgICAgIGlvbi1idXR0b24ge1xuICAgICAgICAgICAgICAgIGZsZXg6IDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAmLS1kZWFjdGl2YXRlIHtcbiAgICAgICAgICAgIGlvbi1sYWJlbCB7XG4gICAgICAgICAgICAgICAgd2hpdGUtc3BhY2U6IGJyZWFrLXNwYWNlcyAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgaW9uLWl0ZW0ge1xuICAgICAgICAtLWJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxufVxuIl19 */\"","import {Component} from '@angular/core';\nimport {ModalController, NavParams, ToastController} from '@ionic/angular';\nimport {Validators, FormControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {TranslateService} from '@ngx-translate/core';\nimport {PatientProfileService} from '@clinician/providers';\nimport * as moment from 'moment';\nimport {ActivationStatus} from '../../enums';\n\n@Component({\n    selector: 'page-patient-status-change',\n    templateUrl: 'patient-status-change.html',\n    styleUrls: ['patient-status-change.scss'],\n})\nexport class PatientStatusChange {\n    public status = ActivationStatus;\n    public action: string;\n    private hrsid: string;\n    public data: FormGroup;\n    public date: string;\n    public undischargeInfo: string;\n    private translateHeader: string;\n\n    constructor(\n        private navParams: NavParams,\n        private modalCtrl: ModalController,\n        private patientProfileService: PatientProfileService,\n        private toastCtrl: ToastController,\n        private translate: TranslateService,\n        private formBuilder: FormBuilder\n    ) {\n        this.hrsid = this.navParams.get('hrsid');\n        this.action = this.navParams.get('action');\n        this.date = this.navParams.get('date');\n        this.translateHeader = 'PATIENT_' + this.action.toUpperCase();\n        this.initializeData();\n    }\n\n    ngOnInit() {\n        if (this.action == ActivationStatus.ActionUnDischarge) this.undischargeInfo = this.translate.instant('PATIENT_UNDISCHARGE.INFO', {date: this.date});\n    }\n\n    public dismiss(data?) {\n        this.modalCtrl.dismiss(data);\n    }\n\n    public submit() {\n        if (this.data.value.note == '') {\n            this.data.value.note = 'none';\n        }\n\n        let messageSuccess = this.action == ActivationStatus.ActionDischarge ?\n            this.translate.instant(this.translateHeader + '.TOAST.SUCCESS', {date: moment(this.data.value.date).format('MM-DD-YYYY')}) :\n            this.translate.instant(this.translateHeader + '.TOAST.SUCCESS');\n        return this.patientProfileService.changePatientStatus(this.action, this.hrsid, this.data.value).subscribe(\n            {\n                next: (res: any) => {\n                    let message = messageSuccess;\n                    let status = 'success';\n                    this.throwToastMessage(message, status);\n                    if (this.action == ActivationStatus.ActionDischarge || this.action == ActivationStatus.ActionUnDischarge) {\n                        this.dismiss(this.data.value);\n                    } else {\n                        this.dismiss({status: res.status});\n                    }\n                },\n                error: (err) => {\n                    let messageFail = this.translate.instant(this.translateHeader + '.TOAST.FAIL');\n                    let status = 'fail';\n                    this.throwToastMessage(messageFail, status);\n                }\n            }\n        );\n    }\n\n    async throwToastMessage(message: string, status: string) {\n        let title: string;\n        let duration: number;\n        let cssClass: string;\n        if (status === 'success') {\n            title = this.translate.instant('PATIENT_STATUS_CHANGE.TOAST.SUCCESS');\n            duration = 3000; // a little shorter for success messages than error messages - 3 seconds\n            cssClass = 'toast-success';\n        } else if (status === 'fail') {\n            title = this.translate.instant('PATIENT_STATUS_CHANGE.TOAST.FAIL');\n            duration = 5000; // a little longer for error to allow the user to read - 5 seconds\n            cssClass = 'toast-fail';\n        } else {\n            title = this.translate.instant('PATIENT_STATUS_CHANGE.TOAST.SUCCESS');\n            duration = 3000; // a little shorter for success messages than error messages - 3 seconds\n        }\n\n        let toast = await this.toastCtrl.create({\n            header: title,\n            message: message,\n            duration: duration,\n            cssClass: cssClass,\n            position: 'top'\n        });\n        return await toast.present();\n    }\n\n    private initializeData(): void {\n        switch (this.action) {\n            case ActivationStatus.ActionPause:\n                this.data = this.formBuilder.group({\n                    patient: this.hrsid,\n                    note: '',\n                    edvisit: false,\n                    readmitted: false\n                });\n                break;\n            case ActivationStatus.ActionResume:\n                this.data = this.formBuilder.group({\n                    patient: this.hrsid,\n                    note: '',\n                    edvisit: false,\n                    readmitted: false\n                });\n                break;\n            case ActivationStatus.ActionDeactivate:\n                this.data = this.formBuilder.group({\n                    patient: this.hrsid,\n                    note: '',\n                    edvisit: false,\n                    readmitted: false\n                });\n                break;\n            case ActivationStatus.ActionReactivate:\n                this.data = this.formBuilder.group({\n                    patient: this.hrsid,\n                    note: ''\n                });\n                break;\n            case ActivationStatus.ActionDischarge:\n                this.data = this.formBuilder.group({\n                    patient: this.hrsid,\n                    date: ''\n                });\n                break;\n            case ActivationStatus.ActionUnDischarge:\n                this.data = this.formBuilder.group({\n                    patient: this.hrsid\n                });\n                break;\n        }\n    }\n}\n","import {NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ResetMetricsPage} from './reset-metrics.page';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        IonicModule,\n        RouterModule.forChild([\n            {\n                path: 'reset-metrics',\n                component: ResetMetricsPage\n            }\n        ]),\n        TranslateModule.forChild(),\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    declarations: [\n        ResetMetricsPage\n    ],\n    schemas: [NO_ERRORS_SCHEMA],\n})\nexport class ResetMetricsPageModule {}\n","module.exports = \".resetMetricsModal .resetMetricsButtons {\\n  padding: 1em; }\\n\\n.resetMetricsModal .list-ios > .item-block:first-child {\\n  border-top: 0; }\\n\\n.resetMetricsModal .list-ios > .item-block:last-child {\\n  border-bottom: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbnViaGF2c2F4ZW5hL0RvY3VtZW50cy9JbXBldHVzX1Byb2plY3RzL0FuZ3VsYXJfTW9ub3JlcG9fR2l0TGFiX0NvcHkvYW5ndWxhci1tb25vcmVwby9hcHBzL21vYmlsZS1jbGluaWNpYW4vc3JjL2FwcC9wYXRpZW50L3Jlc2V0LW1ldHJpY3MvcmVzZXQtbWV0cmljcy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFFUSxZQUFZLEVBQUE7O0FBRnBCO0VBTVEsYUFBYSxFQUFBOztBQU5yQjtFQVVRLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvcGF0aWVudC9yZXNldC1tZXRyaWNzL3Jlc2V0LW1ldHJpY3MucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4ucmVzZXRNZXRyaWNzTW9kYWwge1xuICAgIC5yZXNldE1ldHJpY3NCdXR0b25zIHtcbiAgICAgICAgcGFkZGluZzogMWVtO1xuICAgIH1cblxuICAgIC5saXN0LWlvcyA+IC5pdGVtLWJsb2NrOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXRvcDogMDtcbiAgICB9XG5cbiAgICAubGlzdC1pb3MgPiAuaXRlbS1ibG9jazpsYXN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMDtcbiAgICB9XG59XG4iXX0= */\"","import {Component} from '@angular/core';\nimport {NavParams, ToastController, ModalController} from '@ionic/angular';\nimport {Validators, FormControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {TranslateService} from '@ngx-translate/core';\nimport {PatientProfileService} from '../../services/providers';\n\n@Component({\n    selector: 'page-reset',\n    templateUrl: 'reset-metrics.page.html',\n    styleUrls: ['reset-metrics.page.scss'],\n})\nexport class ResetMetricsPage {\n    patientHRSId: string;\n    metricSelected: boolean;\n    metrics: FormGroup;\n\n    constructor(\n        private toastCtrl: ToastController,\n        private modalCtrl: ModalController,\n        private patientProfileService: PatientProfileService,\n        private translateService: TranslateService,\n        private navParams: NavParams,\n        private formBuilder: FormBuilder\n    ) {\n        this.metrics = this.formBuilder.group({\n            activity: new FormControl(false),\n            medication: new FormControl(false),\n            survey: new FormControl(false),\n            weight: new FormControl(false),\n            consent: new FormControl(false),\n        });\n    }\n\n    ionViewWillEnter() {\n        this.patientHRSId = this.navParams.get('patientHRSId');\n    }\n\n    toggleResetButton() {\n        if (\n            this.metrics.value.activity === true ||\n            this.metrics.value.medication === true ||\n            this.metrics.value.survey === true ||\n            this.metrics.value.weight === true ||\n            this.metrics.value.consent === true\n        ) {\n            this.metricSelected = true;\n        } else {\n            this.metricSelected = false;\n        }\n    }\n\n    submitMetricReset() {\n        this.patientProfileService.resetPatientMetrics(this.patientHRSId, this.metrics.value).subscribe(\n            {\n                next: (res: any) => {\n                    this.throwToastMessage('RESET_METRICS_SUCCESS');\n                },\n                error: (err) => {\n                    this.throwToastMessage('RESET_METRICS_FAIL');\n                }\n            }\n        );\n        this.dismiss();\n    }\n\n    async throwToastMessage(message: string) {\n        let toast = await this.toastCtrl.create({\n            message: this.translateService.instant(message),\n            duration: 3000,\n            position: 'top'\n        });\n        return await toast.present();\n    }\n\n    dismiss() {\n        this.modalCtrl.dismiss();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {Router} from '@angular/router';\nimport {MenuController} from '@ionic/angular';\nimport {Setting} from '../../admin/admin-settings.interface';\nimport {AdminSettings} from '../../enums';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AdminService {\n    static PASSCODE: string = '41213';\n    adminSettings = AdminSettings;\n    settings: Setting[];\n    private totalButtonClicks: number = 0;\n    private openAdminTimeout: ReturnType<typeof setTimeout>;\n\n    constructor(\n        private logger: NGXLogger,\n        private menu: MenuController,\n        private router: Router,\n    ) {\n        // each 'Setting' represents a nav item for the admin area\n        this.settings = [\n            {\n                fullLabel: 'ADMIN_DOMAIN_SETTINGS_LABEL_FULL',\n                tabLabel: 'ADMIN_DOMAIN_SETTINGS_LABEL_TAB',\n                icon: 'earth-outline',\n                enum: this.adminSettings.DOMAIN\n            }\n        ];\n    }\n\n    /**\n     * If the device used is a tablet - access to the admin is granted thru a 'secret' button\n     * located in the menu at the version number - 5 clicks are required to open admin\n     * if 2 seconds passes between a click the counter is reset\n     */\n    openAdmin(): void {\n        this.totalButtonClicks += 1;\n        clearTimeout(this.openAdminTimeout);\n        if (this.totalButtonClicks === 5) {\n            this.totalButtonClicks = 0;\n            this.router.navigate(['admin']);\n            this.menu.isOpen().then((isOpen) => {\n                if (isOpen) this.menu.close();\n            });\n        } else {\n            this.openAdminTimeout = setTimeout(() => this.totalButtonClicks = 0, 2000);\n        }\n    }\n\n    rerouteHome(): void {\n        this.router.navigate(['home']);\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DataExchangeService {\n    static UpdatePatient = 'updatedPatient';\n    static UpdatedReviewedStatus = 'updatedReviewedStatus';\n    static UpdatedActivationStatus = 'updatedActivationStatus';\n\n    private data = new Map();\n\n    constructor() { }\n\n    setData(id, data) {\n        this.data.set(id, data);\n    }\n\n    getData(id, clearData?) {\n        const data = this.data.get(id);\n        if (clearData) this.data.delete(id);\n        return data;\n    }\n\n    hasData(id) {\n        return this.data.has(id);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {GatewayApi} from '@hrs/providers';\nimport {CustomPatientAttribute, EnvironmentData, EnvironmentSettings} from './interfaces/index';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/operators';\nimport {Settings} from '../settings/settings';\n\n/**\n *Environment provider.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class Environment {\n    static supportNumber: string;\n    static environmentSettings: EnvironmentSettings;\n    static SETTING_PATIENT_CUSTOMATTRIBUTES = 'PATIENTINFO_CUSTOMATTRIBUTES';\n    static SETTING_ENV_SUBGROUPS = 'SYSTEM_SUBGROUPS';\n    static SETTING_OPT_OUT_ADVANCED_SECURITY = 'SYSTEM_MOBILE_SECURITY_OPTIONAL';\n    public data: EnvironmentData;\n\n    constructor(\n        private gatewayApi: GatewayApi,\n        private settings: Settings\n    ) {}\n\n    /**\n     * Send a GET request to our environment endpoint on login.\n     * This will be called once.\n     */\n    public getEnvironment(): Observable<any> {\n        let getEnv = this.gatewayApi.get('apiv2/environment', {});\n\n        return getEnv.pipe(\n            tap((res: any) => {\n                this.data = res;\n                if (res.settings.phone) {\n                    Environment.supportNumber = res.settings.phone;\n                }\n                if (res.environmentSettings) {\n                    Environment.environmentSettings = res.environmentSettings;\n                }\n            }),\n            tap(() => {\n                this.settings.configureStorage(this.hasSetting(Environment.SETTING_OPT_OUT_ADVANCED_SECURITY));\n            })\n        );\n    }\n\n    public hasSetting(flag: string): boolean {\n        if (this.data && this.data.environmentSettings) {\n            for (let i = 0; i < this.data.environmentSettings.length; i++) {\n                if (this.data.environmentSettings[i].flag == flag) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    public getSubgroups(): string[] {\n        if (this.data && this.data.settings) {\n            return this.data.settings.subgroups;\n        }\n    }\n\n    public getCustomFields(): CustomPatientAttribute[] {\n        if (this.data) {\n            return this.data.PATIENTINFO_CUSTOMATTRIBUTES;\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {NGXLogger} from 'ngx-logger';\nimport {GatewayApi, CommunicationService} from '@hrs/providers';\nimport {FirebaseAccountInfo} from '../../../../firebase/firebase-account-info';\n\n/**\n * This is the Firebase class that will be used for firebase messaging and notifications\n */\n\ndeclare var FCMPlugin: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class FirebaseNotifications {\n    data: any;\n    userHrsId: string;\n    shouldUpdateToken: boolean;\n    static notification: any;\n\n    constructor(\n        private communication: CommunicationService,\n        private logger: NGXLogger,\n        private gatewayApi: GatewayApi\n    ) {}\n\n    /**\n     * Manually Ask for Push Permission (IOS ONLY)\n     * Once user answers yes/no, they will not be asked again\n     */\n    public askIOSPushPermission(): void {\n        FCMPlugin.requestPushPermissionIOS((permissionGranted) => {\n            if (permissionGranted) {\n                this.logger.log('Push Permission Granted');\n            } else {\n                this.logger.log('Push Permission Declined');\n            }\n        }, (err) => {\n            this.logger.error('Failed to request push permission', err);\n        });\n    }\n\n    /**\n     * Create Channel on Device for Firebase to send Notifications to\n     */\n    public createAndroidNotificationChannel(): void {\n        FCMPlugin.createNotificationChannelAndroid({\n            id: 'default-channel-id',\n            name: 'Default channel',\n            importance: 'high',\n            visibility: 'public'\n        });\n    }\n\n    /**\n     * Set PCM to chosen Firebase account.\n     *\n     * Only available to HRSTAB.\n     * This is because we disable FirebaseInitProvider in AndroidManifestTablet.xml, which prevents PCM from automatically initializing\n     * the FirebaseApp from google-services.json and allows us to initialize manually with the creds of our choosing.\n     */\n    public setFirebaseAccount(account: string): Promise<void> {\n        const accountInfo = FirebaseAccountInfo[account];\n        return new Promise((resolve, reject) => {\n            FCMPlugin.initDifferentAccount(\n                accountInfo,\n                () => {\n                    this.logger.info(`Successfully initialized ${account} Firebase account.`);\n                    resolve();\n                },\n                (err) => {\n                    this.logger.error(err);\n                    reject(new Error(`Failed to initialize ${account} FirebaseApp.`));\n                }\n            );\n        });\n    }\n\n    /**\n     * Subscribe to Firebase topics\n     * Get firebase device token\n     * @param response\n     */\n    initializeFirebase(hrsid) {\n        this.userHrsId = hrsid;\n        this.shouldUpdateToken = true;\n\n        // Subscribe to topic and get device's current registration id\n        FCMPlugin.subscribeToTopic('all', (res) => {\n            this.logger.log('Successfully subscribed to firebase topics');\n        }, (err) => {\n            this.logger.error('Failed to subscribe to firebase topics');\n        });\n        // get firebase device token\n        FCMPlugin.getToken((token) => {\n            this.logger.debug(token);\n            // store video call firebase token\n            this.sendTokenToServer(token);\n            this.buildNotificationHandler();\n        }, (err) => {\n            this.logger.error(err);\n        });\n    }\n\n    /**\n     * Listen for Firebase notifications and broadcast the appropriate event\n     */\n    buildNotificationHandler(): void {\n        FCMPlugin.onNotification((data) => {\n            if (data.type.includes('video')) {\n                if (data.action === 'incoming_call') {\n                    this.communication.incomingVideoCall.next(data);\n                } else if (data.action === 'call_unanswered' || data.action === 'call_declined') {\n                    this.communication.endVideoCall.next(data);\n                } else if (data.action === 'call_left') {\n                    this.communication.callerLeft.next(data);\n                }\n            } else if (data.type === 'chat') {\n                this.communication.newChatMessage.next(data);\n            } else if (data.type === 'voice' || data.type === 'voicecall') {\n                if (data.action === 'call_left') {\n                    this.communication.callerLeft.next(JSON.parse(data.data));\n                } else {\n                    this.communication.incomingVoiceCall.next(data);\n                }\n            }\n        }, (error) =>{\n            this.logger.error('error is ' + JSON.stringify(error));\n        });\n\n        this.tokenRefresh();\n    }\n\n    tokenRefresh(): void {\n        FCMPlugin.onTokenRefresh((token) => {\n            this.logger.log('refresh token', token);\n            if (this.shouldUpdateToken) {\n                this.sendTokenToServer(token);\n            }\n        });\n    }\n\n    /**\n     * Store Firebase device token\n     * @param token\n     */\n    sendTokenToServer(token) {\n        const data = {\n            data: {\n                value: token,\n                hrsid: this.userHrsId,\n                deviceType: 'mobile'\n            },\n        };\n\n        let post = this.gatewayApi.post(\n            'push-tokens',\n            data,\n        );\n\n        post.subscribe(\n            {\n                next: (res) => {\n                    this.logger.log('Successfully stored firebase device token');\n                },\n                error: (err) => {\n                    this.logger.error('Failed to store firebase device token');\n                }\n            }\n        );\n    }\n\n    deleteInstanceId() {\n        this.shouldUpdateToken = false;\n        FCMPlugin.deleteInstanceId(() => {\n            this.logger.log('Firebase instance successfully deleted');\n        }, (err) => {\n            this.logger.error('Failed to delete firebase instance' + err);\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {DailyMetricsModel} from '../../../common/models/daily-metrics.model';\nimport {GatewayApi} from '@hrs/providers';\nimport * as moment from 'moment';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class HistoricalDataService {\n    constructor(\n      private gatewayApi: GatewayApi\n    ) {}\n\n    public getLatest7Days(hrsid: string): Observable<DailyMetricsModel[]> {\n        const latest7DaysRange = {\n            start: moment().subtract(6, 'd').format('YYYYMMDD'),\n            end: moment().format('YYYYMMDD')\n        };\n        return this.getHistoricalDateRange(hrsid, latest7DaysRange);\n    }\n\n    public getNext7Days(hrsid: string): Observable<DailyMetricsModel[]> {\n        const start = moment().subtract(7, 'd');\n        const next7DaysRange = {\n            end: start.format('YYYYMMDD'),\n            start: moment(start).subtract(6, 'd').format('YYYYMMDD')\n        };\n        return this.getHistoricalDateRange(hrsid, next7DaysRange);\n    }\n\n    public getHistoricalDateRange(hrsid: string, range: DateRange): Observable<DailyMetricsModel[]> {\n        return this.gatewayApi.get(`apiv2/patients/${hrsid}?&start=${range.start}&end=${range.end}`, {})\n            .pipe(map((res: any) => {\n                let historicalData = [];\n                for (let i = 0; i < res.length; i++) {\n                    historicalData.push(DailyMetricsModel.init(res[i]));\n                }\n                return historicalData;\n            }\n            ));\n    }\n}\n\ninterface DateRange {\n    start: string; // YYYYMMDD\n    end: string // YYYYMMDD\n}\n","\nimport {Injectable} from '@angular/core';\nimport {GatewayService} from '@hrs/gateway';\nimport {NGXLogger} from 'ngx-logger';\nimport {map, share} from 'rxjs/operators';\nimport {Observable, zip} from 'rxjs';\nimport {ExpandedPatient} from '../../../common/interfaces/expanded-patient.interface';\nimport {ToastController} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\n\nclass RequestObservable {\n    next: (value) => void;\n    observable: Observable<any[]>;\n    response: any[] = [];\n\n    constructor() {\n        this.observable = new Observable((observer) => {\n            this.next = (value) => observer.next(value);\n        });\n    }\n}\n\n/**\n * This is the service provider for the patient list API calls\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class PatientListService {\n    lastPageRequested: number = 0;\n    finalPage: number;\n    patientListRequests: {[key: number]: RequestObservable} = {};\n    patientListRequestObservable: Observable<any>;\n    patientListRequestError: boolean;\n\n    constructor(\n        public gateway: GatewayService,\n        public logger: NGXLogger,\n        public toastCtrl: ToastController,\n        public translate: TranslateService\n    ) {}\n\n    /**\n     * Set up and return patient list request observables\n     */\n    loadPatients(): Observable<any> {\n        // If we were already loading the patient list we'll just continue waiting for that to complete\n        if (this.patientListRequestObservable) {\n            return this.patientListRequestObservable;\n        }\n\n        // Load the patient list in batches using X parallel requests that each keep requesting another batch until we've loaded all patients.\n        // A batched approach was needed because some environments have too much data for the old backend behind this to handle in one batch.\n        let observables = [];\n        for (let requestKey = 1; requestKey <= 5; requestKey++) {\n            this.patientListRequests[requestKey] = new RequestObservable();\n            observables.push(this.patientListRequests[requestKey].observable);\n            this.loadPatientListPage(++this.lastPageRequested, requestKey);\n        }\n\n        // merge all the request observables into one stream and make it shareable to patientlist and locally\n        this.patientListRequestObservable = zip(...observables)\n            .pipe(\n                map((patientList: Observable<void>[]) => patientList.flat(1)),\n                share()\n            );\n\n        const resetVariables = () => {\n            setTimeout( () => {\n                this.finalPage = undefined;\n                this.lastPageRequested = 0;\n                this.patientListRequests = {};\n                this.patientListRequestObservable = null;\n                this.patientListRequestError = false;\n            }, 500);\n        };\n\n        this.patientListRequestObservable.subscribe({\n            // The only local behavior required once all the observables have completed is to reset the local variables\n            // And notify user if there were any request errors\n            next: () => {\n                if (this.patientListRequestError) this.alertUser();\n                resetVariables();\n            }\n        });\n\n        return this.patientListRequestObservable;\n    }\n\n    /**\n     * handle patient list pagination requests and response interactions with observables\n     */\n    loadPatientListPage(page: number, requestKey: number): void {\n        const assignFinalPage = (response: any) => {\n            if (\n                !this.finalPage &&\n                response &&\n                response.meta &&\n                response.meta.pagination\n            ) {\n                this.finalPage = response.meta.pagination.last_page || 0;\n            }\n        };\n\n        const loadNextPage = () => {\n            let nextPage = this.lastPageRequested + 1;\n\n            if (nextPage <= this.finalPage) {\n                this.loadPatientListPage(++this.lastPageRequested, requestKey);\n            } else {\n                // Each of the 5 patientListRequest Observables will trigger 'next' only one time. When all 5 have done that\n                // patientListRequestObservable (which the patient-list page subscribes to) will trigger 'next' one time\n                // and pass all responses as one array regardless of any errors an individual or all requests encountered\n                this.patientListRequests[requestKey].next(this.patientListRequests[requestKey].response);\n            }\n        };\n\n        this.getPatientList(page)\n            .subscribe({\n                next: (response: any) => {\n                    assignFinalPage(response);\n                    // Concat the patient list responses together, once all requests are finished the sum of the responses will be passed to patient-list.page\n                    this.patientListRequests[requestKey].response = [...this.patientListRequests[requestKey].response, ...response.patientlist];\n                },\n                error: (err: Error) => {\n                    // The Error is consumed here and does not bubble up to the wrapping observable patientListRequestObservable\n                    // Bubbling the error up will prevent desired behavior and will result in a never ending loading spinner\n                    this.patientListRequestError = true;\n                    this.logger.error('Error loading patientlist page ' + page, err);\n                    loadNextPage();\n                },\n                complete: () => loadNextPage()\n            });\n    }\n\n    /**\n     * Call api to get the patient list\n     */\n    getPatientList(page: number, pageSize: number = 500): Observable<any> {\n        const path = `apiv2/patientlist?status[]=Activated&status[]=Pre-Activated&status[]=Paused&status[]=Discharged&page[current]=${page}&page[size]=${pageSize}`;\n        return this.gateway.get({path: path});\n    }\n\n    /**\n     * Simply alert user if any of the patientlist requests errored out\n     */\n    async alertUser(): Promise<void> {\n        let toast = await this.toastCtrl.create({\n            message: this.translate.instant('PATIENT_LIST_FAIL'),\n            cssClass: 'toast-fail',\n            duration: 3000,\n            position: 'top'\n        });\n        return toast.present();\n    }\n\n    /**\n     * used by patient-list.page to keep track of which patient is expanded\n     */\n    expandedPatients(): ExpandedPatient {\n        return {\n            patient: undefined,\n            includes: function(patient) {\n                return this.patient && patient.hrsid === this.patient.hrsid;\n            },\n            isExpanded: function() {\n                return !!this.patient;\n            },\n            set: function(patient) {\n                patient.expanded = true;\n                this.patient = patient;\n            },\n            unset: function() {\n                this.patient.expanded = false;\n                this.patient = undefined;\n            }\n        };\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {GatewayApi} from '@hrs/providers';\nimport {User} from '../../user/user';\nimport {\n    CareplanUpdatePayload,\n    MedicationReminderDetail,\n    ReminderTimeAndWindow} from '../../../../common/interfaces/careplan.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CareplanService {\n    // this.modules contains both the conditions (presets) and the metrics (aka modules),\n    // which is confusing to have them combined but is unfortunately how the data is stored on the back end.\n    public modules: string[];\n    // this.moduleInfo contains some fields which seem to be required by the backend to POST, but whose values,\n    // or the handling thereof, we have not yet added into the CCM careplan.\n    public moduleInfo: CareplanUpdatePayload = {};\n\n    constructor(\n        private gatewayApi: GatewayApi,\n        private user: User\n    ) { }\n\n    public getPatientModules() {\n        return this.gatewayApi.get(`v1/modules`, {});\n    }\n\n    public getPatientModulesWithReminders(hrsid: string) {\n        return this.gatewayApi.get(`apiv2/patients/` + hrsid + `/moduleinfo`, {});\n    }\n\n    public getEnvPresets() {\n        return this.gatewayApi.get(`v1/environments/${this.user.data.environment}/presets`, {});\n    }\n\n    public savePatientModuleInfo(\n        hrsid: string,\n        modules: string[],\n        activityReminders: ReminderTimeAndWindow,\n        surveyReminders: ReminderTimeAndWindow,\n        weightReminders: ReminderTimeAndWindow,\n        medicationReminders: MedicationReminderDetail[]\n    ) {\n        if (!modules.length) modules = ['empty'];\n        this.moduleInfo = {};\n        this.moduleInfo['modules'] = modules;\n        if (this.moduleInfo['modules'].includes('activity')) {\n            this.moduleInfo['activityreminder'] = activityReminders;\n        }\n\n        if (this.moduleInfo['modules'].includes('survey')) {\n            this.moduleInfo['surveyreminder'] = surveyReminders;\n        }\n\n        if (this.moduleInfo['modules'].includes('weight')) {\n            this.moduleInfo['weightreminder'] = weightReminders;\n        }\n\n        if (this.moduleInfo['modules'].includes('medication')) {\n            this.moduleInfo['medicationreminders'] = medicationReminders;\n        }\n\n        return this.gatewayApi.post(`apiv2/patients/` + hrsid + `/moduleinfo`, {moduleInfo: this.moduleInfo});\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {NGXLogger} from 'ngx-logger';\nimport {GatewayApi} from '@hrs/providers';\n\n/**\n * This is the service provider for the patient list API calls\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class PatientDeviceService {\n    patientListLoaded;\n\n    constructor(\n        public gatewayApi: GatewayApi,\n        public http: HttpClient,\n        private logger: NGXLogger\n    ) {}\n\n    /**\n     * Call api to get the device inventory\n     */\n\n    getAvailableDeviceInventory() {\n        return this.gatewayApi.get(\n            'apiv2/inventory?/',\n            {available: true}\n        );\n    }\n\n    /**\n     * Call api to mark the patient as reviewed\n     */\n\n    saveEditToAssignedDevice(hrsid, selectedDevice) {\n        return this.gatewayApi.post(\n            'apiv2/patients/' + hrsid + '/device',\n            {deviceId: selectedDevice.id}\n        );\n    }\n\n    /**\n     * Call api to get device information and connectivity for a specific patient\n     */\n\n    getPatientDeviceInformation(deviceId) {\n        return this.gatewayApi.get(\n            'apiv2/inventory/status/' + deviceId,\n            { }\n        );\n    }\n\n    /**\n     * Call api to remove device from patient and reset to nothing assigned\n     */\n\n    removeDevice(detail) {\n        return this.gatewayApi.delete(\n            'apiv2/patients/' + detail.hrsid + '/device',\n            { }\n        );\n    }\n}\n","\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {NGXLogger} from 'ngx-logger';\nimport {GatewayApi} from '@hrs/providers';\nimport {Observable} from 'rxjs';\n// import { NewPatient } from '../../pages/add-patient/new-patient.model';\nimport {PatientSettingsResponse} from '@clinician/models';\nimport {Validators, FormControl, FormGroup, FormBuilder} from '@angular/forms';\nimport {ActivationStatus} from '../../enums';\n\n/**\n * This is the service provider for the patient list API calls\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class PatientProfileService {\n    patientListLoaded;\n\n    constructor(\n        public gatewayApi: GatewayApi,\n        public http: HttpClient,\n        private logger: NGXLogger\n    ) {}\n\n    /**\n     * Call api to get the patient profile\n     */\n\n    getPatientProfile(hrsid) {\n        return this.gatewayApi.get(\n            'apiv2/patient/' + hrsid + '/profile',\n            {}\n        );\n    }\n\n    /**\n     * Call api to get the patient current metrics\n     */\n\n    getPatientCurrentMetrics(hrsid) {\n        return this.gatewayApi.get(\n            'apiv2/patients/' + hrsid,\n            {}\n        );\n    }\n\n    /**\n     * Call api to get the surveys\n     */\n\n    getSurveyQuestionAndAnswerMetric(hrsid, currentDate) {\n        return this.gatewayApi.get(\n            'apiv2/patients/' + hrsid + '/surveydetails/' + currentDate,\n            {}\n        );\n    }\n\n    /**\n     * Call api to mark the patient as reviewed\n     */\n\n    markPatientReviewed(patient) {\n        return this.gatewayApi.post(\n            'apiv2/patient/' + patient.hrsid + '/profile',\n            {review: true}\n        );\n    }\n\n    /**\n     * Call api to mark the patient as not reviewed\n     */\n\n    markPatientUnreviewed(patient) {\n        return this.gatewayApi.post(\n            'apiv2/patient/' + patient.hrsid + '/profile',\n            {review: false}\n        );\n    }\n\n    /**\n     * Call api to save or edit the quick note with today's date\n     */\n\n    saveQuickNote(detail, quicknote) {\n        return this.gatewayApi.post(\n            'apiv2/patient/' + detail.hrsid + '/profile',\n            {'quicknote': {'note': quicknote}}\n        );\n    }\n\n    resetPatientMetrics(hrsId, metrics) {\n        return this.gatewayApi.post(\n            'apiv2/patient/' + hrsId + '/metrics/reset', metrics\n        );\n    }\n\n    changePatientStatus(\n        action: string,\n        hrsId: string,\n        data: FormGroup\n    ) {\n        if (action === ActivationStatus.ActionUnDischarge) {\n            return this.gatewayApi.delete('apiv2/patients/' + hrsId + '/discharge', data);\n        }\n        // The end point does not accept 'resume' as a param. It will return 'pre-activated' for all resume and reactivate events.\n        // For 'resume' events the patient's status will persist as 'activated' locally and the in the DB regardless of what gets returned\n        // from the request. https://healthrecoverysolutions.atlassian.net/browse/JIR-5387\n        if (action == ActivationStatus.ActionResume) {\n            action = ActivationStatus.ActionReactivate;\n        }\n        return this.gatewayApi.post('apiv2/patients/' + hrsId + '/' + action, data);\n    }\n\n    public addPatient(newPatientData: any): Observable<any> {\n        return this.gatewayApi.post('apiv2/patient', newPatientData);\n    }\n\n    public savePatientSettings(hrsid: string, data: PatientSettingsResponse): Observable<any> {\n        return this.gatewayApi.post(\n            'apiv2/patient/' + hrsid + '/profile',\n            JSON.stringify(data)\n        );\n    }\n}\n","import {AdminService} from './admin/admin.service';\nimport {CommunicationService, ModalService, SurveyDetailsService} from '@hrs/providers';\nimport {DataExchangeService} from './data-exchange/data-exchange.service';\nimport {Environment} from './environment/environment';\nimport {FirebaseNotifications} from './firebase/firebase';\nimport {HistoricalDataService} from './historical-data/historical-data.service';\nimport {PatientDeviceService} from './patientProfile/patientDevice.service';\nimport {PatientListService} from './patientList/patientList.service';\nimport {PatientProfileService} from './patientProfile/patientProfile.service';\nimport {ReviewedStatusService} from './reviewed-status/reviewed-status.service';\nimport {Settings} from './settings/settings';\nimport {User} from './user/user';\nimport {UserAgentProvider} from './user-agent/user-agent';\nimport {ZoomService} from './zoom/zoom.service';\n\nexport {\n    AdminService,\n    CommunicationService,\n    DataExchangeService,\n    Environment,\n    FirebaseNotifications,\n    HistoricalDataService,\n    ModalService,\n    PatientDeviceService,\n    PatientListService,\n    PatientProfileService,\n    ReviewedStatusService,\n    Settings,\n    SurveyDetailsService,\n    User,\n    UserAgentProvider,\n    ZoomService\n};\n","import {Injectable} from '@angular/core';\nimport {GatewayApi} from '@hrs/providers';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ReviewedStatusService {\n    public static REVIEWED: string = 'reviewed';\n    public static IN_PROGRESS: string = 'inprogress';\n    public static NON_REVIEWED: string = 'unreviewed';\n\n    constructor(\n        private gatewayApi: GatewayApi,\n        private translateService: TranslateService,\n    ) {}\n\n    public popupReviewedStatusClass(reviewedStatus?: string): string {\n        if (!reviewedStatus) reviewedStatus = 'ERROR';\n        const cssStatusClassMap = {\n            [ReviewedStatusService.REVIEWED]: 'toast-risk_low',\n            [ReviewedStatusService.IN_PROGRESS]: 'toast-risk_med',\n            [ReviewedStatusService.NON_REVIEWED]: 'toast-risk_high',\n            ['ERROR']: 'toast-fail'\n        };\n        return cssStatusClassMap[reviewedStatus];\n    }\n\n    public translateReviewedStatus(reviewedStatus: string): string {\n        const translatedStatusMap = {\n            [ReviewedStatusService.REVIEWED]: this.translateService.instant('REVIEWED_STATUS_REVIEWED'),\n            [ReviewedStatusService.IN_PROGRESS]: this.translateService.instant('REVIEWED_STATUS_IN_PROGRESS'),\n            [ReviewedStatusService.NON_REVIEWED]: this.translateService.instant('REVIEWED_STATUS_NON_REVIEWED')\n        };\n        return translatedStatusMap[reviewedStatus];\n    }\n\n    public requestedReviewedStatus(currentStatus:string): string {\n        // this tool selects the new reviewed status to submit when triggered from the patient list\n        const requestedStatusMap = {\n            [ReviewedStatusService.REVIEWED]: ReviewedStatusService.IN_PROGRESS,\n            [ReviewedStatusService.IN_PROGRESS]: ReviewedStatusService.NON_REVIEWED,\n            [ReviewedStatusService.NON_REVIEWED]: ReviewedStatusService.REVIEWED\n        };\n        return requestedStatusMap[currentStatus];\n    }\n\n    public submitRequestedStatus(patientHrsid: string, requestedStatus: string): Observable<any> {\n        return this.gatewayApi.post(\n            'apiv2/patient/' + patientHrsid + '/profile',\n            {reviewedStatus: requestedStatus}\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Storage} from '@ionic/storage';\nimport {BuildUtility} from '@hrs/utility';\n\n/**\n * A simple settings/config class for storing key/value pairs\n * Persistence requires Env to have flag \"SYSTEM_MOBILE_SECURITY_OPTIONAL\" enabled\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class Settings {\n    private SETTINGS_KEY: string = 'settings';\n    private hasStorage: boolean = false;\n    settings: any = {};\n    _defaults: any;\n    _readyPromise: Promise<any>;\n\n    constructor(\n        public storage: Storage,\n        defaults: any) {\n        this._defaults = defaults;\n    }\n\n    /**\n     * For security purposes the default behavior is to not use Storage unless Env opts out of advanced security\n     * This method gets triggered by User.loginWithData once the environment data has loaded and flag\n     * \"SYSTEM_MOBILE_SECURITY_OPTIONAL\" (locally known as: Environment.SETTING_OPT_OUT_ADVANCED_SECURITY) is present\n     */\n    configureStorage(hasStorage: boolean): void {\n        hasStorage ? this.enableDataStorage() : this.disableDataStorage();\n    }\n\n    enableDataStorage(): void {\n        this.hasStorage = true;\n    }\n\n    disableDataStorage(): void {\n        this.hasStorage = false;\n        this.storage.clear();\n        // Store Domain so that the changes are not lost on force-kill.\n        const domainName = BuildUtility.getDomainName();\n        const updatedDomain = domainName === 'hrsdomain' ? BuildUtility.getHRSDomain() : domainName;\n        this.storage.set('updatedDomain', updatedDomain);\n    }\n\n    load(): Promise<void> {\n        return this.storage.get(this.SETTINGS_KEY).then((value) => {\n            if (value) {\n                this.settings = value;\n                return this._mergeDefaults(this._defaults);\n            } else {\n                return this.setAll(this._defaults).then((val) => {\n                    this.settings = val;\n                });\n            }\n        });\n    }\n\n    _mergeDefaults(defaults: any): Promise<any> {\n        // eslint-disable-next-line guard-for-in\n        for (let k in defaults) {\n            if (!(k in this.settings)) {\n                this.settings[k] = defaults[k];\n            }\n        }\n\n        return this.hasStorage ? this.setAll(this.settings) : Promise.resolve();\n    }\n\n    merge(settings: any): void {\n        for (let k in settings) {\n            if (k) {\n                this.settings[k] = settings[k];\n            }\n        }\n        if (this.hasStorage) return this.save();\n    }\n\n    setValue(key: string, value: any): Promise<void> {\n        this.settings[key] = value;\n        return this.hasStorage ? this.storage.set(this.SETTINGS_KEY, this.settings) : Promise.resolve();\n    }\n\n    setAll(value: any): Promise<any> {\n        return this.storage.set(this.SETTINGS_KEY, value);\n    }\n\n    getValue(key: string): any {\n        return this.settings[key];\n    }\n\n    save(): void {\n        this.setAll(this.settings);\n    }\n\n    get allSettings(): any {\n        return this.settings;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {AppVersion} from '@ionic-native/app-version/ngx';\nimport {Device} from '@ionic-native/device/ngx';\nimport {GatewayApi} from '@hrs/providers';\nimport {NGXLogger} from 'ngx-logger';\nimport {Platform} from '@ionic/angular';\nimport {GatewayService} from '@hrs/gateway';\n\n/*\n  The main goal of this class is to provider a custom header field for all requests it should look like\n  \"hrs-user-agent\": \"ClinicianConnectMobile/1.23.23 UUID/1231201231-123-123123j123lj23 iOS/12.01\"\n*/\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserAgentProvider {\n  private _appName: string;\n  private _appVersionNumber: string;\n  private _uuid: string;\n  private _osName: string;\n  private _osVersion: string;\n  private _hrsUserAgentHeader: string;\n\n  constructor(\n      private appVersion: AppVersion,\n      private device: Device,\n      private gatewayApi: GatewayApi,\n      private gatewayService: GatewayService,\n      private logger: NGXLogger,\n      private platform: Platform\n  ) {}\n\n  public getUserAgentInfo(): void {\n      if (this.platform.is('cordova')) {\n          this.getAppName().then(() => {\n              this.getAppVersion().then(() => {\n                  this.getUUID();\n                  this.getOSName();\n                  this.getOSVersion();\n                  this._hrsUserAgentHeader = `${this._appName}/${this._appVersionNumber} UUID/${this._uuid} ${this._osName}/${this._osVersion}`;\n                  this.gatewayApi.hrsUserAgentHeader = this._hrsUserAgentHeader;\n                  this.gatewayService.hrsUserAgentHeader = this._hrsUserAgentHeader;\n              });\n          });\n      }\n  }\n\n  private getAppName(): Promise<void> {\n      return this.appVersion.getAppName().then((name: string) => {\n      // remove whitespace\n          this._appName = name.replace(/\\s/g, '');\n      });\n  }\n\n  private getAppVersion(): Promise<void> {\n      return this.appVersion.getVersionNumber().then((appVersionNumber: string) => {\n          this._appVersionNumber = appVersionNumber;\n      });\n  }\n\n  private getUUID(): void {\n      this._uuid = this.device.uuid;\n  }\n\n  private getOSName() {\n      if (this.platform.is('ios')) {\n          this._osName = 'iOS';\n      } else if (this.platform.is('android')) {\n          this._osName = 'Android';\n      }\n  }\n\n  private getOSVersion() {\n      // there is a .str on this.platform.version but if there is no minor version it reads '9.undefined'\n      // IONIC UPGRADE - this original code was not working with upgrade\n      //   this._osVersion = this.platform.versions().num.toString();\n      this.getAppVersion();\n      this._osVersion = this._appVersionNumber;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Platform, NavController} from '@ionic/angular';\nimport {NGXLogger} from 'ngx-logger';\nimport {GatewayService, TokenResponse} from '@hrs/gateway';\nimport {GatewayApi, TokenService} from '@hrs/providers';\nimport {FirebaseNotifications} from '../firebase/firebase';\nimport {tap} from 'rxjs/operators';\nimport {Settings} from '../settings/settings';\nimport * as jwt from 'jwt-decode';\nimport {Storage} from '@ionic/storage';\nimport {Observable, of, Subject} from 'rxjs';\nimport {Environment} from '@clinician/providers';\nimport {Router} from '@angular/router';\nimport {FormBuilder} from '@angular/forms';\nimport {SessionData} from '../../../../../../libs/interfaces/session-data-response.interface';\nimport {BuildUtility, CollectionUtility} from '@hrs/utility';\n\n/**\n * Most apps have the concept of a User. This is a simple provider\n * with stubs for login/etc.\n *\n * This User provider makes calls to our API at the `login` endpoints.\n *\n * If the `status` field is not `success`, then an error is detected and returned.\n */\n@Injectable({\n    providedIn: 'root',\n})\nexport class User {\n    token: any;\n    static role;\n    static _data: any;\n    data: any;\n    session: SessionData;\n    loggingInSSOSubject: Subject<any> = new Subject();\n    loginResultSubject: Subject<boolean> = new Subject();\n    sourceApp: string;\n\n    constructor(\n        public gatewayApi: GatewayApi,\n        public http: HttpClient,\n        private firebase: FirebaseNotifications,\n        private logger: NGXLogger,\n        private platform: Platform,\n        private settings: Settings,\n        private storage: Storage,\n        private tokenService: TokenService,\n        private navCtrl: NavController,\n        private gateway: GatewayService,\n        private environment: Environment,\n        private router: Router\n    ) {\n        this.sourceApp = 'ClinicianConnect Mobile';\n        this.tokenService.sourceApp = this.sourceApp;\n\n        this.tokenService.refreshTokenSubject.subscribe((tokenData: TokenResponse) => {\n            this.settings.setValue('token', tokenData.attributes.token);\n            this.settings.setValue('refresh', tokenData.attributes.refresh);\n            this.data = jwt(tokenData.attributes.token);\n            this.settings.setValue('userData', this.data);\n        });\n    }\n\n    loadFromSettings(settings: Settings) {\n        const data = settings.getValue('userData');\n        if (data) {\n            this.data = data;\n        }\n        const session = settings.getValue('sessionData');\n        if (session) {\n            this.session = session;\n        }\n    }\n\n    getClinicianName(): string {\n        return this.session.firstname + ' ' + this.session.lastname;\n    }\n\n    canContactPatient() {\n        return (\n            this.data && (\n                this.data.roles.includes('Moderator') ||\n                this.data.roles.includes('Clinician') ||\n                this.data.roles.includes('Pharmacist')\n            )\n        );\n    }\n\n    canEditPatientInfo() {\n        return (\n            this.data && (\n                this.data.roles.includes('Moderator') ||\n                this.data.roles.includes('Clinician')\n            )\n        );\n    }\n\n    isReadOnlyClinician(): boolean {\n        return (\n            this.data && !this.canEditPatientInfo() && this.data.roles.includes('ReadOnly')\n        );\n    }\n\n    isLoggedIn() {\n        return (\n            this.data &&\n            this.data.exp > Math.floor(Date.now() / 1000) &&\n            this.gatewayApi.isLoggedIn()\n        );\n    }\n\n    login(accountInfo) {\n        const credentials = {\n            data: {\n                type: 'credentials',\n                username: accountInfo.user,\n                password: accountInfo.pass,\n                source: this.sourceApp\n            }\n        };\n        return this.loginWithData(credentials);\n    }\n\n    loginWithData(credentials) {\n        let data = this.gatewayApi.login(credentials);\n\n        return data.pipe(\n            tap(\n                {\n                    next: (res: any) => {\n                        let resData = res.data.attributes;\n                        this.data = jwt(resData.token);\n                        if (this.data.type !== 'clinician') {\n                            // Logout user if not of clinician user-type.\n                            this.data.clear();\n                            this.session = undefined;\n                            this.router.navigateByUrl('/welcome');\n                            this.loginResultSubject.next(false);\n                            return;\n                        }\n\n                        // for backwards compatibility subgroups may come in as JSON strings\n                        // this conversion to arrays allows for proper handling of clins with multiple subgroups\n                        this.data.subgroup = CollectionUtility.convertToArray(this.data.subgroup);\n\n                        this.tokenService.storeTokens(res.data);\n\n                        if (this.platform.is('cordova')) {\n                            this.firebase.initializeFirebase(this.data.hrsid);\n                        }\n\n                        let getEnvironmentSubscription = this.environment.getEnvironment().subscribe(() => {\n                            this.settings.setValue('userData', this.data);\n                            this.settings.setValue('token', resData.token);\n                            this.settings.setValue('refresh', resData.refresh);\n                            getEnvironmentSubscription.unsubscribe();\n                        });\n\n                        let getSessionDataSubscription = this.getSessionData().subscribe(() => {\n                            getSessionDataSubscription.unsubscribe();\n                        });\n\n                        this.loginResultSubject.next(true);\n                    },\n                    error: () => {\n                        this.loginResultSubject.next(false);\n                        return of({});\n                    }\n                }\n            ));\n    }\n\n    /**\n     * Fetch for specific information like clinician name that are not included in the login or environment response\n     */\n\n    getSessionData(): Observable<any> {\n        let getDetails = this.gatewayApi.get('apiv2/', {});\n\n        return getDetails.pipe(tap((res: any) => {\n            this.session = res;\n            this.settings.setValue('sessionData', res);\n        }));\n    }\n\n    /**\n     * Log the user out, which forgets the session\n     */\n\n    public async logout(): Promise<void> {\n        if (this.isLoggedIn()) {\n            this.storage.clear();\n            this.data = undefined;\n            this.session = undefined;\n            await this.gatewayApi.logout();\n            if (this.platform.is('cordova')) {\n                this.firebase.deleteInstanceId();\n            }\n            this.router.navigateByUrl('/welcome');\n            // Store Domain so that the changes are not lost on force-kill.\n            const domainName = BuildUtility.getDomainName();\n            const updatedDomain = domainName === 'hrsdomain' ? BuildUtility.getHRSDomain() : domainName;\n            this.storage.set('updatedDomain', updatedDomain);\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {GatewayResourceService, GatewayResponse, VideoSecretsResponse} from '@hrs/gateway';\nimport {User} from '../user/user';\nimport {NGXLogger} from 'ngx-logger';\nimport {Zoom} from '@ionic-native/zoom/ngx';\nimport {catchError, map, Subscription, of} from 'rxjs';\nimport {Platform} from '@ionic/angular';\nimport {Settings} from '../settings/settings';\n\ndeclare var cordova: any;\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ZoomService {\n    public initialized: boolean;\n    private initializing: boolean;\n    private subscription: Subscription;\n\n    constructor(\n        private gateway: GatewayResourceService,\n        private logger: NGXLogger,\n        private user: User,\n        private zoom: Zoom,\n        private platform: Platform,\n        private settings: Settings\n    ) {}\n\n    initialize(callback?: () => void): void {\n        if (this.initialized || this.initializing) {\n            return;\n        }\n        this.initializing = true;\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n        this.subscription = this.gateway.get({endpoint: 'v1/video-secrets'}).pipe(\n            map((res: GatewayResponse<VideoSecretsResponse>) => {\n                let key = res.data.attributes.key;\n                let secret = res.data.attributes.secret;\n\n                if (this.platform.is('cordova') && key && secret) {\n                    this.zoom.initialize(key, secret).then(() => {\n                        this.logger.info('Zoom SDK initialized');\n                        this.initialized = true;\n                        this.initializing = false;\n                        this.zoom.setLocale(this.settings.getValue('language') || 'en');\n                        if (callback) {\n                            callback();\n                        }\n                    }).catch((err) => {\n                        this.logger.error('Error initializing Zoom SDK', err);\n                        this.initializing = false;\n                    });\n                } else {\n                    this.initializing = false;\n                }\n            }),\n            catchError((err) => {\n                this.logger.error(err);\n                this.initializing = false;\n                return of({});\n            })\n        ).subscribe();\n    }\n\n    /**\n     * Method to initialize Zoom SDK. This needs a JWT token which is associated with a meeting number.\n     * Thus before joining a call, we init zoom with this token.\n     * @param jwtToken\n     */\n    public async initWithJWTToken(jwtToken: string): Promise<void> {\n        if (this.platform.is('cordova') && jwtToken ) {\n            await cordova.plugins.Zoom.initializeWithJWT(jwtToken).then((message) => {\n                this.zoom.setLocale(this.settings.getValue('language') || 'en');\n                this.logger.log('Initialized zoom sdk with jwt token');\n            }).catch((err) => {\n                this.logger.error('Error initializing Zoom SDK', err);\n            });\n        } else {\n            this.logger.log('JWT token not present, unable to init zoom');\n        }\n    }\n\n    public joinMeeting(meetingNumber: string, meetingPassword: string, displayName: string) {\n        return this.zoom.joinMeeting(meetingNumber, meetingPassword, displayName, {\n            'no_dial_in_via_phone': true,\n            'no_dial_out_to_phone': true,\n            'participant_id': ''\n        });\n    }\n}\n","import {\n    ActivityEntry,\n    BloodPressureEntry,\n    GlucoseEntry,\n    MedicationEntry,\n    PulseOxEntry,\n    StethoscopeEntry,\n    SurveyEntry,\n    TemperatureEntry,\n    WeightEntry,\n    WoundImageEntry,\n    StepsEntry\n} from './models';\nimport * as moment from 'moment';\nimport {Moment} from 'moment';\nimport {PatientRiskResponse} from '../interfaces/interfaces';\n\nexport const MetricType = {\n    ACTIVITY: 'activity',\n    BLOOD_PRESSURE: 'bloodpressure',\n    GLUCOSE: 'glucose',\n    MEDICATION: 'medication',\n    PULSE_OX: 'pulseox',\n    TEMPERATURE: 'temperature',\n    WEIGHT: 'weight',\n    WOUND_IMAGING: 'woundimaging',\n    STETHOSCOPE: 'stethoscope',\n    SURVEY: 'survey',\n    STEPS: 'steps'\n};\n\nexport class DailyMetricsModel {\n    static init(data) {\n        return new DailyMetricsModel(data);\n    }\n    public date: Moment;\n    public surveyAnswerTotal: number;\n    public medsTakenTotal: number;\n    public activity: ActivityEntry[];\n    public bloodpressure: BloodPressureEntry[];\n    public glucose: GlucoseEntry[];\n    public pulseox: PulseOxEntry[];\n    public temperature: TemperatureEntry[];\n    public weight: WeightEntry[];\n    public stethoscope: StethoscopeEntry[];\n    public survey: SurveyEntry[];\n    public medication: MedicationEntry[];\n    public woundimaging: WoundImageEntry[];\n    public riskClasses: {[key: string]: string};\n    public steps: StepsEntry[];\n\n    constructor(\n        data\n    ) {\n        this.parseMetrics(data.metrics);\n        this.setDate(data);\n        if (data.risk && data.risk.length > 0) {\n            this.getMetricRiskClasses(data.risk[0]);\n        }\n    }\n\n    private setDate(data) {\n        this.date = moment.unix(data.ts / 1000);\n    }\n\n    private parseMetrics(metrics) {\n        if (!metrics) return;\n\n        if (metrics.activity && metrics.activity.data) {\n            this.activity = this.parseEntry(MetricType.ACTIVITY, metrics.activity.data);\n        }\n\n        if (metrics.bloodpressure && metrics.bloodpressure.data) {\n            this.bloodpressure = this.parseEntry(MetricType.BLOOD_PRESSURE, metrics.bloodpressure.data);\n        }\n\n        if (metrics.glucose && metrics.glucose.data) {\n            this.glucose = this.parseEntry(MetricType.GLUCOSE, metrics.glucose.data);\n        }\n\n        if (metrics.medication && metrics.medication.medications) {\n            this.medication = this.parseEntry(MetricType.MEDICATION, metrics.medication.medications);\n        }\n\n        if (metrics.pulseox && metrics.pulseox.data) {\n            this.pulseox = this.parseEntry(MetricType.PULSE_OX, metrics.pulseox.data);\n        }\n        if (metrics.temperature && metrics.temperature.data) {\n            this.temperature = this.parseEntry(MetricType.TEMPERATURE, metrics.temperature.data);\n        }\n\n        if (metrics.weight && metrics.weight.data) {\n            this.weight = this.parseEntry(MetricType.WEIGHT, metrics.weight.data);\n        }\n\n        if (metrics.stethoscope && metrics.stethoscope.data) {\n            this.stethoscope = this.parseEntry(MetricType.STETHOSCOPE, metrics.stethoscope.data);\n        }\n\n        if (metrics.survey && metrics.survey.questions) {\n            this.survey = this.parseEntry(MetricType.SURVEY, metrics.survey.questions);\n        }\n\n        if (metrics.woundimaging && metrics.woundimaging.data) {\n            this.woundimaging = this.parseEntry(MetricType.WOUND_IMAGING, metrics.woundimaging.data);\n        }\n\n        if (metrics.steps && metrics.steps.data) {\n            this.steps = this.parseEntry(MetricType.STEPS, metrics.steps.data);\n        }\n    }\n\n    private parseEntry(type: string, entries) {\n        let entryModels = [];\n        let entryCount = 0;\n        for (let i = 0; i < entries.length; i++) {\n            const currentEntry = entries[i];\n            const entryModel = this.newEntryModel(type, currentEntry);\n            if (currentEntry.deleted) entryModel.deleted = true;\n            if (currentEntry.type === 'manual' || currentEntry.type === 'Manual') entryModel.manual = true;\n            if (type === MetricType.SURVEY && currentEntry.answer) entryCount++;\n            if (type === MetricType.MEDICATION && currentEntry.ts) entryCount++;\n            entryModels.unshift(entryModel);\n        }\n        if (type === MetricType.SURVEY) this.surveyAnswerTotal = entryCount;\n        if (type === MetricType.MEDICATION) this.medsTakenTotal = entryCount;\n        return entryModels;\n    }\n\n    private newEntryModel(type: string, entry) {\n        switch (type) {\n            case MetricType.ACTIVITY:\n                return new ActivityEntry(entry);\n            case MetricType.BLOOD_PRESSURE:\n                return new BloodPressureEntry(entry);\n            case MetricType.GLUCOSE:\n                return new GlucoseEntry(entry);\n            case MetricType.MEDICATION:\n                return new MedicationEntry(entry);\n            case MetricType.PULSE_OX:\n                return new PulseOxEntry(entry);\n            case MetricType.TEMPERATURE:\n                return new TemperatureEntry(entry);\n            case MetricType.WEIGHT:\n                return new WeightEntry(entry);\n            case MetricType.WOUND_IMAGING:\n                return new WoundImageEntry(entry);\n            case MetricType.STETHOSCOPE:\n                return new StethoscopeEntry(entry);\n            case MetricType.SURVEY:\n                return new SurveyEntry(entry);\n            case MetricType.STEPS:\n                return new StepsEntry(entry);\n            default:\n                break;\n        }\n    }\n\n    private getMetricRiskClasses(riskData: PatientRiskResponse): void {\n        const metricClasses = {};\n        if (riskData.details) {\n            let riskDetails = riskData.details;\n            for (let i = 0; i < riskDetails.length; i++) {\n                let metricType = riskDetails[i].metrics[0];\n                metricClasses[metricType + 'Risk'] = riskDetails[i].type;\n            }\n        }\n        this.riskClasses = metricClasses;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class ActivityEntry extends MetricEntry {\n    public duration: number;\n    public unit: string;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.duration = entry.duration;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class BloodPressureEntry extends MetricEntry {\n    public heartrate: number;\n    public systolic: number;\n    public diastolic: number;\n    public map: number;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.heartrate = entry.heartrate;\n        this.systolic = entry.systolic;\n        this.diastolic = entry.diastolic;\n        this.map = BloodPressureEntry.calculateMAP(entry.systolic, entry.diastolic);\n    }\n\n    static calculateMAP(systolic: number, diastolic: number): number {\n        const map = Math.round(((2 * diastolic) + systolic) / 3);\n        return map;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class GlucoseEntry extends MetricEntry {\n    public glucose: number;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.glucose = entry.glucose;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class MedicationEntry extends MetricEntry {\n    public name: string;\n    public dose: number;\n    public schedule: {type: string, schedule: string};\n    public time: string;\n    public ts: number;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.name = entry.med;\n        this.dose = entry.dose;\n        this.schedule = entry.schedule;\n        this.time = entry.time;\n        this.ts = entry.ts;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class PulseOxEntry extends MetricEntry {\n    public spo2: number;\n    public heartrate: number;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.spo2 = entry.spo2;\n        this.heartrate = entry.heartrate;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class StepsEntry extends MetricEntry {\n    public steps: number;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.steps = entry.steps;\n    }\n}\n","import {MetricEntry} from '@clinician/models';\nimport {ConvertTime} from '@hrs/utility';\n\nexport class StethoscopeEntry extends MetricEntry {\n    constructor(entry) {\n        super(ConvertTime.isoToTimestamp(entry.takenAt), entry.id);\n    }\n}\n\n","import {MetricEntry} from '@hrs/models';\n\nexport class TemperatureEntry extends MetricEntry {\n    public temperature: number;\n    public unit: string;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.temperature = entry.temperature;\n        this.unit = entry.unit;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class WeightEntry extends MetricEntry {\n    public weight: number;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n        this.weight = entry.weight;\n    }\n}\n","import {MetricEntry} from '@hrs/models';\n\nexport class WoundImageEntry extends MetricEntry {\n    public imageUrl: string;\n\n    constructor(entry) {\n        super(entry.ts, entry.id);\n    }\n}\n","import {ActivityEntry} from './metric-models/activity-entry.model';\nimport {BloodPressureEntry} from './metric-models/blood-pressure-entry.model';\nimport {GlucoseEntry} from './metric-models/glucose-entry.model';\nimport {MedicationEntry} from './metric-models/medication-entry.model';\nimport {MetricEntry, SurveyEntry} from '@hrs/models';\nimport {Patient} from './patient';\nimport {PatientSettingsResponse} from './patient-settings-response';\nimport {PulseOxEntry} from './metric-models/pulse-ox-entry.model';\nimport {StepsEntry} from './metric-models/steps-entry.model';\nimport {StethoscopeEntry} from './metric-models/stethoscope-entry.model';\nimport {TemperatureEntry} from './metric-models/temperature-entry.model';\nimport {WeightEntry} from './metric-models/weight-entry.model';\nimport {WoundImageEntry} from './metric-models/wound-image-entry.model';\n\nexport {\n    ActivityEntry,\n    BloodPressureEntry,\n    GlucoseEntry,\n    MedicationEntry,\n    MetricEntry,\n    Patient,\n    PatientSettingsResponse,\n    PulseOxEntry,\n    StepsEntry,\n    StethoscopeEntry,\n    SurveyEntry,\n    TemperatureEntry,\n    WeightEntry,\n    WoundImageEntry\n};\n","import * as moment from 'moment';\n\nexport class PatientSettingsResponse {\n    public gender: string;\n    public dob: string;\n    public PATIENTINFO_CUSTOMATTRIBUTES: {[key: string]: any}[];\n    public alternaterelationship: string;\n    public alternatetelephone: string;\n    public alternatelastname: string;\n    public alternatemiddlename: string;\n    public alternatefirstname: string;\n    public audioreminders: boolean;\n    public volume: number;\n    public language: string;\n    public lasthospitalization: string | Date;\n    public testpatient: any | string;\n    public subgroup: any | ((pn: string) => string) | string;\n    public phone: string;\n    public name: {first: string, middle: string, last: string};\n    public pid: string;\n\n    constructor(response) {\n        this.pid = response.data.pid;\n        this.name = response.data.name;\n        this.gender = response.data.gender;\n        this.dob = (response.data.dob ? moment(response.data.dob, 'MM-DD-YYYY').format('MM/DD/YYYY') : null);\n        this.phone = response.data.phone;\n        this.subgroup = response.data.subgroup;\n        this.testpatient = response.data.testpatient ? 'Yes' : 'No';\n        this.language = response.data.language;\n        this.volume = response.data.volume;\n        this.audioreminders = response.data.audioreminders;\n        this.alternatefirstname = response.data.alternatefirstname;\n        this.alternatemiddlename = response.data.alternatemiddlename;\n        this.alternatelastname = response.data.alternatelastname;\n        this.alternatetelephone = response.data.alternatetelephone;\n        this.alternaterelationship = response.data.alternaterelationship;\n        this.PATIENTINFO_CUSTOMATTRIBUTES = response.data.PATIENTINFO_CUSTOMATTRIBUTES;\n        this.lasthospitalization = this.formatLastHospitalization(response);\n    }\n\n    formatLastHospitalization(response): string {\n        // Last Hospitalization timestamp varies between milliseconds and seconds creating issues\n        // Convert all TimeStamp values to milliseconds\n        let lastHospitalization = response.data.lasthospitalization < 10000000000 &&\n        typeof response.data.lasthospitalization === 'number' ?\n            response.data.lasthospitalization * 1000 :\n            response.data.lasthospitalization;\n\n        return response.data.lasthospitalization = lastHospitalization ?\n            moment(new Date(lastHospitalization)).format('MM/DD/YYYY') : null;\n    }\n}\n","import {PatientMetricResponse} from '../interfaces/patient-metric-response.interface';\n\nexport class Patient {\n    // Patient Properties\n    activity?: Activity;\n    audioreminders?: boolean;\n    bloodpressure?: BloodPressure;\n    byodDevice?: boolean;\n    clinician: Clinician;\n    conditions: string[];\n    device?: boolean;\n    edvisit?: number;\n    envphone?: string;\n    expanded: boolean;\n    extension: string;\n    gender: string;\n    hrsid: string;\n    language: string;\n    lastmoduleupdate?: number;\n    medication: object[];\n    name: Name;\n    pid: string;\n    pulseox: number[];\n    readmission: number;\n    reviewLoading?: boolean;\n    reviewedState?: string;\n    reviewed?: any[];\n    risk: object[];\n    riskText?: string;\n    startdate: number;\n    status: string;\n    survey?: Survey;\n    temperature: number[];\n    volume: number;\n    weight: number[];\n    woundimaging: WoundImaging[];\n    metrics: PatientMetricResponse;\n    lastactive?: number;\n    discharged?: string;\n\n    // Conditions Variables\n    conditionsString;\n\n    constructor(data?: Partial<Patient>) {\n        this.set(data);\n        // Quick and dirty extend/assign fields to this model\n        for (const d in data) {\n            // I never see conditions return an array like ['empty'] but i heard its a thing\n            // doing this just in case I am wrong, I<3apiv2\n            if ( d === 'conditions' && data.conditions.length > 0 && data.conditions[0] !== 'empty') {\n                // creates a string of conditions separated with a comma and space\n                this.conditionsString = data[d].join(', ');\n            }\n        }\n    }\n\n    set(data: Partial<Patient>) {\n        Object.assign(this, data);\n    }\n}\n\ninterface Name {\n    first: string;\n    last: string;\n}\n\ninterface Clinician {\n    name: string;\n    hrsid: string;\n}\n\ninterface Survey {\n    questions: object[]\n    time: number;\n    window: number;\n}\n\ninterface Activity {\n    data?: ActivityData[],\n    duration: number,\n    goal: number,\n    ts: number\n}\n\ninterface ActivityData {\n    duration: number,\n    id: string,\n    type: string,\n    ts: number,\n    status: string\n}\n\ninterface WoundImaging {\n    id: string,\n    ts: number,\n    status: string\n}\n\ninterface BloodPressure {\n    data?: BloodPressureData[],\n    diastolic: number,\n    heartrate: number,\n    id: string,\n    status: string,\n    systolic: number,\n    ts: number\n    type: string\n}\n\ninterface BloodPressureData {\n    diastolic: number,\n    heartrate: number,\n    id: string,\n    status: string,\n    systolic: number,\n    ts: number,\n    type: string\n}\n","import {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\nimport {AppModule} from './app/app.module';\nimport {enableProdMode, ViewEncapsulation} from '@angular/core';\nimport {environment} from '@app/env';\n\n// Add `finally()` to `Promise.prototype`\nrequire('promise.prototype.finally').shim();\n\nif (environment.HRS_DOMAIN === 'healthrecoverysolutions.com') {\n    environment.production = true;\n}\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n","import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * Convert gender acronyms to display names.\n */\n@Pipe({\n    name: 'displayGender'\n})\nexport class DisplayGenderPipe implements PipeTransform {\n    transform(value: string): string {\n        switch (value) {\n            case 'F':\n                return 'Female';\n            case 'M':\n                return 'Male';\n            case 'X':\n                return 'Other';\n            case 'U':\n                return 'Unknown';\n            default:\n                return '';\n        }\n    }\n}\n","import {NgModule} from '@angular/core';\n\nimport {DisplayGenderPipe} from './display-gender.pipe';\n\n@NgModule({\n    declarations: [\n        DisplayGenderPipe\n    ],\n    exports: [\n        DisplayGenderPipe\n    ]\n\n})\nexport class PipesModule { }\n"],"sourceRoot":""}