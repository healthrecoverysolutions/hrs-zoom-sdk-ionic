{"version":3,"sources":["/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/tap-click-e6b0a744.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAiD;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,8DAAG;AACnB;AACA;AACA;AACA,gBAAgB,8DAAG;AACnB;AACA;AACA;AACA,cAAc,8DAAG;AACjB;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAG;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,8DAAG;AACjmBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;AAEzB,8C","file":"tap-click-e6b0a744-js-es2015.js","sourcesContent":["import { n as now } from './helpers-0e8d6178.js';\n\nconst ACTION_KEYS = ['Space', 'Enter'];\nconst ACTIVATED = 'is-active';\nconst ADD_ACTIVATED_DEFERS = 200;\nconst CLEAR_STATE_DEFERS = 200;\nconst MOUSE_WAIT = 2500;\nconst KEY_WAIT = 2500;\nconst startTapClick = () => {\n  let lastTouch = -MOUSE_WAIT * 10;\n  let lastActivated = 0;\n  // TODO: what to do about scrolling? (**scrolling)\n  // let scrollingEl: HTMLElement | undefined;\n  let activatableEl;\n  let activeDefer;\n  const clearDefers = new WeakMap();\n  // **scrolling\n  // const isScrolling = () => {\n  //     return scrollingEl !== undefined && scrollingEl.parentElement !== null;\n  // };\n  // Touch Events\n  const onTouchStart = (ev) => {\n    lastTouch = now(ev);\n    pointerDown(ev);\n  };\n  const onTouchEnd = (ev) => {\n    lastTouch = now(ev);\n    pointerUp();\n  };\n  const onMouseDown = (ev) => {\n    const t = now(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerDown(ev);\n    }\n  };\n  const onMouseUp = (ev) => {\n    const t = now(ev) - MOUSE_WAIT;\n    if (lastTouch < t) {\n      pointerUp();\n    }\n  };\n  const onKeyDown = (ev) => {\n    if (!ACTION_KEYS.includes(ev.code))\n      return;\n    const t = now(ev) - KEY_WAIT;\n    if (lastTouch < t) {\n      keyDown(ev);\n    }\n  };\n  const onKeyUp = (ev) => {\n    if (activatableEl) {\n      cancelActive();\n      return;\n    }\n    if (!ACTION_KEYS.includes(ev.code))\n      return;\n    const t = now(ev) - KEY_WAIT;\n    if (lastTouch < t) {\n      keyUp(ev);\n    }\n  };\n  const cancelActive = () => {\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    if (activatableEl) {\n      removeActivated(false);\n      activatableEl = undefined;\n    }\n  };\n  const keyUp = (ev) => {\n    if (activatableEl)\n      return;\n    setActivatedElement(getActivatableTarget(ev));\n  };\n  const keyDown = (ev) => {\n    if (activatableEl)\n      return;\n    setActivatedElement(getActivatableTarget(ev));\n  };\n  const pointerDown = (ev) => {\n    // **scrolling\n    // if (activatableEl || isScrolling()) {\n    if (activatableEl) {\n      return;\n    }\n    // **scrolling\n    // scrollingEl = undefined;\n    setActivatedElement(getActivatableTarget(ev));\n  };\n  const pointerUp = (ev) => {\n    setActivatedElement(undefined);\n  };\n  const setActivatedElement = (el, ev) => {\n    // do nothing\n    if (el && el === activatableEl) {\n      return;\n    }\n    clearTimeout(activeDefer);\n    activeDefer = undefined;\n    // deactivate selected\n    if (activatableEl) {\n      if (clearDefers.has(activatableEl)) {\n        throw new Error('internal error');\n      }\n      if (!activatableEl.classList.contains(ACTIVATED)) {\n        addActivated(activatableEl);\n      }\n      removeActivated(true);\n    }\n    // activate\n    if (el) {\n      const deferId = clearDefers.get(el);\n      if (deferId) {\n        clearTimeout(deferId);\n        clearDefers.delete(el);\n      }\n      const delay = isInstant(el) ? 0 : ADD_ACTIVATED_DEFERS;\n      el.classList.remove(ACTIVATED);\n      activeDefer = setTimeout(() => {\n        addActivated(el);\n        activeDefer = undefined;\n      }, delay);\n    }\n    activatableEl = el;\n  };\n  // TODO: Need x/y if no ripple? Need ripple?\n  // @ts-ignore\n  const addActivated = (el, x, y) => {\n    lastActivated = Date.now();\n    el.classList.add(ACTIVATED);\n  };\n  const removeActivated = (smooth) => {\n    const active = activatableEl;\n    if (!active)\n      return;\n    const time = CLEAR_STATE_DEFERS - Date.now() + lastActivated;\n    if (smooth && time > 0 && !isInstant(active)) {\n      const deferId = setTimeout(() => {\n        active.classList.remove(ACTIVATED);\n        clearDefers.delete(active);\n      }, CLEAR_STATE_DEFERS);\n      clearDefers.set(active, deferId);\n    }\n    else {\n      active.classList.remove(ACTIVATED);\n    }\n  };\n  const doc = document;\n  doc.addEventListener('touchstart', onTouchStart, true);\n  doc.addEventListener('touchcancel', onTouchEnd, true);\n  doc.addEventListener('touchend', onTouchEnd, true);\n  doc.addEventListener('mousedown', onMouseDown, true);\n  doc.addEventListener('mouseup', onMouseUp, true);\n  doc.addEventListener('keydown', onKeyDown, true);\n  doc.addEventListener('keyup', onKeyUp, true);\n};\nconst getActivatableTarget = (ev) => {\n  if (ev.composedPath) {\n    const path = ev.composedPath();\n    for (let i = 0; i < path.length - 2; i++) {\n      const el = path[i];\n      if (el.classList\n        && el.classList.contains('hrs-activatable')\n        && !el.getAttribute('aria-disabled')) {\n        return el;\n      }\n    }\n  }\n  else {\n    return ev.target.closest('.hrs-activatable');\n  }\n};\nconst isInstant = (el) => {\n  return el.classList.contains('hrs-activatable-instant');\n};\n\nexport { startTapClick };\n\n//# sourceMappingURL=tap-click-e6b0a744.js.map"],"sourceRoot":""}