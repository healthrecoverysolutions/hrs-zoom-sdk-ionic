{"version":3,"sources":["/Users/anubhavsaxena/Documents/Impetus_Projects/Angular_Monorepo_GitLab_Copy/angular-monorepo/node_modules/@hrsui/angular/node_modules/@hrsui/core/dist/esm/hrs-icon.entry.js"],"names":[],"mappings":"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","file":"55-es5.js","sourcesContent":["import { e as getAssetPath, r as registerInstance, h, H as Host, g as getElement } from './index-be85d80d.js';\nimport { g as getHrsMode } from './ui-config-8be75a31.js';\nimport { g as getHrsColorProperty } from './_interfaces-25607e25.js';\n\nconst iconCache = new Map();\nconst getRelativeUrl = () => {\n  let origin = window.location.origin;\n  // Check if context is storybook dev server, if so, specify static assets location\n  if (/3000/.test(origin) && /story/.test(window.location.href)) {\n    origin = origin.replace('3000', '3002');\n  }\n  return origin;\n};\nasync function fetchIcon(icon) {\n  let iconInterface = iconCache.get(icon);\n  if (iconInterface)\n    return iconInterface;\n  const relativeUrl = getRelativeUrl();\n  const path = relativeUrl + getAssetPath(`/assets/icons/${icon}.json`);\n  const iconRequest = fetch(path)\n    .then((res) => res.json())\n    .then((iconParsed) => iconInterface = iconParsed)\n    .catch((err) => console.error(`${icon} is not a valid icon `, err));\n  await iconRequest;\n  iconCache.set(icon, iconInterface);\n  return iconInterface;\n}\n\nconst iconNewDesignCss = \"@font-face{font-display:swap;font-family:\\\"Roboto\\\";font-style:normal;font-weight:400;src:url(\\\"../fonts/Roboto/light.woff\\\") format(\\\"woff\\\")}@font-face{font-display:swap;font-family:\\\"Roboto\\\";font-style:normal;font-weight:500;src:url(\\\"../fonts/Roboto/regular.woff\\\") format(\\\"woff\\\")}@font-face{font-display:swap;font-family:\\\"Roboto\\\";font-style:normal;font-weight:700;src:url(\\\"../fonts/Roboto/bold.woff\\\") format(\\\"woff\\\")}:root{--shadow-sm:0 3px 6px 0 rgba(var(--color-shadow), .3);--shadow-md:0 3px 12px 0 rgba(var(--color-shadow), .6);--shadow-lg:0 3px 18px 0 rgba(var(--color-shadow), .6);--shadow-header:0 0 8px -5px rgba(var(--color-shadow), .6);--shadow-footer:-1px 0 12px -3px rgba(var(--color-shadow), .6);--shadow-inset-input:inset 0 1px 2px rgba(0, 0, 0, .39), 0 -1px 1px var(--white), 0 1px 0 var(--white);--shadow-focus-outline:0 0 0 4px var(--color-outline);--shadow-focus-invalid:0 0 1px 2px var(--color-error);--shadow-hover-tab:0 4px 0 0 var(--gray-8);--shadow-selected-tab:0 4px 0 0 var(--color-primary-dark)}:host{font-family:var(--font)}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;text-size-adjust:100%;}body{margin:0;}main{display:block}h1{margin:0.67em 0;font-size:2em;}hr{overflow:visible;height:0;box-sizing:content-box;}pre{font-family:monospace, monospace;font-size:1em;}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;}b,strong{font-weight:bolder;}code,kbd,samp{font-family:monospace, monospace;font-size:1em;}small{font-size:80%}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0;}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:0.35em 0.75em 0.625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal;}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0;}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{appearance:textfield;outline-offset:-2px;}[type=search]::-webkit-search-decoration{appearance:none}::-webkit-file-upload-button{appearance:button;font:inherit;}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}.sronly{border:0;clip:rect(0, 0, 0, 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}:host{--color-primary:#0073af;--color-primary-dark:#00538d;--color-primary-light:#0197d6;--color-primary-50:rgba(0, 115, 175, .5);--color-primary-30:rgba(0, 115, 175, .3);--color-accent:#721c7e;--color-accent-dark:#56156f;--color-accent-light:#92278f;--white:#fff;--white-90:rgba(255, 255, 255, .9);--white-80:rgba(255, 255, 255, .8);--white-70:rgba(255, 255, 255, .7);--white-60:rgba(255, 255, 255, .6);--white-50:rgba(255, 255, 255, .5);--white-40:rgba(255, 255, 255, .4);--white-30:rgba(255, 255, 255, .3);--white-20:rgba(255, 255, 255, .2);--white-10:rgba(255, 255, 255, .1);--white-05:rgba(255, 255, 255, .05);--gray-1:#fcfcfc;--gray-2:#f5f5f5;--gray-3:#eee;--gray-4:#e0e0e0;--gray-5:#bdbdbd;--gray-6:#9e9e9e;--gray-7:#757575;--gray-8:#616161;--gray-9:#424242;--gray-10:#323232;--black:#212121;--color-sub-light:var(--gray-3);--color-sub-dark:var(--gray-7);--color-success:#0a853b;--color-info:#115ffb;--color-warning:#eb7100;--color-error:#ab1300;--color-risk-none:#5a7c79;--color-risk-low:#0ea84b;--color-risk-medium:var(--color-warning);--color-risk-high:#c62360;--color-notifications:#df1642;--color-congratulations:#ebb700;--color-great-job:#0ea84b;--color-focused-state:#56156f;--color-focused-state-bg:rgba(86, 21, 111, .6);--gradient-color-stop-1:var(--white);--gradient-color-stop-2:var(--color-primary-dark);--gradient-background:linear-gradient(180deg, var(--gradient-color-stop-1) 0%, var(--gradient-color-stop-2) 100%);--sidebar-gradient:linear-gradient(0deg, var(--color-primary-dark), var(--color-primary), var(--white));--color-shadow:0, 0, 0,;--color-backdrop:0, 0, 0, .4}:host{--font:\\\"Open Sans\\\", sans-serif;--font-weight-bold:700;--font-weight-semibold:600;--font-weight-regular:400}@media screen and (max-width: 599px){:host{--font-size-h1:1.25rem;--font-size-h2:1rem;--font-size-h3:.75rem;--font-size-b1:1rem;--font-size-b2:.875rem;--font-size-button:1rem;--line-height-h1:1.75rem;--line-height-h2:1.25rem;--line-height-h3:1rem;--line-height-b1:1.25rem;--line-height-b2:1.25rem;--line-height-button:1.25rem}}@media screen and (min-width: 600px){:host{--font-size-h1:1.75rem;--font-size-h2:1.25rem;--font-size-h3:1rem;--font-size-b1:1.25rem;--font-size-b2:1rem;--font-size-button:1.5rem;--line-height-h1:2.25rem;--line-height-h2:1.75rem;--line-height-h3:1.25rem;--line-height-b1:1.75rem;--line-height-b2:1.25rem;--line-height-button:1.75rem}}:host{--box-shadow-01:0 2px 6px rgba(var(--color-shadow) .2);--box-shadow-02:0 -2px 6px rgba(var(--color-shadow) .2);--box-shadow-03:0 4px 5px rgba(var(--color-shadow) .14), 0 1px 10px rgba(var(--color-shadow) .12), 0 2px 4px rgba(var(--color-shadow) .2);--box-shadow-04:5px 0 6px rgba(var(--color-shadow) .14);--box-shadow-05:0 4px 12px rgba(var(--color-shadow) .2);--box-shadow-06:inset 0 4px 4px rgba(var(--color-shadow) .25);--box-shadow-focus:0 0 0 4px var(--color-focused-state-bg)}:host{--icon-stroke-width:32px;--icon-size:1.7rem;--icon-color:var(--color-accent);--icon-set-color:var(--black);display:inline-block;box-sizing:border-box;width:var(--icon-size);height:var(--icon-size);color:var(--icon-color);stroke-width:var(--icon-stroke-width);contain:strict;fill:currentColor}:host(.has-color-set){--icon-color:var(--icon-set-color)}:host .hrs-icon{stroke:currentColor}:host-context(hrs-button){--icon-color:inherit}.icon-inner,.hrs-icon,svg{display:flex;height:var(--icon-size);width:var(--icon-size)}svg>path{margin:auto}:host{--icon-color:var(--black)}\";\n\nconst Icon = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.iconId = `hrs-icon-${iconIds++}`;\n    this.visible = false;\n    /**\n     * Sets the color from selection of HRS approved color strings\n     */\n    this.color = 'black';\n  }\n  async loadIconPathData() {\n    let { icon, visible } = this;\n    if (!/^icon-/.test(icon))\n      icon = `icon-${icon}`;\n    if (!icon || !visible)\n      return;\n    fetchIcon(icon)\n      .then((iconInterface) => this.currentIcon = iconInterface);\n  }\n  connectedCallback() {\n    this.waitUntilVisible(() => {\n      this.visible = true;\n      this.loadIconPathData();\n    });\n  }\n  disconnectedCallback() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n      this.intersectionObserver = null;\n    }\n  }\n  waitUntilVisible(callback) {\n    if (typeof window === 'undefined' ||\n      !window.IntersectionObserver) {\n      callback();\n      return;\n    }\n    this.intersectionObserver = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          this.intersectionObserver.disconnect();\n          this.intersectionObserver = null;\n          callback();\n        }\n      });\n    }, { rootMargin: '50px' });\n    this.intersectionObserver.observe(this.el);\n  }\n  render() {\n    if (this.icon) {\n      const contextMode = getHrsMode();\n      const iconTitle = this.icon.replace('-', ' ');\n      const { color, currentIcon, iconId, qa, } = this;\n      const hasColorSet = color !== 'black';\n      const colorProperty = hasColorSet ? getHrsColorProperty(color) : null;\n      if (currentIcon) {\n        return (h(Host, { mode: contextMode, \"data-qa\": qa || null, id: iconId, role: \"img\", \"aria-label\": iconTitle, class: {\n            'has-color-set': hasColorSet,\n          }, style: {\n            ['--icon-set-color']: `var(${colorProperty})`\n          } }, h(\"svg\", { xmlns: \"http://www.w3.org/2000/svg\", fill: \"currentColor\", viewBox: \"0 0 28 28\", preserveAspectRatio: \"xMidYMid slice\" }, h(\"title\", null, iconTitle), h(\"path\", { \"aria-hidden\": \"true\", d: currentIcon.path || '', transform: this.currentIcon.transform }))));\n      }\n    }\n  }\n  static get assetsDirs() { return [\"assets/icons\"]; }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"icon\": [\"loadIconPathData\"]\n  }; }\n};\nlet iconIds = 0;\nIcon.style = {\n  newDesign: iconNewDesignCss\n};\n\nexport { Icon as hrs_icon };\n\n//# sourceMappingURL=hrs-icon.entry.js.map"],"sourceRoot":""}